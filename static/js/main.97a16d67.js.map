{"version":3,"file":"static/js/main.97a16d67.js","mappings":"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","sources":["../node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/long/src/long.js","../node_modules/protobufjs/minimal.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/reflect-metadata/Reflect.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@snap/camera-kit/src/common/locale.ts","../node_modules/@snap/camera-kit/src/common/cameraKitUserAgent.ts","../node_modules/@snap/camera-kit/src/common/copyDefinedProperties.ts","../node_modules/@snap/camera-kit/src/dependency-injection/Injectable.ts","../node_modules/@snap/camera-kit/src/configuration.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/wasm-feature-detect/dist/esm/index.js","../node_modules/@snap/camera-kit/src/common/loadScript.ts","../node_modules/@snap/camera-kit/src/common/typeguards.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@snap/camera-kit/src/handlers/HandlerChainBuilder.ts","../node_modules/@snap/camera-kit/src/logger/logger.ts","../node_modules/@snap/camera-kit/src/handlers/noCorsRetryingFetchHandler.ts","../node_modules/@snap/camera-kit/src/handlers/retryingHandler.ts","../node_modules/@snap/camera-kit/src/handlers/timeoutHandler.ts","../node_modules/@snap/camera-kit/src/handlers/defaultFetchHandler.ts","../node_modules/@snap/camera-kit/src/handlers/debugHandler.ts","../node_modules/@snap/camera-kit/src/lens-core-module/loader/lensCoreFactory.ts","../node_modules/@snap/camera-kit/src/common/errors.ts","../node_modules/@snap/camera-kit/src/benchmark/webglUtils.ts","../node_modules/@snap/camera-kit/src/benchmark/benchmarkGflops.ts","../node_modules/@snap/camera-kit/src/benchmark/estimateLensPerformanceCluster.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@snap/camera-kit/src/common/validate.ts","../node_modules/@snap/camera-kit/src/handlers/headersModifyingFetchHandler.ts","../node_modules/@snap/camera-kit/src/handlers/cameraKitServiceFetchHandlerFactory.ts","../node_modules/@snap/camera-kit/src/extensions/LensSources.ts","../node_modules/@snap/camera-kit/src/common/assertions.ts","../node_modules/@snap/camera-kit/src/lens/Lens.ts","../node_modules/@snap/camera-kit/src/lens/lensHttpUtil.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/google/protobuf/any.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/lens.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/export.ts","../node_modules/@snap/camera-kit/src/lens/lensEnvelopeUtil.ts","../node_modules/@snap/camera-kit/src/lens/LensRepository.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@snap/camera-kit/src/common/memoize.ts","../node_modules/@snap/camera-kit/src/common/entries.ts","../node_modules/@snap/camera-kit/src/dependency-injection/PartialContainer.ts","../node_modules/@snap/camera-kit/src/dependency-injection/Container.ts","../node_modules/@snap/camera-kit/src/common/time.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@snap/camera-kit/src/events/TypedCustomEvent.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/benchmark_name.ts","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@snap/camera-kit/src/events/TypedEventTarget.ts","../node_modules/@snap/camera-kit/src/handlers/requestStateEmittingHandler.ts","../node_modules/@snap/camera-kit/src/session/LensContext.ts","../node_modules/@snap/camera-kit/src/session/sessionStateEventTarget.ts","../node_modules/@snapchat/configs-web/node_modules/tslib/tslib.es6.js","../node_modules/@snapchat/configs-web/src/generated/google/protobuf/timestamp.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/benchmark.ts","../node_modules/@snapchat/configs-web/src/generated/common/ruid.ts","../node_modules/@snapchat/configs-web/src/generated/google/protobuf/wrappers.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/config_request.ts","../node_modules/@snapchat/configs-web/src/generated/google/protobuf/any.ts","../node_modules/@snapchat/configs-web/src/generated/common/value.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/config_result.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/config_response.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/namespace.ts","../node_modules/@snapchat/configs-web/src/targeting_evaluation/evaluator.ts","../node_modules/@snapchat/configs-web/node_modules/browser-headers/dist/browser-headers.js","../node_modules/@snapchat/configs-web/src/grpc-wrappers/grpcWeb.ts","../node_modules/@snapchat/configs-web/src/grpc-wrappers/initConfigsClient.ts","../node_modules/@snapchat/configs-web/src/grpc-wrappers/targetingQuery.ts","../node_modules/@snapchat/configs-web/src/generated/ab_service/common/guid.ts","../node_modules/@snapchat/configs-web/src/generated/cdp/cof/debug_info.ts","../node_modules/@snapchat/configs-web/src/generated/google/protobuf/descriptor.ts","../node_modules/@snapchat/configs-web/src/generated/ab_service/ab_config_service.ts","../node_modules/@snapchat/configs-web/src/generated/ab_service/exposure_service.ts","../node_modules/@snapchat/configs-web/src/react/context.tsx","../node_modules/@snapchat/configs-web/src/react/ConfigProvider.tsx","../node_modules/@snapchat/configs-web/src/react/useConfigValue.ts","../node_modules/@snap/camera-kit/src/handlers/arrayBufferParsingHandler.ts","../node_modules/@snap/camera-kit/src/persistence/Persistence.ts","../node_modules/@snap/camera-kit/src/persistence/IndexedDBPersistence.ts","../node_modules/@snap/camera-kit/src/handlers/staleIfErrorCachingHandler.ts","../node_modules/@snap/camera-kit/src/handlers/cofHandler.ts","../node_modules/@snap/camera-kit/src/lens/assets/deviceDependentAssetLoader.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/snappable.ts","../node_modules/@snap/camera-kit/src/lens/assets/remoteMediaAssetLoaderFactory.ts","../node_modules/@snap/camera-kit/src/lens/assets/staticAssetLoader.ts","../node_modules/@snap/camera-kit/src/lens/assets/LensAssetsProvider.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/geopoint.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/geocircle.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/lures.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/google/protobuf/timestamp.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/user_data.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/persistent_store.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/launch_params.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/lenses/launchdata.ts","../node_modules/@snap/camera-kit/src/lens/LensLaunchParams.ts","../node_modules/@snap/camera-kit/src/common/pageVisibility.ts","../node_modules/@snap/camera-kit/src/transforms/Transform2D.ts","../node_modules/@snap/camera-kit/src/media-sources/CameraKitSource.ts","../node_modules/@snap/camera-kit/src/media-sources/MediaStreamSource.ts","../node_modules/@snap/camera-kit/src/media-sources/VideoSource.ts","../node_modules/@snap/camera-kit/src/metrics/FrameProcessingMetrics.ts","../node_modules/@snap/camera-kit/src/session/CameraKitSession.ts","../node_modules/@snap/camera-kit/src/extensions/UriHandlers.ts","../node_modules/@snap/camera-kit/src/metrics/metricsEventTarget.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@snap/camera-kit/src/generated-proto/blizzard/cameraKitEvents.ts","../node_modules/@snap/camera-kit/src/handlers/mappingHandler.ts","../node_modules/@snap/camera-kit/src/handlers/batchingHandler.ts","../node_modules/@snap/camera-kit/src/handlers/rateLimitingHandler.ts","../node_modules/@snap/camera-kit/src/metrics/metricsHandler.ts","../node_modules/@snap/camera-kit/src/metrics/businessEventsReporter.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/operational_metrics.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/business_events.ts","../node_modules/@snap/camera-kit/src/generated-proto/pb_schema/camera_kit/v3/service.ts","../node_modules/@snap/camera-kit/src/metrics/operationalMetricsReporter.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportBenchmarks.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportException.ts","../node_modules/@snap/camera-kit/src/events/scan.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportLensAndAssetDownload.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportHttpMetrics.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportLensOrAssetValidationFailed.ts","../node_modules/@snap/camera-kit/src/events/nextEvent.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportLensView.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportLensWait.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reporters.ts","../node_modules/@snap/camera-kit/src/metrics/reporters/reportUserSession.ts","../node_modules/@snap/camera-kit/src/CameraKit.ts","../node_modules/@snap/camera-kit/src/assertPlatformSupported.ts","../node_modules/@snap/camera-kit/src/bootstrapCameraKit.ts","../node_modules/@snap/camera-kit/src/extensions/extensionRequestContext.ts","../node_modules/@snap/camera-kit/src/index.ts","index.tsx"],"sourcesContent":["!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)(\"object\"==typeof exports?exports:e)[n]=r[n]}}(this,(function(){return e={418:function(e,t){!function(e,t){for(var r in t)e[r]=t[r]}(t,function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(3),o=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={splitValues:!1});var r,o=this;this.headersMap={},e&&(\"undefined\"!=typeof Headers&&e instanceof Headers?n.getHeaderKeys(e).forEach((function(r){n.getHeaderValues(e,r).forEach((function(e){t.splitValues?o.append(r,n.splitHeaderValue(e)):o.append(r,e)}))})):\"object\"==typeof(r=e)&&\"object\"==typeof r.headersMap&&\"function\"==typeof r.forEach?e.forEach((function(e,t){o.append(e,t)})):\"undefined\"!=typeof Map&&e instanceof Map?e.forEach((function(e,t){o.append(t,e)})):\"string\"==typeof e?this.appendFromString(e):\"object\"==typeof e&&Object.getOwnPropertyNames(e).forEach((function(t){var r=e[t];Array.isArray(r)?r.forEach((function(e){o.append(t,e)})):o.append(t,r)})))}return e.prototype.appendFromString=function(e){for(var t=e.split(\"\\r\\n\"),r=0;r<t.length;r++){var n=t[r],o=n.indexOf(\":\");if(o>0){var s=n.substring(0,o).trim(),i=n.substring(o+1).trim();this.append(s,i)}}},e.prototype.delete=function(e,t){var r=n.normalizeName(e);if(void 0===t)delete this.headersMap[r];else{var o=this.headersMap[r];if(o){var s=o.indexOf(t);s>=0&&o.splice(s,1),0===o.length&&delete this.headersMap[r]}}},e.prototype.append=function(e,t){var r=this,o=n.normalizeName(e);Array.isArray(this.headersMap[o])||(this.headersMap[o]=[]),Array.isArray(t)?t.forEach((function(e){r.headersMap[o].push(n.normalizeValue(e))})):this.headersMap[o].push(n.normalizeValue(t))},e.prototype.set=function(e,t){var r=n.normalizeName(e);if(Array.isArray(t)){var o=[];t.forEach((function(e){o.push(n.normalizeValue(e))})),this.headersMap[r]=o}else this.headersMap[r]=[n.normalizeValue(t)]},e.prototype.has=function(e,t){var r=this.headersMap[n.normalizeName(e)];if(!Array.isArray(r))return!1;if(void 0!==t){var o=n.normalizeValue(t);return r.indexOf(o)>=0}return!0},e.prototype.get=function(e){var t=this.headersMap[n.normalizeName(e)];return void 0!==t?t.concat():[]},e.prototype.forEach=function(e){var t=this;Object.getOwnPropertyNames(this.headersMap).forEach((function(r){e(r,t.headersMap[r])}),this)},e.prototype.toHeaders=function(){if(\"undefined\"!=typeof Headers){var e=new Headers;return this.forEach((function(t,r){r.forEach((function(r){e.append(t,r)}))})),e}throw new Error(\"Headers class is not defined\")},e}();t.BrowserHeaders=o},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(0);t.BrowserHeaders=n.BrowserHeaders},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.iterateHeaders=function(e,t){for(var r=e[Symbol.iterator](),n=r.next();!n.done;)t(n.value[0]),n=r.next()},t.iterateHeadersKeys=function(e,t){for(var r=e.keys(),n=r.next();!n.done;)t(n.value),n=r.next()}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=r(2);t.normalizeName=function(e){if(\"string\"!=typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(e))throw new TypeError(\"Invalid character in header field name\");return e.toLowerCase()},t.normalizeValue=function(e){return\"string\"!=typeof e&&(e=String(e)),e},t.getHeaderValues=function(e,t){var r=e;if(r instanceof Headers&&r.getAll)return r.getAll(t);var n=r.get(t);return n&&\"string\"==typeof n?[n]:n},t.getHeaderKeys=function(e){var t=e,r={},o=[];return t.keys?n.iterateHeadersKeys(t,(function(e){r[e]||(r[e]=!0,o.push(e))})):t.forEach?t.forEach((function(e,t){r[t]||(r[t]=!0,o.push(t))})):n.iterateHeaders(t,(function(e){var t=e[0];r[t]||(r[t]=!0,o.push(t))})),o},t.splitHeaderValue=function(e){var t=[];return e.split(\", \").forEach((function(e){e.split(\",\").forEach((function(e){t.push(e)}))})),t}}]))},617:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChunkParser=t.ChunkType=t.encodeASCII=t.decodeASCII=void 0;var n,o=r(65);function s(e){return 9===(t=e)||10===t||13===t||e>=32&&e<=126;var t}function i(e){for(var t=0;t!==e.length;++t)if(!s(e[t]))throw new Error(\"Metadata is not valid (printable) ASCII\");return String.fromCharCode.apply(String,Array.prototype.slice.call(e))}function a(e){return 128==(128&e.getUint8(0))}function u(e){return e.getUint32(1,!1)}function d(e,t,r){return e.byteLength-t>=r}function c(e,t,r){if(e.slice)return e.slice(t,r);var n=e.length;void 0!==r&&(n=r);for(var o=new Uint8Array(n-t),s=0,i=t;i<n;i++)o[s++]=e[i];return o}t.decodeASCII=i,t.encodeASCII=function(e){for(var t=new Uint8Array(e.length),r=0;r!==e.length;++r){var n=e.charCodeAt(r);if(!s(n))throw new Error(\"Metadata contains invalid ASCII\");t[r]=n}return t},function(e){e[e.MESSAGE=1]=\"MESSAGE\",e[e.TRAILERS=2]=\"TRAILERS\"}(n=t.ChunkType||(t.ChunkType={}));var p=function(){function e(){this.buffer=null,this.position=0}return e.prototype.parse=function(e,t){if(0===e.length&&t)return[];var r,s=[];if(null==this.buffer)this.buffer=e,this.position=0;else if(this.position===this.buffer.byteLength)this.buffer=e,this.position=0;else{var p=this.buffer.byteLength-this.position,h=new Uint8Array(p+e.byteLength),f=c(this.buffer,this.position);h.set(f,0);var l=new Uint8Array(e);h.set(l,p),this.buffer=h,this.position=0}for(;;){if(!d(this.buffer,this.position,5))return s;var g=c(this.buffer,this.position,this.position+5),b=new DataView(g.buffer,g.byteOffset,g.byteLength),y=u(b);if(!d(this.buffer,this.position,5+y))return s;var v=c(this.buffer,this.position+5,this.position+5+y);if(this.position+=5+y,a(b))return s.push({chunkType:n.TRAILERS,trailers:(r=v,new o.Metadata(i(r)))}),s;s.push({chunkType:n.MESSAGE,data:v})}},e}();t.ChunkParser=p},8:function(e,t){\"use strict\";var r;Object.defineProperty(t,\"__esModule\",{value:!0}),t.httpStatusToCode=t.Code=void 0,function(e){e[e.OK=0]=\"OK\",e[e.Canceled=1]=\"Canceled\",e[e.Unknown=2]=\"Unknown\",e[e.InvalidArgument=3]=\"InvalidArgument\",e[e.DeadlineExceeded=4]=\"DeadlineExceeded\",e[e.NotFound=5]=\"NotFound\",e[e.AlreadyExists=6]=\"AlreadyExists\",e[e.PermissionDenied=7]=\"PermissionDenied\",e[e.ResourceExhausted=8]=\"ResourceExhausted\",e[e.FailedPrecondition=9]=\"FailedPrecondition\",e[e.Aborted=10]=\"Aborted\",e[e.OutOfRange=11]=\"OutOfRange\",e[e.Unimplemented=12]=\"Unimplemented\",e[e.Internal=13]=\"Internal\",e[e.Unavailable=14]=\"Unavailable\",e[e.DataLoss=15]=\"DataLoss\",e[e.Unauthenticated=16]=\"Unauthenticated\"}(r=t.Code||(t.Code={})),t.httpStatusToCode=function(e){switch(e){case 0:return r.Internal;case 200:return r.OK;case 400:return r.InvalidArgument;case 401:return r.Unauthenticated;case 403:return r.PermissionDenied;case 404:return r.NotFound;case 409:return r.Aborted;case 412:return r.FailedPrecondition;case 429:return r.ResourceExhausted;case 499:return r.Canceled;case 500:return r.Unknown;case 501:return r.Unimplemented;case 503:return r.Unavailable;case 504:return r.DeadlineExceeded;default:return r.Unknown}}},934:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.client=void 0;var n=r(65),o=r(617),s=r(8),i=r(346),a=r(57),u=r(882);t.client=function(e,t){return new d(e,t)};var d=function(){function e(e,t){this.started=!1,this.sentFirstMessage=!1,this.completed=!1,this.closed=!1,this.finishedSending=!1,this.onHeadersCallbacks=[],this.onMessageCallbacks=[],this.onEndCallbacks=[],this.parser=new o.ChunkParser,this.methodDefinition=e,this.props=t,this.createTransport()}return e.prototype.createTransport=function(){var e=this.props.host+\"/\"+this.methodDefinition.service.serviceName+\"/\"+this.methodDefinition.methodName,t={methodDefinition:this.methodDefinition,debug:this.props.debug||!1,url:e,onHeaders:this.onTransportHeaders.bind(this),onChunk:this.onTransportChunk.bind(this),onEnd:this.onTransportEnd.bind(this)};this.props.transport?this.transport=this.props.transport(t):this.transport=a.makeDefaultTransport(t)},e.prototype.onTransportHeaders=function(e,t){if(this.props.debug&&i.debug(\"onHeaders\",e,t),this.closed)this.props.debug&&i.debug(\"grpc.onHeaders received after request was closed - ignoring\");else if(0===t);else{this.responseHeaders=e,this.props.debug&&i.debug(\"onHeaders.responseHeaders\",JSON.stringify(this.responseHeaders,null,2));var r=c(e);this.props.debug&&i.debug(\"onHeaders.gRPCStatus\",r);var n=r&&r>=0?r:s.httpStatusToCode(t);this.props.debug&&i.debug(\"onHeaders.code\",n);var o=e.get(\"grpc-message\")||[];if(this.props.debug&&i.debug(\"onHeaders.gRPCMessage\",o),this.rawOnHeaders(e),n!==s.Code.OK){var a=this.decodeGRPCStatus(o[0]);this.rawOnError(n,a,e)}}},e.prototype.onTransportChunk=function(e){var t=this;if(this.closed)this.props.debug&&i.debug(\"grpc.onChunk received after request was closed - ignoring\");else{var r=[];try{r=this.parser.parse(e)}catch(e){return this.props.debug&&i.debug(\"onChunk.parsing error\",e,e.message),void this.rawOnError(s.Code.Internal,\"parsing error: \"+e.message)}r.forEach((function(e){if(e.chunkType===o.ChunkType.MESSAGE){var r=t.methodDefinition.responseType.deserializeBinary(e.data);t.rawOnMessage(r)}else e.chunkType===o.ChunkType.TRAILERS&&(t.responseHeaders?(t.responseTrailers=new n.Metadata(e.trailers),t.props.debug&&i.debug(\"onChunk.trailers\",t.responseTrailers)):(t.responseHeaders=new n.Metadata(e.trailers),t.rawOnHeaders(t.responseHeaders)))}))}},e.prototype.onTransportEnd=function(){if(this.props.debug&&i.debug(\"grpc.onEnd\"),this.closed)this.props.debug&&i.debug(\"grpc.onEnd received after request was closed - ignoring\");else if(void 0!==this.responseTrailers){var e=c(this.responseTrailers);if(null!==e){var t=this.responseTrailers.get(\"grpc-message\"),r=this.decodeGRPCStatus(t[0]);this.rawOnEnd(e,r,this.responseTrailers)}else this.rawOnError(s.Code.Internal,\"Response closed without grpc-status (Trailers provided)\")}else{if(void 0===this.responseHeaders)return void this.rawOnError(s.Code.Unknown,\"Response closed without headers\");var n=c(this.responseHeaders),o=this.responseHeaders.get(\"grpc-message\");if(this.props.debug&&i.debug(\"grpc.headers only response \",n,o),null===n)return void this.rawOnEnd(s.Code.Unknown,\"Response closed without grpc-status (Headers only)\",this.responseHeaders);var a=this.decodeGRPCStatus(o[0]);this.rawOnEnd(n,a,this.responseHeaders)}},e.prototype.decodeGRPCStatus=function(e){if(!e)return\"\";try{return decodeURIComponent(e)}catch(t){return e}},e.prototype.rawOnEnd=function(e,t,r){var n=this;this.props.debug&&i.debug(\"rawOnEnd\",e,t,r),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(o){if(!n.closed)try{o(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnHeaders=function(e){this.props.debug&&i.debug(\"rawOnHeaders\",e),this.completed||this.onHeadersCallbacks.forEach((function(t){try{t(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.rawOnError=function(e,t,r){var o=this;void 0===r&&(r=new n.Metadata),this.props.debug&&i.debug(\"rawOnError\",e,t),this.completed||(this.completed=!0,this.onEndCallbacks.forEach((function(n){if(!o.closed)try{n(e,t,r)}catch(e){setTimeout((function(){throw e}),0)}})))},e.prototype.rawOnMessage=function(e){var t=this;this.props.debug&&i.debug(\"rawOnMessage\",e.toObject()),this.completed||this.closed||this.onMessageCallbacks.forEach((function(r){if(!t.closed)try{r(e)}catch(e){setTimeout((function(){throw e}),0)}}))},e.prototype.onHeaders=function(e){this.onHeadersCallbacks.push(e)},e.prototype.onMessage=function(e){this.onMessageCallbacks.push(e)},e.prototype.onEnd=function(e){this.onEndCallbacks.push(e)},e.prototype.start=function(e){if(this.started)throw new Error(\"Client already started - cannot .start()\");this.started=!0;var t=new n.Metadata(e||{});t.set(\"content-type\",\"application/grpc-web+proto\"),t.set(\"x-grpc-web\",\"1\"),this.transport.start(t)},e.prototype.send=function(e){if(!this.started)throw new Error(\"Client not started - .start() must be called before .send()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .send()\");if(!this.methodDefinition.requestStream&&this.sentFirstMessage)throw new Error(\"Message already sent for non-client-streaming method - cannot .send()\");this.sentFirstMessage=!0;var t=u.frameRequest(e);this.transport.sendMessage(t)},e.prototype.finishSend=function(){if(!this.started)throw new Error(\"Client not started - .finishSend() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .send()\");if(this.finishedSending)throw new Error(\"Client already finished sending - cannot .finishSend()\");this.finishedSending=!0,this.transport.finishSend()},e.prototype.close=function(){if(!this.started)throw new Error(\"Client not started - .start() must be called before .close()\");if(this.closed)throw new Error(\"Client already closed - cannot .close()\");this.closed=!0,this.props.debug&&i.debug(\"request.abort aborting request\"),this.transport.cancel()},e}();function c(e){var t=e.get(\"grpc-status\")||[];if(t.length>0)try{var r=t[0];return parseInt(r,10)}catch(e){return null}return null}},346:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.debug=void 0,t.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];console.debug?console.debug.apply(null,e):console.log.apply(null,e)}},607:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.grpc=void 0;var n,o=r(418),s=r(57),i=r(229),a=r(540),u=r(210),d=r(859),c=r(8),p=r(938),h=r(35),f=r(934);(n=t.grpc||(t.grpc={})).setDefaultTransport=s.setDefaultTransportFactory,n.CrossBrowserHttpTransport=d.CrossBrowserHttpTransport,n.FetchReadableStreamTransport=i.FetchReadableStreamTransport,n.XhrTransport=u.XhrTransport,n.WebsocketTransport=a.WebsocketTransport,n.Code=c.Code,n.Metadata=o.BrowserHeaders,n.client=function(e,t){return f.client(e,t)},n.invoke=p.invoke,n.unary=h.unary},938:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.invoke=void 0;var n=r(934);t.invoke=function(e,t){if(e.requestStream)throw new Error(\".invoke cannot be used with client-streaming methods. Use .client instead.\");var r=n.client(e,{host:t.host,transport:t.transport,debug:t.debug});return t.onHeaders&&r.onHeaders(t.onHeaders),t.onMessage&&r.onMessage(t.onMessage),t.onEnd&&r.onEnd(t.onEnd),r.start(t.metadata),r.send(t.request),r.finishSend(),{close:function(){r.close()}}}},65:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.Metadata=void 0;var n=r(418);Object.defineProperty(t,\"Metadata\",{enumerable:!0,get:function(){return n.BrowserHeaders}})},57:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.makeDefaultTransport=t.setDefaultTransportFactory=void 0;var n=r(859),o=function(e){return n.CrossBrowserHttpTransport({withCredentials:!1})(e)};t.setDefaultTransportFactory=function(e){o=e},t.makeDefaultTransport=function(e){return o(e)}},229:function(e,t,r){\"use strict\";var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectFetchSupport=t.FetchReadableStreamTransport=void 0;var o=r(65),s=r(346);t.FetchReadableStreamTransport=function(e){return function(t){return function(e,t){return e.debug&&s.debug(\"fetchRequest\",e),new i(e,t)}(t,e)}};var i=function(){function e(e,t){this.cancelled=!1,this.controller=self.AbortController&&new AbortController,this.options=e,this.init=t}return e.prototype.pump=function(e,t){var r=this;if(this.reader=e,this.cancelled)return this.options.debug&&s.debug(\"Fetch.pump.cancel at first pump\"),void this.reader.cancel().catch((function(e){r.options.debug&&s.debug(\"Fetch.pump.reader.cancel exception\",e)}));this.reader.read().then((function(e){if(e.done)return r.options.onEnd(),t;r.options.onChunk(e.value),r.pump(r.reader,t)})).catch((function(e){r.cancelled?r.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(r.cancelled=!0,r.options.debug&&s.debug(\"Fetch.catch\",e.message),r.options.onEnd(e))}))},e.prototype.send=function(e){var t=this;fetch(this.options.url,n(n({},this.init),{headers:this.metadata.toHeaders(),method:\"POST\",body:e,signal:this.controller&&this.controller.signal})).then((function(e){if(t.options.debug&&s.debug(\"Fetch.response\",e),t.options.onHeaders(new o.Metadata(e.headers),e.status),!e.body)return e;t.pump(e.body.getReader(),e)})).catch((function(e){t.cancelled?t.options.debug&&s.debug(\"Fetch.catch - request cancelled\"):(t.cancelled=!0,t.options.debug&&s.debug(\"Fetch.catch\",e.message),t.options.onEnd(e))}))},e.prototype.sendMessage=function(e){this.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){this.metadata=e},e.prototype.cancel=function(){var e=this;this.cancelled?this.options.debug&&s.debug(\"Fetch.cancel already cancelled\"):(this.cancelled=!0,this.controller?(this.options.debug&&s.debug(\"Fetch.cancel.controller.abort\"),this.controller.abort()):this.options.debug&&s.debug(\"Fetch.cancel.missing abort controller\"),this.reader?(this.options.debug&&s.debug(\"Fetch.cancel.reader.cancel\"),this.reader.cancel().catch((function(t){e.options.debug&&s.debug(\"Fetch.cancel.reader.cancel exception\",t)}))):this.options.debug&&s.debug(\"Fetch.cancel before reader\"))},e}();t.detectFetchSupport=function(){return\"undefined\"!=typeof Response&&Response.prototype.hasOwnProperty(\"body\")&&\"function\"==typeof Headers}},859:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.CrossBrowserHttpTransport=void 0;var n=r(229),o=r(210);t.CrossBrowserHttpTransport=function(e){if(n.detectFetchSupport()){var t={credentials:e.withCredentials?\"include\":\"same-origin\"};return n.FetchReadableStreamTransport(t)}return o.XhrTransport({withCredentials:e.withCredentials})}},210:function(e,t,r){\"use strict\";var n,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringToArrayBuffer=t.MozChunkedArrayBufferXHR=t.XHR=t.XhrTransport=void 0;var s=r(65),i=r(346),a=r(849);t.XhrTransport=function(e){return function(t){if(a.detectMozXHRSupport())return new d(t,e);if(a.detectXHROverrideMimeTypeSupport())return new u(t,e);throw new Error(\"This environment's XHR implementation cannot support binary transfer.\")}};var u=function(){function e(e,t){this.options=e,this.init=t}return e.prototype.onProgressEvent=function(){this.options.debug&&i.debug(\"XHR.onProgressEvent.length: \",this.xhr.response.length);var e=this.xhr.response.substr(this.index);this.index=this.xhr.response.length;var t=p(e);this.options.onChunk(t)},e.prototype.onLoadEvent=function(){this.options.debug&&i.debug(\"XHR.onLoadEvent\"),this.options.onEnd()},e.prototype.onStateChange=function(){this.options.debug&&i.debug(\"XHR.onStateChange\",this.xhr.readyState),this.xhr.readyState===XMLHttpRequest.HEADERS_RECEIVED&&this.options.onHeaders(new s.Metadata(this.xhr.getAllResponseHeaders()),this.xhr.status)},e.prototype.sendMessage=function(e){this.xhr.send(e)},e.prototype.finishSend=function(){},e.prototype.start=function(e){var t=this;this.metadata=e;var r=new XMLHttpRequest;this.xhr=r,r.open(\"POST\",this.options.url),this.configureXhr(),this.metadata.forEach((function(e,t){r.setRequestHeader(e,t.join(\", \"))})),r.withCredentials=Boolean(this.init.withCredentials),r.addEventListener(\"readystatechange\",this.onStateChange.bind(this)),r.addEventListener(\"progress\",this.onProgressEvent.bind(this)),r.addEventListener(\"loadend\",this.onLoadEvent.bind(this)),r.addEventListener(\"error\",(function(e){t.options.debug&&i.debug(\"XHR.error\",e),t.options.onEnd(e.error)}))},e.prototype.configureXhr=function(){this.xhr.responseType=\"text\",this.xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")},e.prototype.cancel=function(){this.options.debug&&i.debug(\"XHR.abort\"),this.xhr.abort()},e}();t.XHR=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.configureXhr=function(){this.options.debug&&i.debug(\"MozXHR.configureXhr: setting responseType to 'moz-chunked-arraybuffer'\"),this.xhr.responseType=\"moz-chunked-arraybuffer\"},t.prototype.onProgressEvent=function(){var e=this.xhr.response;this.options.debug&&i.debug(\"MozXHR.onProgressEvent: \",new Uint8Array(e)),this.options.onChunk(new Uint8Array(e))},t}(u);function c(e,t){var r=e.charCodeAt(t);if(r>=55296&&r<=56319){var n=e.charCodeAt(t+1);n>=56320&&n<=57343&&(r=65536+(r-55296<<10)+(n-56320))}return r}function p(e){for(var t=new Uint8Array(e.length),r=0,n=0;n<e.length;n++){var o=String.prototype.codePointAt?e.codePointAt(n):c(e,n);t[r++]=255&o}return t}t.MozChunkedArrayBufferXHR=d,t.stringToArrayBuffer=p},849:function(e,t){\"use strict\";var r;function n(){if(void 0!==r)return r;if(XMLHttpRequest){r=new XMLHttpRequest;try{r.open(\"GET\",\"https://localhost\")}catch(e){}}return r}function o(e){var t=n();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.detectXHROverrideMimeTypeSupport=t.detectMozXHRSupport=t.xhrSupportsResponseType=void 0,t.xhrSupportsResponseType=o,t.detectMozXHRSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&o(\"moz-chunked-arraybuffer\")},t.detectXHROverrideMimeTypeSupport=function(){return\"undefined\"!=typeof XMLHttpRequest&&XMLHttpRequest.prototype.hasOwnProperty(\"overrideMimeType\")}},540:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WebsocketTransport=void 0;var n,o=r(346),s=r(617);!function(e){e[e.FINISH_SEND=1]=\"FINISH_SEND\"}(n||(n={}));var i=new Uint8Array([1]);t.WebsocketTransport=function(){return function(e){return function(e){e.debug&&o.debug(\"websocketRequest\",e);var t,r=function(e){if(\"https://\"===e.substr(0,8))return\"wss://\"+e.substr(8);if(\"http://\"===e.substr(0,7))return\"ws://\"+e.substr(7);throw new Error(\"Websocket transport constructed with non-https:// or http:// host.\")}(e.url),a=[];function u(e){if(e===n.FINISH_SEND)t.send(i);else{var r=e,o=new Int8Array(r.byteLength+1);o.set(new Uint8Array([0])),o.set(r,1),t.send(o)}}return{sendMessage:function(e){t&&t.readyState!==t.CONNECTING?u(e):a.push(e)},finishSend:function(){t&&t.readyState!==t.CONNECTING?u(n.FINISH_SEND):a.push(n.FINISH_SEND)},start:function(n){(t=new WebSocket(r,[\"grpc-websockets\"])).binaryType=\"arraybuffer\",t.onopen=function(){var r;e.debug&&o.debug(\"websocketRequest.onopen\"),t.send((r=\"\",n.forEach((function(e,t){r+=e+\": \"+t.join(\", \")+\"\\r\\n\"})),s.encodeASCII(r))),a.forEach((function(e){u(e)}))},t.onclose=function(t){e.debug&&o.debug(\"websocketRequest.onclose\",t),e.onEnd()},t.onerror=function(t){e.debug&&o.debug(\"websocketRequest.onerror\",t)},t.onmessage=function(t){e.onChunk(new Uint8Array(t.data))}},cancel:function(){e.debug&&o.debug(\"websocket.abort\"),t.close()}}}(e)}}},35:function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.unary=void 0;var n=r(65),o=r(934);t.unary=function(e,t){if(e.responseStream)throw new Error(\".unary cannot be used with server-streaming methods. Use .invoke or .client instead.\");if(e.requestStream)throw new Error(\".unary cannot be used with client-streaming methods. Use .client instead.\");var r=null,s=null,i=o.client(e,{host:t.host,transport:t.transport,debug:t.debug});return i.onHeaders((function(e){r=e})),i.onMessage((function(e){s=e})),i.onEnd((function(e,o,i){t.onEnd({status:e,statusMessage:o,headers:r||new n.Metadata,message:s,trailers:i})})),i.start(t.metadata),i.send(t.request),i.finishSend(),{close:function(){i.close()}}}},882:function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.frameRequest=void 0,t.frameRequest=function(e){var t=e.serializeBinary(),r=new ArrayBuffer(t.byteLength+5);return new DataView(r,1,4).setUint32(0,t.length,!1),new Uint8Array(r,5).set(t),new Uint8Array(r)}}},t={},function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(607);var e,t}));","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export const locale = navigator.language;\n\n// Below adds qvalue to languages as per a backend issue:\n// https://github.sc-corp.net/Snapchat/phantom/pull/196781\n// More on qvalues: https://developer.mozilla.org/en-US/docs/Glossary/Quality_values\nexport const fullLocale = navigator.languages\n    .map((lang, index) => {\n        const qvalue = Math.max(0, (10 - index) / 10);\n        return `${lang};q=${qvalue.toFixed(1)}`;\n    })\n    .join(\", \");\n","import environment from \"../environment.json\";\nimport lensCoreWasmVersions from \"../lensCoreWasmVersions.json\";\nimport { locale } from \"./locale\";\n\ntype BrandArray = Array<{ brand: string; version: string }>;\n\ninterface NavigatorUAData {\n    brands: BrandArray;\n    mobile: boolean;\n    platform: string;\n}\n\ndeclare global {\n    interface Navigator {\n        userAgentData?: NavigatorUAData;\n    }\n}\n\n/**\n * Parse the platform (i.e. OS) version.\n *\n * From limited testing, this seems to often produce incorrect results – the userAgent string does not typically include\n * the actual OS version.\n *\n * Better results could be obtained from [NavigatorUAData.getHighEntropyValues]\n * (https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData/getHighEntropyValues), but this presents two\n * problems: 1) it's currently only supported on Chrome and 2) browsers may prompt the user for permission to share\n * this information.\n *\n * So, at least for now, we'll be satisfied with the incorrect version number.\n */\nfunction parsePlatformVersion(userAgent: string) {\n    // possible platform version values inside of user agent string\n    // \" 11;\"\n    // \" 10_15_7)\"\n    // \" 13_5_1 \"\n    // \" 10.0;\"\n    // \" 15_1 \"\n    const versionMatch = userAgent.match(/\\s([\\d][\\d_.]*[\\d])(;|\\)|\\s)/);\n\n    if (versionMatch != null) {\n        return versionMatch[1].replace(/_/g, \".\");\n    }\n\n    return \"\";\n}\n\n/**\n * In the future, we may invest in more robust device-detection (e.g. a UA string database), but for now this will give\n * us some sense of device usage.\n */\nfunction parseDeviceModel(userAgent: string) {\n    // from user agent like \"(Linux; Android 11; Pixel 2)\" extact \"Pixel 2\"\n    const userAgentWithModel = userAgent.match(/;[^;]+?;([^\\)]+?)\\)/);\n\n    if (userAgentWithModel) {\n        return userAgentWithModel[1].trim();\n    }\n\n    // from user agent like \"... (iPad; CPU OS 15_1 like Mac OS X) ...\" extract \"IPad\"\n    const userAgentWithModel2 = userAgent.match(/\\(([^;]+);/);\n\n    if (userAgentWithModel2) {\n        return userAgentWithModel2[1].trim();\n    }\n\n    return \"unknown\";\n}\n\n/**\n * Some browsers (e.g. Safari) do not support the `Navigator.userAgentData` API. We'll attempt a sort of polyfill by\n * parsing the data found in [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) from\n * the raw user agent string.\n */\nfunction parseUserAgentData(userAgent: string): NavigatorUAData {\n    let brand: BrandArray[number];\n\n    // Parse UA string for Chromium-based browsers (e.g. Chrome, Edge)\n    if (/Chrome/.test(userAgent)) {\n        const versionMatch = userAgent.match(/Chrome\\/([\\d.]+)/);\n        brand = {\n            brand: \"Chrome\",\n            version: versionMatch !== null ? versionMatch[1] : \"unknown\",\n        };\n    }\n\n    // Parse UA string for Safari (very important for this to only be done if Chrome is not found – Chrome userAgent\n    // strings will contain \"Safari\")\n    else if (/Safari/.test(userAgent)) {\n        let versionMatch = userAgent.match(/Version\\/([\\d.]+)/);\n        if (versionMatch === null) versionMatch = userAgent.match(/Safari\\/([\\d.]+)/);\n        brand = {\n            brand: \"Safari\",\n            version: versionMatch !== null ? versionMatch[1] : \"unknown\",\n        };\n    }\n\n    // Parse UA for unknown browser.\n    // TODO: will be changed, default value support should be added on a COF server side.\n    else {\n        brand = {\n            brand: \"Firefox\",\n            version: \"0\",\n        };\n    }\n\n    // We're not using `mobile` for anything, and we have no consistent way to determine this from the UA string.\n    // We'll set it to false, but this should not be used – instead, we'll need to rely on more sophisticated methods\n    // (e.g. a userAgent database) to determine actual device.\n    const mobile = false;\n    const platform = parsePlaftformName(userAgent);\n\n    return {\n        brands: [brand],\n        mobile,\n        platform,\n    };\n}\n\n/* eslint-disable max-len */\n/**\n * The `brands` array found in [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) is\n * intentionally designed to discourage standardized processing. This method of extracting brand information will be\n * inherently brittle, and it relies on us matching some well-known brands.\n *\n * For more detail from the spec:\n * See https://wicg.github.io/ua-client-hints/#monkeypatch-html-windoworworkerglobalscope\n * And https://wicg.github.io/ua-client-hints/#grease\n *\n * We also must match the list of known brands allowed by the backend, defined here:\n * https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\ntype KnownBrand = \"Chrome\" | \"Safari\" | \"Firefox\";\nfunction normalizeBrands(brands: BrandArray): BrandArray {\n    const knownBrands = new Map<string, KnownBrand>([\n        [\"Chrome\", \"Chrome\"],\n        [\"Chromium\", \"Chrome\"],\n        [\"Firefox\", \"Firefox\"],\n        [\"Microsoft Edge\", \"Chrome\"],\n        [\"Safari\", \"Safari\"],\n    ]);\n\n    const normalizedBrands = brands\n        .filter(({ brand }) => knownBrands.has(brand))\n        .map((brand) => {\n            return {\n                // Safety: we've filtered out brands which do not appear as keys in `knownBrands`, so this cannot return\n                // undefined.\n                brand: knownBrands.get(brand.brand)!,\n                version: brand.version,\n            };\n        });\n\n    // TODO: default \"unknown\" value should be added on COF server side. For now we'll use Firefox.\n    if (normalizedBrands.length === 0) return [{ brand: \"Firefox\", version: \"0\" }];\n    return normalizedBrands;\n}\n\n/* eslint-disable max-len */\n/**\n * We must ensure the data we get from `navigator.userAgentData` is normalized to match what our backend expects to\n * see in our custom CameraKitWeb userAgent string.\n *\n * This string is defined here:\n * https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\nfunction normalizeUserAgentData(userAgentData: NavigatorUAData): NavigatorUAData {\n    return {\n        brands: normalizeBrands(userAgentData.brands),\n        mobile: userAgentData.mobile,\n        platform: parsePlaftformName(userAgentData.platform),\n    };\n}\n\n/* eslint-disable max-len */\n/**\n * The backend defines the allowed list of known platforms which will pass their RegEx test when found in our custom\n * CameraKitWeb userAgent string.\n *\n * See https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n */\n/* eslint-enable */\ntype KnownPlatform = \"macos\" | \"windows\" | \"linux\" | \"android\" | \"ios\" | \"ipados\" | \"unknown\";\nfunction parsePlaftformName(userAgent: string): KnownPlatform {\n    const knownPlatforms = new Map<string, KnownPlatform>([\n        [\"android\", \"android\"],\n        [\"linux\", \"linux\"],\n        [\"iphone os\", \"ios\"],\n        [\"ipad\", \"ipados\"],\n        [\"mac os\", \"macos\"],\n        [\"macos\", \"macos\"],\n        [\"windows\", \"windows\"],\n    ]);\n\n    const normalizedUserAgent = userAgent.toLowerCase();\n    for (const [match, platform] of knownPlatforms.entries()) {\n        if (normalizedUserAgent.includes(match)) return platform;\n    }\n    return \"unknown\";\n}\n\n/**\n * We'll use the application's domain as an identifier – this isn't used for any kind of authentication, but it may be\n * useful metadata to have in the future.\n *\n * We also need to handle cases in which the SDK is used in a child browsing context (e.g. an iframe), which may not\n * have a hostname – in this case we'll check each ancestor context until we find a valid hostname.\n */\nfunction parseAppId(): string {\n    let appId = location.hostname;\n    // Firefox does not implement ancestorOrigins, so we need a fallback.\n    // Context here: https://github.com/whatwg/html/issues/1918\n    const ancestorOrigins =\n        location.ancestorOrigins === undefined\n            ? [window.parent.origin, window.top?.origin ?? \"\"]\n            : Array.from(location.ancestorOrigins);\n\n    while (appId === \"\" && ancestorOrigins.length > 0) {\n        // Safety: ancestorOrigins must contain at least one element, so shift() will always be defined.\n        appId = new URL(ancestorOrigins.shift()!).hostname;\n    }\n    return appId;\n}\n\nfunction getCameraKitUserAgent(): CameraKitUserAgent {\n    const userAgent = navigator.userAgent;\n    // [NavigatorUAData](https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData) is currently only\n    // available on Chromium-based browsers – it's nice because it gives us clear, well-documented information. But\n    // we'll have to fallback to parsing the userAgent string when it's not available.\n    const userAgentData =\n        navigator.userAgentData !== undefined\n            ? normalizeUserAgentData(navigator.userAgentData)\n            : parseUserAgentData(userAgent);\n\n    const platformVersion = parsePlatformVersion(userAgent);\n    const deviceModel = parseDeviceModel(userAgent);\n\n    // In cases where we've parsed the userAgent string to find the brand, there will only ever be a single brand –\n    // in browsers which support NavigatorUAData there could be more than one (e.g. Chrome and Chromium), but they\n    // should be equivalent for our purposes.\n    const brand = userAgentData.brands[0];\n    const browser = `${brand.brand}/${brand.version}`;\n    const appId = parseAppId();\n\n    const sdkLongVersion = environment.PACKAGE_VERSION;\n    // Remove any `-prerelease` or `+buildmetadata` portions from the semver string.\n    const sdkShortVersion = sdkLongVersion.replace(/[-+]\\S+$/, \"\");\n\n    // Set this to `debug` manually while testing / root-causing.\n    const flavor: \"release\" | \"debug\" = \"release\";\n\n    // This full string is defined here:\n    // eslint-disable-next-line max-len\n    // https://github.sc-corp.net/Snapchat/useragent/blob/9333afe7cc6ac00503ad46cb234bcf94006dff98/java/useragent/src/main/java/snapchat/client/UserAgent.java#L124\n    const cameraKitUserAgent =\n        `CameraKitWeb/${sdkShortVersion} ` +\n        `${flavor === \"release\" ? \"\" : \"DEBUG\"}` +\n        `(${deviceModel}; ${userAgentData.platform} ${platformVersion}) ` +\n        `${browser} ` +\n        `Core/${lensCoreWasmVersions.releaseWasmVersion} ` +\n        `AppId/${appId}`;\n\n    return {\n        osType: userAgentData.platform,\n        osVersion: platformVersion,\n        locale,\n        sdkShortVersion,\n        sdkLongVersion,\n        flavor,\n        lensCoreVersion: `${lensCoreWasmVersions.releaseWasmVersion}`,\n        deviceModel,\n        appId,\n        userAgent: cameraKitUserAgent,\n    };\n}\n\nexport interface CameraKitUserAgent {\n    osType: string;\n    osVersion: string;\n    locale: string;\n    sdkShortVersion: string;\n    sdkLongVersion: string;\n    flavor: \"release\" | \"debug\";\n    lensCoreVersion: string;\n    deviceModel: string;\n    appId: string;\n    userAgent: string;\n}\n\nexport const cameraKitUserAgent = getCameraKitUserAgent();\n","/**\n * Copy only those properties of an object which are not undefined.\n *\n * This can be useful when using `Object.assign(foo, bar)` or `{ ...foo, ...bar }` to copy values from one object to\n * another. There's a (rather annoying) difference between a property not existing in an object and that property\n * existing but having an undefined value. When copying values using either of the methods above, it's generally\n * expected that undefined properties won't overwrite defined properties. But that's not the behavior – this helper\n * function is needed to ensure undefined properties in `bar` don't clobber corresponding properties in `foo`.\n *\n * @param obj Any object, possibly with properties whose values are undefined.\n * @returns A copy of the input object, without keys whose values were undefined.\n */\nexport function copyDefinedProperties<T extends {}>(obj: T): T {\n    return Object.fromEntries(Object.entries(obj).filter(([_, value]) => value !== undefined)) as T;\n}\n","import { InjectableFunction, ServicesFromTokenizedParams } from \"./types\";\n\n/**\n * Create an Injectable function with no dependencies (i.e. arguments).\n *\n * Ex:\n * ```ts\n * const createMyService = Factory(\n *   'MyService',\n *   () => { ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param fn A function with no arguments which returns the Service.\n */\nexport function Injectable<Token extends string, Service>(\n    token: Token,\n    fn: () => Service\n): InjectableFunction<any, [], Token, Service>;\n\n/**\n * Create an Injectable function with dependencies (i.e. arguments).\n *\n * **Note:** the list of dependencies must be readonly – that is, a literal tuple marked `as const`. This tuple must\n * contain only string literals or string consts.\n *\n * Ex:\n * ```ts\n * const DependencyB = 'DependencyB'\n * const createMyService = Factory(\n *   'MyService',\n *   ['DependencyA', DependencyB] as const,\n *   (a: A, b: B) => { ... },\n * )\n * ```\n *\n * @param token A unique string Token which will correspond to the created Service.\n * @param dependencies A *readonly* list of Tokens corresponding to dependencies (i.e. arguments to the Factory), which\n * will be resolved by the Container to which this Factory is provided.\n * @param fn A function with arguments matching in type and length to the given list of dependencies. When called, it\n * must return the Service.\n */\nexport function Injectable<\n    Token extends string,\n    Tokens extends readonly string[],\n    Params extends readonly any[],\n    Service\n>(\n    token: Token,\n    dependencies: Tokens,\n    // The function arity (number of arguments) must match the number of dependencies specified – if they don't, we'll\n    // force a compiler error by saying the arguments should be `void[]`. We'll also throw at runtime, so the return\n    // type will be `never`.\n    fn: (...args: Tokens[\"length\"] extends Params[\"length\"] ? Params : void[]) => Service\n): Tokens[\"length\"] extends Params[\"length\"]\n    ? InjectableFunction<ServicesFromTokenizedParams<Tokens, Params>, Tokens, Token, Service>\n    : never;\n\nexport function Injectable(\n    token: string,\n    dependenciesOrFn?: readonly string[] | (() => any),\n    maybeFn?: (...args: any[]) => any\n): InjectableFunction<any, readonly string[], string, any> {\n    const dependencies: string[] = Array.isArray(dependenciesOrFn) ? dependenciesOrFn : [];\n    const fn = typeof dependenciesOrFn === \"function\" ? dependenciesOrFn : maybeFn;\n\n    if (!fn) {\n        throw new TypeError(\n            \"[Factory] Received invalid arguments. The factory function must be either the second \" +\n                \"or third argument.\"\n        );\n    }\n\n    if (fn.length !== dependencies.length) {\n        throw new TypeError(\n            \"[Factory] Function arity does not match the number of dependencies. Function has arity \" +\n                `${fn.length}, but ${dependencies.length} dependencies were specified.` +\n                `\\nDependencies: ${JSON.stringify(dependencies)}`\n        );\n    }\n\n    const factory = (...args: any[]) => fn(...args);\n    factory.token = token;\n    factory.dependencies = dependencies;\n    return factory;\n}\n","import { EstimatedLensPerformance } from \"./benchmark/estimateLensPerformanceCluster\";\nimport { copyDefinedProperties } from \"./common/copyDefinedProperties\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\n\ndeclare global {\n    interface Window {\n        /**\n         * A property to be assigned with a custom WASM URL.\n         */\n        [SNAP_CAMKIT_DEBUG_KEY]: string | null;\n    }\n}\n\n/**\n * From T, pick the set of properties whose values are optional. Create a new type containing only those properties.\n */\ntype PickOptionals<T> = {\n    [K in keyof T as T[K] extends Exclude<T[K], undefined> ? never : K]: T[K];\n};\n\n/**\n * Defaults are provided for runtime configuration and any optional bootstrap configuration properties which require\n * defaults.\n */\nconst defaultConfiguration: CameraKitRuntimeConfiguration & PickOptionals<CameraKitBootstrapConfiguration> = {\n    shouldUseWorker: true,\n};\n\ninterface CameraKitRuntimeConfiguration {\n    shouldUseWorker: boolean;\n}\n\n/**\n * A key on window object to provide custom WASM build.\n */\nconst SNAP_CAMKIT_DEBUG_KEY = \"__snap_camkit_debug\";\n\nif (typeof window !== \"undefined\") {\n    Object.defineProperty(window, SNAP_CAMKIT_DEBUG_KEY, {\n        get() {\n            return sessionStorage.getItem(SNAP_CAMKIT_DEBUG_KEY);\n        },\n        set(value: string) {\n            return sessionStorage.setItem(SNAP_CAMKIT_DEBUG_KEY, value);\n        },\n        enumerable: false,\n        configurable: false,\n    });\n}\n\n/**\n * Checks whether there are configuration overrides defined, and if yes, returns them.\n * @returns Configuration overrides.\n */\nfunction getConfigurationOverrides(): Partial<CameraKitBootstrapConfiguration> {\n    if (!hasConfigurationOverrides()) return {};\n\n    // Safety: hasConfigurationOverrides above ensures wasmEndpointOverride is non-null\n    const wasmEndpointOverride = window[SNAP_CAMKIT_DEBUG_KEY]!;\n\n    // if custom WASM is provided, we switch to debug mode\n    const overrides = {\n        wasmEndpointOverride,\n        logger: \"console\" as const,\n    };\n\n    // always leave debug mode warning in console\n    console.warn(\"Configuration overrides applied\", overrides);\n    return overrides;\n}\n\n/**\n * Returns true when configuration overrides for debug purposes are applied.\n */\nexport function hasConfigurationOverrides() {\n    if (typeof window === \"undefined\") return false;\n\n    const wasmEndpointOverride = window[SNAP_CAMKIT_DEBUG_KEY];\n    return !!wasmEndpointOverride;\n}\n\n/**\n * Configuration which must be provided when calling {@link bootstrapCameraKit}. These values are used to create various\n * CameraKit components.\n *\n * @property\n */\nexport interface CameraKitBootstrapConfiguration {\n    /**\n     * Long-lived token granting your application access to CameraKit APIs. This is found in the SnapKit Dev Portal,\n     * where it's called the API Token.\n     */\n    apiToken: string;\n\n    /**\n     * In recommended production deployments, the WebAssembly assets required by CameraKit will be downloaded from an\n     * optimized CDN. But sometimes during development or within a CI pipeline, it may be necessary to download these\n     * assets from somewhere else.\n     *\n     * @deprecated Please use `wasmEndpointOverride` instead. This property will be removed in the next major version.\n     */\n    wasmEndpoint?: string | null;\n\n    /**\n     * In recommended production deployments, the WebAssembly assets required by CameraKit will be downloaded from an\n     * optimized CDN. But sometimes during development or within a CI pipeline, it may be necessary to download these\n     * assets from somewhere else.\n     */\n    wasmEndpointOverride?: string;\n\n    /**\n     * Where to output log messages. By default, log messages are ignored.\n     *\n     * CameraKit emits multiple log messages, consumer can control where to output them:\n     *  - \"noop\" or no value - log messages are ignored,\n     *  - \"console\" - log messages are printed to console\n     */\n    logger?: \"noop\" | \"console\";\n\n    /**\n     * Some lenses may decide to modify their behavior based on the performance of the current environment. If you are\n     * using such lenses, providing an estimation of lens performance may lead to better user experience (especially on\n     * low-performance devices).\n     *\n     * Running the `estimateLensPerformance()` function will run benchmarks and estimate an appropriate lens performance\n     * cluster (i.e. a performance rating) based on the current environment.\n     *\n     * Lower cluster = worse expected performance capability.\n     */\n    lensPerformance?: EstimatedLensPerformance | Promise<EstimatedLensPerformance>;\n}\n\n/**\n * In addition to the configuration required at bootstrap time, there are other configuration values that may be used\n * by CameraKit during its operation.\n */\nexport type CameraKitConfiguration = CameraKitRuntimeConfiguration & CameraKitBootstrapConfiguration;\n\nexport const configurationToken = \"configuration\";\n\nexport const createCameraKitConfigurationFactory = (configuration: CameraKitBootstrapConfiguration) =>\n    Injectable(\n        configurationToken,\n        (): CameraKitConfiguration => ({\n            ...defaultConfiguration,\n            ...copyDefinedProperties(configuration),\n            ...getConfigurationOverrides(),\n        })\n    );\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n","export function loadScript(scriptUri: string) {\n    return new Promise<void>((resolve, reject) => {\n        const scriptElement = document.createElement(\"script\");\n        scriptElement.src = scriptUri;\n        scriptElement.async = true;\n        scriptElement.addEventListener(\"load\", () => resolve(), { once: true });\n        scriptElement.addEventListener(\"error\", (event) => reject(event), { once: true });\n        document.body.appendChild(scriptElement);\n    });\n}\n","type UnknownRecord<T = unknown> = Record<string | number | symbol, T>;\nexport type Guard<T, U = unknown> = (value: U | T) => value is T;\n\nexport function isString(value: unknown): value is string {\n    return typeof value === \"string\";\n}\n\n/**\n * Ensures given value is a safe string.\n *\n * Safe strings allow to prevent CRLF attacks. We use encoding approach inspired by:\n * https://community.veracode.com/s/question/0D53n00007hJJV5CAO/is-cwe-id-117-intended-for-consolelog\n */\nexport function isSafeString(value: unknown): value is string {\n    return isString(value) && encodeURIComponent(value) === value;\n}\n\nexport function isNumber(value: unknown): value is number {\n    return typeof value === \"number\";\n}\nexport function isNotNull<T>(value: T): value is Exclude<T, null> {\n    return value !== null;\n}\nexport function isArrayOfType<T>(elementTypeGuard: Guard<T>, value: unknown): value is T[] {\n    return Array.isArray(value) && value.every((id) => elementTypeGuard(id));\n}\nexport function isStringArray<T>(value: unknown): value is T[] {\n    return isArrayOfType(isString, value);\n}\n\nexport function isSafeStringArray<T>(value: unknown): value is T[] {\n    return isArrayOfType(isSafeString, value);\n}\n\n/**\n * Guards given value is instance of ArrayBuffer.\n */\nexport function isArrayBuffer(value: unknown): value is ArrayBuffer {\n    return value instanceof ArrayBuffer;\n}\n\n/**\n * Guards given value is a typed array.\n */\nexport function isTypedArray<T>(value: unknown): value is T {\n    return value instanceof Object.getPrototypeOf(Uint8Array);\n}\n\n/**\n * Guards given object is not undefined.\n */\nexport function isUndefined<T>(value: unknown): value is T {\n    return typeof value === \"undefined\";\n}\n\n/**\n * Narrow an unknown type to a Record (i.e. a non-null JS object). This holds true for class instances, not just\n * plain objects.\n */\nexport function isRecord(value: unknown): value is UnknownRecord {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n\n/**\n * Check if the value is an arbitrary function\n */\nexport function isFunction(value: unknown): value is (...args: unknown[]) => unknown {\n    return typeof value === \"function\";\n}\n\n/**\n * Apply a given type predicate asserting values are of type T to each value in a Record.\n *\n * @param predicate Any unary type predicate\n * @returns A type predicate which takes an UnknownRecord and tests that all its values are of type T\n */\nexport function predicateRecordValues<T>(predicate: (value: unknown) => value is T) {\n    return (value: UnknownRecord): value is UnknownRecord<T> => {\n        for (const v of Object.values(value)) if (!predicate(v)) return false;\n        return true;\n    };\n}\n\n/**\n * Checks whether given value is undefined or a safe URL string.\n *\n * The function checks whether given string is a valid URL with https: protocol.\n *\n * @param urlString URL string to check.\n * @returns True if URL is valid.\n */\nexport function isEmptyOrSafeUrl(urlString: string | undefined): boolean {\n    if (!urlString) return true;\n    try {\n        const url = new URL(urlString);\n        return url.protocol === \"https:\" || url.protocol === \"http:\";\n    } catch {\n        return false;\n    }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export type RequestMetadata =\n    | {\n          signal?: AbortSignal | null | undefined;\n      }\n    | undefined;\nexport type Handler<Req, Res, Meta extends RequestMetadata> = (req: Req, metadata?: Meta) => Promise<Res>;\nexport type ChainableHandler<Req, Res, NextReq, NextRes, Meta extends RequestMetadata | undefined> = (\n    next: Handler<NextReq, NextRes, Meta>\n) => Handler<Req, Res, Meta>;\n\n/**\n * Creates a Handler chain – a series of functions composed such that each function may call a supplied `next` function\n * which passes execution down the chain. When the final Handler in the chain returns, execution passes back up the\n * chain eventually returning to the caller.\n *\n * Each Handler chain begins with a \"raw\" Handler – this is a function which takes some request and returns some\n * response. A chain is then created by supplying a series of mapping functions – the ChainableHandler type – which will\n * be called with the `next` Handler in the chain.\n *\n * Ex:\n * ```ts\n * const handler = (request: string, metadata?: RequestMetadata) => Promise.resolve(`Responded to ${request}`)\n * const chainable = (next: Handler<string, string>) => (request: string, metadata?: RequestMetadata) => {\n *   return next(`modified ${request}`, metadata)\n * }\n *\n * const chain = new HandlerChainBuilder(handler)\n *   .map(chainable)\n *   .handler\n *\n * const response = await chain('hello')\n * expect(response).toBe('Responded to modified hello; 0')\n * ```\n * You can largely ignore the `metadata` argument present in the above example. This is the mechanism by which an\n * AbortSignal is passed to each Handler in the chain, but the only real requirement when implementing a Handler is\n * to pass this argument along to the `next` function. In fact, many Handlers will want to be generic over the type\n * of metadata:\n * ```ts\n * const chainable = <Meta>(next: Handler<string, string, Meta>) => (request: string, metadata: Meta) => {\n *   return next(`modified ${request}`, metadata)\n * }\n * ```\n * Actually, it's a very good idea for Handlers to be as generic as possible, since that will allow greater re-use. In\n * the above example, we don't do anything with the response from `next`, so we can let that be generic, too:\n * ```ts\n * const chainable = <Res, Meta>(next: Handler<string, Res, Meta>) => (request: string, metadata: Meta) => {\n *   return next(`modified ${request}`, metadata)\n * }\n * ```\n * Now if some other Handler in the chain decides to return a different response type, our Handler won't require any\n * changes to compile.\n *\n * ---\n *\n * Since execution passes from handler to handler in the chain, and then back, handlers have the opportunity to modify\n * or observe both the request and response. This might be useful for implementing serialization/deserialization, but\n * the simplest example that demonstrates this feature is measuring request latency:\n * ```ts\n * const latencyMeasuringHandler = <Req, Res, Meta>(next: Handler<Req, Res, Meta>) =>\n *   async (req: Req, metadata: Meta) => {\n *     const start = performance.now()\n *     const response = await next(req, metadata)\n *     const latency = performance.now() - start\n *     console.log(`latency for request ${request} was ${latency}`)\n *     return response\n *   }\n * ```\n * Execution is first passed to our measuring handler, which marks the `start` timestamp. Then it passes execution on\n * down the chain. After a response is received (by some handler down the chain), execution passes back up to our\n * handler here, which records the amount of time spent inside `next`.\n *\n * ---\n *\n * Handlers may also abort requests. They can do this in two ways:\n *   1. Create an `AbortController` and add its `AbortSignal` to the `metadata` object when calling `next`.\n *   2. Resolve its returned Promise.\n *\n * The first approach is straightforward, but the second may benefit from an example – the simplest is a handler which\n * will timeout a request:\n * ```ts\n * const timeoutHandler = <Req, Res, Meta>(next: Handler<Req, Res, Meta>) => (req: Req, metadata: Meta) => {\n *   return Promise.race([\n *     next(req, metadata),\n *     sleep(1000),\n *   ])\n * }\n * ```\n * The Promise returned by this handler will resolve either when the `next` handler resolves or 1 second has elapsed,\n * whichever happens first. If the timeout happens first, we want the `next` handler to recieve an abort signal so that\n * it can terminate early (since its result is no longer needed).\n *\n * HandlerChainBuilder makes this happen by observing when each handler completes, and sending an abort signal to all\n * the handlers \"downstream\" from the aborting handler.\n */\nexport class HandlerChainBuilder<Req, Res, Meta extends RequestMetadata> {\n    private readonly inner: Handler<Req, Res, Meta>;\n\n    constructor(inner: (req: Req, metadata: Meta) => Promise<Res>) {\n        // The TS compiler has the following behavior:\n        //\n        // class Infer<T extends SomeType | undefined> { constructor(f: (t?: T) => void) {} }\n        // const f = (t?: SomeType) => {}\n        // const i = new Infer(f)\n        //\n        // The type of `i` is inferred to be `Infer<SomeType>` instead of `Infer<SomeType | undefined>`, even though the\n        // type of `f`'s argument is `SomeType | undefined`. This seems to be a bug in type inference. Note that making\n        // the constructor argument required gives the expected behavior:\n        //\n        // class Infer<T extends SomeType | undefined> { constructor(f: (t: T) => void) {} }\n        // const f = (t?: SomeType) => {}\n        // const i = new Infer(f)\n        //\n        // Now `i` is inferred to be `Infer<SomeType | undefined>`.\n        //\n        // This has consequences if the inferred type T is used elsewhere in the class.\n        //\n        // In this case, we need to make sure that if the given `inner` function marks the metadata argument as\n        // optional, that HandlerChainBuilder correctly infers that the Meta type includes undefined. So we don't mark\n        // metadata as optional, and so we must cast to `Handler` (which does mark it as optional).\n        //\n        // Safety: We're adding `| undefined` to the metadata type, which may be unsafe – `undefined` may not be\n        // assignable to Meta. But when handling the argument of type Meta, we simply pass it through from handler to\n        // handler – we never call `inner` without passing the metadata argument we've received from some call to an\n        // outer handler. The typing visible to callers remains safe.\n        this.inner = inner as Handler<Req, Res, Meta>;\n    }\n\n    get handler(): Handler<Req, Res, Meta> {\n        return this.inner;\n    }\n\n    map<PriorReq, PriorRes>(\n        outer: ChainableHandler<PriorReq, PriorRes, Req, Res, Meta>\n    ): HandlerChainBuilder<PriorReq, PriorRes, Meta> {\n        // To create the next handler in the chain, we compose the \"outer\" handler with the \"inner\" handler.\n        //\n        // The outer handler observes its own completion and sends an abort signal to the inner handler when it has\n        // resolved. To prevent unexpected behavior, the inner handler also observes its own completion, setting a flag\n        // when it resolves so that – if it resolves before the outer handler – the outer handler can skip sending the\n        // abort signal (since the inner handler has already completed).\n        const outerHandler = (req: PriorReq, metadata: Meta): Promise<PriorRes> => {\n            const abort = new AbortController();\n            const signal = abort.signal;\n\n            // It's important to not signal an abort to an inner handler which has already completed – it seems like\n            // this would be a non-issue (shouldn't aborting after completion be a no-op?), but specifically for the\n            // browser's implementation of `fetch`, aborting even after the `fetch` Promise resolves can cause an abort\n            // error if e.g. the Fetch Response's body has not yet been read.\n            //\n            // So, for safety, we will only abort inner handlers which are still executing.\n            let innerCompleted = false;\n\n            const maybeAbort = () => {\n                // Safety: we never give `abort` to anyone else, so we know if the signal is aborted, this function\n                // has already run, so we can return early without fear of leaking. We also know if inner has completed,\n                // it has already performed cleanup.\n                if (signal.aborted || innerCompleted) return;\n\n                // If we've gotten here, the outer handler has either completed, or we heard an abort event while the\n                // inner handler is still executing – so we pass the abort signal down to the inner handler.\n                abort.abort();\n                metadata?.signal?.removeEventListener(\"abort\", maybeAbort);\n            };\n\n            metadata?.signal?.addEventListener(\"abort\", maybeAbort);\n\n            const innerHandler = new Proxy(this.inner, {\n                apply: (target, thisArg, args) => {\n                    const [req, metadata] = args as Parameters<typeof target>;\n\n                    // To help Handler authors out, we'll do some bookkeeping and cleanup for them – if they forget to\n                    // remove an abort event listener, we'll remove it for them when the Promise they return resolves.\n                    // Note: No need to proxy removeEventListener, since removing a non-existent listener just no-ops.\n                    const abortListeners: EventListenerOrEventListenerObject[] = [];\n                    signal.addEventListener = new Proxy(signal.addEventListener, {\n                        apply: (target, thisArg, args) => {\n                            abortListeners.push(args[1]);\n                            return Reflect.apply(target, thisArg, args);\n                        },\n                    });\n\n                    const cleanupAndMarkComplete = () => {\n                        // The only reason we listen to upstream aborts is to pass them to the inner handler – since the\n                        // inner handler has completed, we no longer need the listener.\n                        metadata?.signal?.removeEventListener(\"abort\", maybeAbort);\n                        abortListeners.forEach((listener) => signal.removeEventListener(\"abort\", listener));\n                        innerCompleted = true;\n                    };\n\n                    const innerResponse: ReturnType<typeof target> = Reflect.apply(target, thisArg, [\n                        req,\n                        { ...metadata, signal },\n                    ]);\n\n                    // Using `finally` is more idiomatic, but causes trouble in some environments (e.g. some testing\n                    // runtimes which detect uncaught rejected promises).\n                    innerResponse.catch(() => {}).then(cleanupAndMarkComplete);\n                    return innerResponse;\n                },\n            });\n\n            const outerResponse = outer(innerHandler)(req, metadata);\n            outerResponse.catch(() => {}).then(maybeAbort);\n            return outerResponse;\n        };\n        return new HandlerChainBuilder(outerHandler as Handler<PriorReq, PriorRes, Meta>);\n    }\n}\n","const logMethods = [\"log\", \"warn\", \"info\", \"debug\", \"error\"] as const;\n\ntype Logger = Record<typeof logMethods[number], (message?: any, ...optionalParams: any[]) => void>;\n\n/**\n * Logger that does nothing.\n */\nconst noopLogger: Logger = {\n    log: () => {},\n    warn: () => {},\n    info: () => {},\n    debug: () => {},\n    error: () => {},\n};\n\n/**\n * Logger that prints to console.\n */\nconst consoleLogger: Logger = {\n    log: (...args) => console.log(...args),\n    warn: (...args) => console.warn(...args),\n    info: (...args) => console.info(...args),\n    debug: (...args) => console.debug(...args),\n    error: (...args) => console.error(...args),\n};\n\n/**\n * Current logger instance.\n */\nlet logger = noopLogger;\n\nconst loggerMap = {\n    noop: noopLogger,\n    console: consoleLogger,\n};\n\n/**\n * Sets current logger instance.\n *\n * @internal\n */\nexport function setLogger(target: keyof typeof loggerMap) {\n    logger = loggerMap[target] ?? noopLogger;\n}\n\n/**\n * Gets logger for given module.\n *\n * @internal\n *\n * @param module Module name.\n * @returns Logger instance.\n */\nexport function getLogger(module: string): Logger {\n    const prefix = `[CameraKit.${module}]`;\n    const scopedLogger = { ...logger };\n    for (const logMethod of logMethods) {\n        scopedLogger[logMethod] = (...args: any[]) => logger[logMethod](prefix, ...args);\n    }\n    return scopedLogger;\n}\n","import { getLogger } from \"../logger\";\nimport { ChainableHandler } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"noCorsRetryingFetchHandler\");\n\nconst logRetry = (error: any) => {\n    logger.warn(`NoCorsRetrying handler got failed response:`, error, `Retrying request with {mode: \"no-cors\"}.`);\n};\n\n/**\n * Some requests may require a no-cors pre-flight (which are allowed to follow redirects) before they can be\n * successful.\n *\n * An example is a federated identity authentication flow, like OpenID Connect or OAuth. In many such schemes,\n * an unauthenticated request will not include CORs headers. Instead, a redirect to an Identity Provider will be\n * returned. In order follow this redirect, the Fetch request must be made with \"no-cors\" mode.\n *\n * Once the \"no-cors\" request is made, redirects are followed resulting in authentication cookies being set on the\n * original domain. Then, the original request can be retried and the server will authenticate the request and set\n * proper CORs headers on the response.\n *\n * Here's an example request flow, in which the page already has cookies for IdentityProvider.com (if that wasn't\n * the case, IdentityProvider.com would prompt the user for credentials and the rest of the flow would be the same):\n *\n * ```\n * WebPage a.com        MyServer b.com    IdentityProvider c.com\n *    |                         |                 |\n * Original request,            |                 |\n * unauthenticated:             |                 |\n *    |------------------------>|                 |\n *    |<--302: c.com, no CORs---|                 |\n *    |                         |                 |\n *    |                         |                 |\n * No CORs headers in           |                 |\n * response. Retry in           |                 |\n * \"no-cors\" mode:              |                 |\n *    |-----\"no-cors\" mode----->|                 |\n *    |<--302: c.com, no CORs---|                 |\n *    |                         |                 |\n *    |                         |                 |\n *    |------------------IdP cookies------------->|\n *    |<----------302: b.com?token=foo------------|\n *                              |                 |\n *    |                         |                 |\n *    |----b.com?token=foo----->|                 |\n *    |<-302: b.com, set cookie-|                 |\n *    |                         |                 |\n *    |                         |                 |\n * Retry original request,      |                 |\n * now authenticated:           |                 |\n *    |-----------cookie------->|                 |\n *    |<-----------200----------|                 |\n *                              |                 |\n * ```\n */\nexport const createNoCorsRetryingFetchHandler = <Res>(): ChainableHandler<\n    RequestInfo,\n    Res,\n    RequestInfo,\n    Res,\n    RequestInit | undefined\n> => {\n    // If concurrent requests are made to the same domain, we only want to perform one \"no-cors\" request. We assume\n    // requests to the same domain will set the same authentication cookies. To support this, we'll store any\n    // in-flight \"no-cors\" retries and re-use them for concurrent requests.\n    const noCorsRequests = new Map<string, Promise<Res>>();\n\n    return (next) => async (input, init = {}) => {\n        // `host` includes domain:port, so works for local development. If the input is a relative path, we'll\n        // use `location.origin` to resolve into a fully qualified URL (although of course we don't actually\n        // anticipate any CORs issues in that case -- but this is cleaner than special-casing).\n        let requestKey = typeof input === \"string\" ? input : input.url;\n        try {\n            requestKey = new URL(requestKey, location.origin).host;\n        } catch (_) {\n            /* no-op, use the full input URL as the requestKey */\n        }\n\n        try {\n            // By always attempting the request first, we avoid needing to maintain any state about the validity\n            // of the request (e.g. the expiration time for a credential). We just make the request, and if it\n            // fails, this tells us we've made an invalid request. This does result in one additional request, but\n            // it makes this much more flexible and avoids having to maintain state (which can be a source of bugs).\n            return await next(input, init);\n        } catch (error) {\n            // If the request fails because it was aborted, we assume this was done intentionally and we can stop.\n            if (error instanceof Error && error.name === \"AbortError\") throw error;\n\n            // Otherwise we don't actually care what error occurred – we know this will be an error thrown by\n            // `fetch` itself (rather than some error encountered on the server, which wouldn't cause `next` to\n            // throw), and we'll just assume it's a CORs error. If it's not, we'll perform a \"no-cors\" retry anyway,\n            // which will presumably also fail, and that failure will be returned to the caller.\n            logRetry(error);\n            const noCorsRequest = noCorsRequests.get(requestKey) ?? next(input, { ...init, mode: \"no-cors\" });\n            noCorsRequests.set(requestKey, noCorsRequest);\n            await noCorsRequest;\n            noCorsRequests.delete(requestKey);\n            return next(input, init);\n        }\n    };\n};\n","import { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { getLogger } from \"../logger\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"retryingHandler\");\n\nconst logRetry = (responseOrError: any, sleep: number) => {\n    logger.warn(\n        `Retrying handler got failed response:`,\n        responseOrError,\n        `Waited ${sleep} millis, attempting retry now.`\n    );\n};\n\nconst sleep = (millis: number) => new Promise((resolve) => setTimeout(resolve, millis));\n\nconst randomInRange = (min: number, max: number) => Math.round(Math.random() * (max - min) + min);\n\nconst defaultOptions: RetryingHandlerOptions<unknown> = {\n    backoffMultiple: 3,\n    baseSleep: 500,\n    maxSleep: 5 * 1000,\n\n    // The Response type is very common, so our default predicate special-cases to retry all failed Responses.\n    retryPredicate: (responseOrError: unknown) => (responseOrError instanceof Response ? !responseOrError.ok : true),\n};\nexport interface RetryingHandlerOptions<Req> {\n    /**\n     * Multiple used to increase the random backoff between attempts. Default is 3, usually doesn't need to be changed.\n     */\n    backoffMultiple: number;\n\n    /**\n     * The minimum number of milliseconds to sleep between attempts.\n     *\n     * The actual number of milliseconds slept between attempts is chosen at random.\n     */\n    baseSleep: number;\n\n    /**\n     * The maximum number of milliseconds to sleep between attempts. Note that this is not a timeout -- if multiple\n     * request attempts are made, the total request latency will be longer than this.\n     *\n     * The actual number of milliseconds slept between attempts is chosen at random.\n     */\n    maxSleep: number;\n\n    /**\n     * Determine if a given error is retryable. If `false` is returned, the error will be passed up to the Handler's\n     * caller and no additional retry attempts will be made.\n     */\n    retryPredicate: (responseOrError: Req | Error) => boolean;\n}\n\n/**\n * Retry requests using an exponential backoff with jitter strategy.\n *\n * More about this approach to retries can be found\n * [here](https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/). This implementation uses the\n * \"Decorrelated jitter\" algorithm described in that post. This offers a good tradeoff between call volume and latency,\n * and also allows for convenient configurability.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createRetryingHandler = <Req, Res, Meta extends RequestMetadata>(\n    options: Partial<RetryingHandlerOptions<Res>> = {}\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    const definedOptions = copyDefinedProperties(options);\n    const { backoffMultiple, baseSleep, maxSleep, retryPredicate } = { ...defaultOptions, ...definedOptions };\n\n    const jitterSleep = async (priorSleep: number) => {\n        const nextSleep = Math.min(maxSleep, randomInRange(baseSleep, priorSleep * backoffMultiple));\n        await sleep(nextSleep);\n        return nextSleep;\n    };\n\n    const makeRequestAttempt = (next: Handler<Req, Res, Meta>, priorSleep = baseSleep) => async (\n        req: Req,\n        metadata?: Meta\n    ): Promise<Res> => {\n        try {\n            const response = await next(req, metadata);\n            if (retryPredicate(response)) {\n                const nextSleep = await jitterSleep(priorSleep);\n                // The request may have been aborted while we were sleeping. In that case, we'll resolve with the failed\n                // response. In many cases this will be ignored, because an AbortError has already been returned to\n                // the caller of the Handler chain – but this prevents us from doing any extra work, and there may be\n                // edge cases where the caller could find the response useful.\n                if (metadata?.signal?.aborted) return response;\n                logRetry(response, nextSleep);\n                return makeRequestAttempt(next, nextSleep)(req, metadata);\n            }\n            return response;\n        } catch (error) {\n            if (!(error instanceof Error)) {\n                throw new Error(\n                    \"Invalid type caught by retrying handler. Handlers may only throw Errors. Got \" +\n                        `${JSON.stringify(error)}`\n                );\n            }\n\n            // If the request fails because it was aborted, we assume this was done intentionally and we can stop.\n            if (error.name === \"AbortError\") throw error;\n\n            // If no retry is to be attempted, return the error to the caller.\n            if (!retryPredicate(error)) throw error;\n\n            const nextSleep = await jitterSleep(priorSleep);\n            if (metadata?.signal?.aborted) throw error;\n            logRetry(error, nextSleep);\n            return makeRequestAttempt(next, nextSleep)(req, metadata);\n        }\n    };\n\n    return (next) => makeRequestAttempt(next);\n};\n","import { copyDefinedProperties } from \"../common/copyDefinedProperties\";\nimport { isString } from \"../common/typeguards\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst sleep = (millis: number) => new Promise<void>((resolve) => setTimeout(resolve, millis));\n\nconst defaultOptions: TimeoutHandlerOptions<unknown> = {\n    createError: (request) => {\n        // The string and Request types are very common, so our default error creator special-cases those types to\n        // provide better error messages.\n        const destination = isString(request)\n            ? `for ${request}`\n            : request instanceof Request\n            ? `for ${request.url}`\n            : \"\";\n        return new Error(`Request ${destination} timed out by client timeout handler.`);\n    },\n    timeout: 30 * 1000,\n};\n\nexport interface TimeoutHandlerOptions<Req> {\n    /**\n     * A function that returns a new Error instance when a timeout occurs.\n     */\n    createError: (req: Req, meta?: RequestMetadata | void) => Error;\n\n    /**\n     * Abort requests after this number of milliseconds. Defaults to 30 seconds.\n     */\n    timeout: number;\n}\n\n/**\n * Timeout requests after a given number of milliseconds, rejecting the Response promise with a custom error.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createTimeoutHandler = <Req, Res, Meta extends RequestMetadata>(\n    options: Partial<TimeoutHandlerOptions<Req>> = {}\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    const definedOptions = copyDefinedProperties(options);\n    const { createError, timeout } = { ...defaultOptions, ...definedOptions };\n\n    // If the timeout Promise wins the race, the HandlerChainBuilder sets the abort signal for subsequent handlers. They\n    // may look at the abort signal in order to terminate themselves early.\n    return (next) => (req, meta) =>\n        Promise.race([next(req, meta), sleep(timeout).then(() => Promise.reject(createError(req, meta)))]);\n};\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { hasConfigurationOverrides } from \"../configuration\";\nimport { createDebugHandler } from \"./debugHandler\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\nimport { createNoCorsRetryingFetchHandler } from \"./noCorsRetryingFetchHandler\";\nimport { createRetryingHandler } from \"./retryingHandler\";\nimport { createTimeoutHandler } from \"./timeoutHandler\";\n\nexport type FetchHandler<R = Response> = (input: RequestInfo, init?: RequestInit) => Promise<R>;\n\n/**\n * The default Fetch implementation, used to make a simple HTTP requests without any custom headers. This can be passed\n * to `HandlerChainBuilder` to form the basis for other Fetch implementations (e.g. with custom headers, which extract\n * the Response body, etc.)\n *\n * Has support for retries, client-side timeout, and navigating federated auth flows that may not support CORs requests.\n *\n * @internal\n */\n\nexport const defaultFetchHandlerFactory = Injectable(\"defaultFetchHandler\", () => {\n    return (\n        // Safety: We're re-typing fetch's second argument from `init?: RequestInit | undefined` to\n        // `init: RequestInit | void` – this is semantically equivalent, but the void makes for nicer ergonomics\n        // elsewhere (e.g. so that callers can omit the second argument instead of being forced to pass undefined).\n        new HandlerChainBuilder<RequestInfo, Response, RequestInit | undefined>(fetch)\n            .map(createDebugHandler(hasConfigurationOverrides()))\n            .map(createNoCorsRetryingFetchHandler())\n            .map(createRetryingHandler())\n\n            // TODO: completely arbitrary timeout -- this should be configurable by consumers, and we should think\n            // about a sane default timeout UX... it's probably less than 10 seconds.\n            .map(createTimeoutHandler({ timeout: 10 * 1000 })).handler\n    );\n});\n","import { isString } from \"../common/typeguards\";\nimport { ChainableHandler, HandlerChainBuilder } from \"./HandlerChainBuilder\";\n\n/**\n * Addes cookies to auth requests to custom LensCore binaries\n * when there are debugging overrides.\n *\n * @param enable Whether to enable handler\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createDebugHandler = <Res>(\n    enable: boolean\n): ChainableHandler<RequestInfo, Res, RequestInfo, Res, RequestInit | undefined> => {\n    if (!enable) {\n        return (next) => next;\n    }\n    return (next) => (input, init) => {\n        const url = isString(input) ? input : input?.url ?? \"\";\n        // if requests are made to internal LensCore binaries site\n        // we have to include cookies for auth purposes\n        // as per https://wiki.sc-corp.net/x/KsnRCg\n        if (url.startsWith(\"https://lens-core-wasm.sc-corp.net/\")) {\n            return next(input, {\n                ...init,\n                credentials: \"include\",\n            });\n        }\n        return next(input, init);\n    };\n};\n","import { simd } from \"wasm-feature-detect\";\nimport lensCoreWasmVersions from \"../../lensCoreWasmVersions.json\";\nimport { loadScript } from \"../../common\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { InitialEmscriptenModule, LensCoreModule } from \"../generated-types\";\nimport { getLogger } from \"../../logger\";\n\nconst logger = getLogger(\"lensCoreFactory\");\n\nconst wasmAssets = [\"LensCoreWebAssembly.js\", \"LensCoreWebAssembly.wasm\"];\n\nconst findMatch = (regex: RegExp, strings: string[]) => strings.find((s) => regex.test(s));\n\n/**\n * Returns a list of URLs that will be used to load assets (JS and WASM) required by CameraKit.\n *\n * When CameraKit is used on a website, these URLs much be reachable in order for CameraKit to be successfully\n * bootstrapped.\n *\n * @param endpointOverride Optional endpoint override to load the assets from.\n * @returns An array of asset URLs.\n */\nexport async function getRequiredBootstrapURLs(endpointOverride?: string): Promise<string[]> {\n    // If we have an endpoint override, remove trailing `/` so we can construct a valid URL.\n    const endpoint = endpointOverride?.replace(/[\\/]+$/, \"\");\n    const flavor = (await simd()) ? \"release-simd\" : \"release\";\n    const version = lensCoreWasmVersions.releaseWasmVersion;\n    const buildNumber = lensCoreWasmVersions.buildNumber;\n    return wasmAssets.map((asset) => {\n        if (endpoint) return `${endpoint}/${asset}`;\n        const { origin, pathname, search } = new URL(lensCoreWasmVersions.wasmAssetUrls[version]);\n        return `${origin}${pathname}/${version}/${buildNumber}/${flavor}/${asset}${search}`;\n    });\n}\n\n/**\n * This component is responsible for:\n *   1) Loading LensCore WebAssembly (WASM) assets\n *   2) Using the WASM assets to initialize the LensCore WASM module\n *\n * By default, WASM assets will be loaded from the Bolt CDN – but if `endpoint` is provided, assets will be loaded\n * using it as a base URL.\n *\n * @internal\n */\nexport const lensCoreFactory = Injectable(\n    \"lensCore\",\n    [defaultFetchHandlerFactory.token, configurationToken] as const,\n    async (handler: FetchHandler, { wasmEndpoint, wasmEndpointOverride }: CameraKitConfiguration) => {\n        const endpointOverride = wasmEndpointOverride ?? wasmEndpoint ?? undefined;\n        const assetURLs = await getRequiredBootstrapURLs(endpointOverride);\n        const lensCoreJS = findMatch(/\\.js/, assetURLs);\n        const lensCoreWASM = findMatch(/\\.wasm/, assetURLs);\n\n        if (!lensCoreJS || !lensCoreWASM) {\n            throw new Error(\n                `Cannot fetch required LensCore assets. Either the JS or WASM filename is missing from ` +\n                    `this list: ${assetURLs}`\n            );\n        }\n\n        const glueScript = await handler(lensCoreJS).then((r) => r.blob());\n        const mainScriptUrlOrBlob = URL.createObjectURL(glueScript);\n        await loadScript(mainScriptUrlOrBlob);\n\n        const lensCore = await new Promise<InitialEmscriptenModule & LensCoreModule>((resolve, reject) => {\n            let initialModule: Partial<InitialEmscriptenModule>;\n            // will trigger WASM initialization and data loading,\n            // after completion it will be safe to call imported WASM functions\n            // More about emscripten initialization:\n            // eslint-disable-next-line max-len\n            // https://emscripten.org/docs/getting_started/FAQ.html?highlight=modularize#how-can-i-tell-when-the-page-is-fully-loaded-and-it-is-safe-to-call-compiled-functions\n            const moduleInit = global.createLensesModule(\n                (initialModule = {\n                    // url will be used for loading glue JS during Worker inialization\n                    mainScriptUrlOrBlob,\n                    // will be triggered by Emscripten during the initialization\n                    instantiateWasm: (importObject, receiveInstance) => {\n                        WebAssembly.instantiateStreaming(handler(lensCoreWASM), importObject)\n                            .then(function ({ instance, module }) {\n                                receiveInstance(instance, module);\n                                // compiled module will be reused in Worker\n                                initialModule.compiledModule = module;\n                                resolve(moduleInit);\n                            })\n                            .catch(reject);\n                    },\n                })\n            );\n        });\n\n        // print warning if loaded version differs from hardcoded one\n        if (lensCoreWasmVersions.releaseWasmVersion != `${lensCore.getCoreVersion()}`) {\n            logger.warn(\n                `Loaded LensCore version (${lensCore.getCoreVersion()}) differs from expected one (${\n                    lensCoreWasmVersions.releaseWasmVersion\n                })`\n            );\n        }\n\n        return lensCore;\n    }\n);\n","export type NamedError<Name extends string> = Error & { name: Name };\n\n/**\n * Creates error factory that ensures Error.prototype.name field value.\n *\n * @internal\n *\n * @param name Error name.\n * @returns Error factory function.\n */\nexport function namedError<Name extends string, ActualError extends NamedError<Name>>(name: Name) {\n    return (error: Error): ActualError => {\n        error.name = name;\n        // Safety: we set name above and therefore sure the type of error is correct\n        return error as ActualError;\n    };\n}\n\n/**\n * Wrap an inner error with an outer error to provide additional context to an error as it bubbles up the call stack.\n *\n * @param outerError This error will wrap the inner error, allowing the caller to provide additional context e.g. when\n * re-throwing a caught error.\n * @param innerErrorLike This error's stacktrace will be appended to the outer error stacktrace.\n * @returns The outer error with the inner error's stacktrace appended to its own.\n */\nexport function wrapError<T extends Error>(outerError: T, innerErrorLike: unknown): T {\n    // NOTE: The recommended way to nest errors in JS is Error.prototype.cause now:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n    // That is supported by Chrome, Firefox, Sentry and others.\n    // While FireFox DevTools Console prints inner errors in \"cause\" field properly,\n    // Chrome DevTools Console on the other hand still does not do that:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1211260\n    // In order to improve debugging efficiency in Chrome, we append the inner error stack\n    // to the outer one until the Chrome issue is addressed.\n    const innerError = ensureError(innerErrorLike);\n    // We'll try to replicate Java's stacktrace format for chained exceptions.\n    const innerErrorStack = innerError.stack ?? \"\";\n    const innerErrorMessage = innerErrorStack.includes(innerError.message)\n        ? innerError.stack\n        : `${innerError.message}\\n${innerError.stack}`;\n\n    outerError.stack = `${outerError.stack}\\nCaused by: ${innerErrorMessage}`;\n    outerError.cause = innerError;\n    return outerError;\n}\n\n/**\n * If given a value of type Error, return it – otherwise wrap the value in an Error.\n */\nexport function ensureError(error: unknown): Error {\n    if (error instanceof Error) return error;\n\n    try {\n        return new Error(`Non-Error type exception thrown. Serialized error value: ${JSON.stringify(error)}`);\n    } catch (_) {\n        return new Error(\"Non-Error type exception thrown. Original error value could not be serialized.\");\n    }\n}\n","import { namedError } from \"../common/errors\";\n\nconst webGLError = namedError(\"WebGLError\");\nconst webGLEntityCreationError = (name: string) => webGLError(new Error(`Could not create ${name}.`));\n\nexport function createProgram(gl: WebGL2RenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram {\n    const vertexShader = createShader(gl, vertexSource, gl.VERTEX_SHADER);\n    const fragmentShader = createShader(gl, fragmentSource, gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n    if (!program) throw webGLEntityCreationError(\"WebGLProgram\");\n    gl.attachShader(program, vertexShader);\n    gl.deleteShader(vertexShader);\n\n    gl.attachShader(program, fragmentShader);\n    gl.deleteShader(fragmentShader);\n\n    gl.linkProgram(program);\n\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!success) {\n        const message = gl.getProgramInfoLog(program);\n        gl.deleteProgram(program);\n        throw webGLError(new Error(`WebGLProgram linking failed with status: ${message}`));\n    }\n\n    return program;\n}\n\nexport function createShader(gl: WebGL2RenderingContext, source: string, type: number): WebGLShader {\n    const shader = gl.createShader(type);\n    if (!shader) throw webGLEntityCreationError(`WebGLShader (type ${type})`);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!success) {\n        const message = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw webGLError(new Error(`WebGLShader (type ${type}) compilation failed with status: ${message}`));\n    }\n    return shader;\n}\n\nexport function createTexture(gl: WebGL2RenderingContext, width: number, height: number): WebGLTexture {\n    const texture = gl.createTexture();\n    if (!texture) throw webGLEntityCreationError(\"WebGLTexture\");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    return texture;\n}\n\nexport function createFramebuffer(gl: WebGL2RenderingContext, texture: WebGLTexture): WebGLFramebuffer {\n    const framebuffer = gl.createFramebuffer();\n    if (!framebuffer) throw webGLEntityCreationError(\"WebGLFramebuffer\");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    return framebuffer;\n}\n\nexport function setUniform1i(gl: WebGL2RenderingContext, program: WebGLProgram, name: string, data: number): void {\n    gl.uniform1i(gl.getUniformLocation(program, name), data);\n}\n\nexport function setUniform4f(\n    gl: WebGL2RenderingContext,\n    program: WebGLProgram,\n    name: string,\n    data: [number, number, number, number]\n): void {\n    gl.uniform4f(gl.getUniformLocation(program, name), ...data);\n}\n\nexport function promiseSync(gl: WebGL2RenderingContext): Promise<void> {\n    const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    if (!sync) throw webGLEntityCreationError(\"WebGLSync\");\n    gl.flush();\n    return new Promise((resolve, reject) => {\n        const waitForSync = (): void => {\n            const glEnum = gl.clientWaitSync(sync, 0, 0);\n            switch (glEnum) {\n                case gl.TIMEOUT_EXPIRED:\n                    setTimeout(waitForSync);\n                    return;\n                case gl.WAIT_FAILED:\n                    gl.deleteSync(sync);\n                    return reject();\n                case gl.ALREADY_SIGNALED:\n                case gl.CONDITION_SATISFIED:\n                    gl.deleteSync(sync);\n                    return resolve();\n            }\n        };\n        waitForSync();\n    });\n}\n","import { BenchmarkResult, LensPerformanceCluster } from \"./estimateLensPerformanceCluster\";\nimport { createFramebuffer, createProgram, createTexture, promiseSync, setUniform1i, setUniform4f } from \"./webglUtils\";\n\nconst vertexSource = `#version 300 es\n\nprecision mediump float;\nprecision mediump int;\n\nin vec2 pos;\n\nvoid main() {\n    gl_Position = vec4(pos, 0.0, 1.0);\n}\n`;\n\nconst fragmentSource = `#version 300 es\n\nprecision mediump float;\nprecision mediump int;\n\nuniform int LOOP_COUNT;\nuniform vec4 v0;\nuniform vec4 v1;\nuniform vec4 v2;\n\nout vec4 fragColor;\n\n#define REPEAT_2(x) x; x\n#define REPEAT_4(x) REPEAT_2(x); REPEAT_2(x)\n#define REPEAT_8(x) REPEAT_4(x); REPEAT_4(x)\n#define REPEAT_16(x) REPEAT_8(x); REPEAT_8(x)\n#define REPEAT_32(x) REPEAT_16(x); REPEAT_16(x)\n\nvoid main() {\n    vec4 r = v2;\n    for (int i = 0; i < LOOP_COUNT; i++) {\n        REPEAT_32(r = r * v1 + v0);\n    }\n    fragColor = r;\n}\n`;\n\nconst width = 1024;\nconst height = 1024;\nconst budgetMs = 300;\nconst maxLoopCount = 1000;\n\nfunction prepareBenchmark(gl: WebGL2RenderingContext): { program: WebGLProgram; cleanupBenchmark: () => void } {\n    const texture = createTexture(gl, width, height);\n    const framebuffer = createFramebuffer(gl, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n        throw new Error(\"\");\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, 1, -1, -1, 1, -1, 1, 1]), gl.STATIC_DRAW);\n\n    gl.viewport(0, 0, width, height);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n\n    const program = createProgram(gl, vertexSource, fragmentSource);\n    gl.useProgram(program);\n\n    const posLocation = gl.getAttribLocation(program, \"pos\");\n    gl.enableVertexAttribArray(posLocation);\n    gl.vertexAttribPointer(posLocation, 2, gl.FLOAT, false, 0, 0);\n\n    setUniform4f(gl, program, \"v0\", [1.15, 1.23, 1.47, 1.84]);\n    setUniform4f(gl, program, \"v1\", [1.65, 1.22, 1.69, 1.04]);\n    setUniform4f(gl, program, \"v2\", [1.05, 1.3, 1.55, 1.23]);\n\n    return {\n        program,\n        cleanupBenchmark: () => {\n            gl.deleteProgram(program);\n            gl.deleteBuffer(buffer);\n            gl.deleteFramebuffer(framebuffer);\n            gl.deleteTexture(texture);\n        },\n    };\n}\n\nasync function runBenchmark(gl: WebGL2RenderingContext, program: WebGLProgram): Promise<number> {\n    await promiseSync(gl);\n\n    const start = performance.now();\n    const flops: number[] = [];\n\n    let loopCount = 20;\n    while (true) {\n        setUniform1i(gl, program, \"LOOP_COUNT\", loopCount);\n\n        const iterationStart = performance.now();\n\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n        await promiseSync(gl);\n\n        const iterationEnd = performance.now();\n        const duration = iterationEnd - iterationStart;\n        flops.push(loopCount / duration);\n\n        const remainingBudgetMs = budgetMs - (iterationEnd - start);\n        if (remainingBudgetMs < 0) break;\n\n        if (loopCount < maxLoopCount) {\n            loopCount += remainingBudgetMs < duration ? 10 : (0.6 * loopCount * remainingBudgetMs) / duration;\n        }\n    }\n\n    const maxFlops = Math.max(...flops) * (8 * 32) * width * height;\n    return maxFlops / 1e6;\n}\n\n/**\n * These are obtained from historical performance data gathered from end-user devices. Keys are gflops, values are the\n * corresponding performance rating.\n *\n * To compute the performance rating given a gflops value, find the nearest key in this map and look up the rating.\n */\nexport const gflopsClusterCenters = new Map<number, LensPerformanceCluster>([\n    [34, 1],\n    [134, 2],\n    [385, 3],\n    [783, 4],\n    [1484, 5],\n    [2313, 6],\n]);\n\n/**\n * This benchmark is the same that's run on non-web (e.g. native mobile) platforms, and produces results that can be\n * compared to those gathered on those platforms – this allows us to cluster results and determine a performance rating\n * based on historical data gathered elsewhere.\n *\n * @internal\n */\nexport async function benchmarkGflops(gl: WebGL2RenderingContext): Promise<BenchmarkResult> {\n    const { program, cleanupBenchmark } = prepareBenchmark(gl);\n    const gflops = await runBenchmark(gl, program);\n    cleanupBenchmark();\n    return { name: \"gflops\", value: gflops };\n}\n","import { namedError } from \"../common/errors\";\nimport { gflopsClusterCenters, benchmarkGflops } from \"./benchmarkGflops\";\n\nconst benchmarkError = namedError(\"BenchmarkError\");\nconst findNearest = (n: number, arr: number[]) => arr.reduce((a, b) => (Math.abs(a - n) <= Math.abs(b - n) ? a : b));\n\nconst webglContextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: false,\n    powerPreference: \"high-performance\",\n};\n\nexport type LensPerformanceCluster = -1 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type BenchmarkResult = { name: string; value: number };\n\n/**\n * Some lenses may decide to modify their behavior based on the performance of the current environment. If you are\n * using such lenses, providing an estimation of lens performance may lead to better user experience (especially on\n * low-performance devices).\n *\n * The cluster value will be an integer from 1-6 which classifies expected lens performance, where 6 is the highest-\n * performing cluster and 1 the lowest.\n *\n * All the raw benchmark results used to estimate the performance cluster are also included for reporting purposes.\n */\nexport interface EstimatedLensPerformance {\n    cluster: LensPerformanceCluster;\n    benchmarks: BenchmarkResult[];\n    webglRendererInfo: string;\n}\n\n/**\n * Run benchmarks which attempt to predict expected lens performance, and assign a cluster (i.e. a performance rating)\n * which the CameraKit SDK can use to optimize certain lenses.\n *\n * @returns A rating from 1-6, indicating expected Lens performance.\n */\nexport async function estimateLensPerformance(): Promise<EstimatedLensPerformance> {\n    // Prepare performance measurement.\n    const canvas = document.createElement(\"canvas\");\n    const gl = canvas.getContext(\"webgl2\", webglContextAttributes);\n    if (!gl) throw benchmarkError(new Error(\"WebGL2 is required to compute performance, but it is not supported.\"));\n\n    const debugInfo = gl.getExtension(\"WEBGL_debug_renderer_info\");\n    const webglRendererInfo = debugInfo ? (gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL) as string) : \"unknown\";\n\n    // Measure performance (just GFLOPS for now, but could add more benchmarks in the future).\n    const gflops = await benchmarkGflops(gl);\n\n    // Combine performance results and compute a performance rating. Right now we just run a single benchmark, so this\n    // is pretty trivial.\n    const nearestGflopsClusterCenter = findNearest(gflops.value, Array.from(gflopsClusterCenters.keys()));\n    const gflopsCluster = gflopsClusterCenters.get(nearestGflopsClusterCenter) ?? -1;\n\n    return {\n        cluster: gflopsCluster,\n        benchmarks: [gflops],\n        webglRendererInfo,\n    };\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"reflect-metadata\";\nimport { Guard } from \"./typeguards\";\n\nconst predicateMetadataKey = Symbol(\"validate\");\n\n// A map of primitive types accoring to\n/* eslint-disable max-len */\n// http://blog.wolksoftware.com/decorators-metadata-reflection-in-typescript-from-novice-to-expert-part-4#3-basic-type-serialization_1\nconst primitiveMap = {\n    string: String,\n    number: Number,\n    boolean: Boolean,\n};\n\nconst ordinalSuffixMap = {\n    1: \"st\",\n    2: \"nd\",\n    3: \"rd\",\n};\n\nexport function guard<T>(predicate: Guard<T>) {\n    return (target: Object, propertyKey: string | symbol, parameterIndex: number) => {\n        let existingPredicates: Array<Guard<any>> =\n            Reflect.getOwnMetadata(predicateMetadataKey, target, propertyKey) || [];\n        existingPredicates[parameterIndex] = predicate;\n        Reflect.defineMetadata(predicateMetadataKey, existingPredicates, target, propertyKey);\n    };\n}\n\nexport function validate(target: Object, key: string | symbol, descriptor: PropertyDescriptor): void {\n    const method = descriptor.value!;\n    const types = Reflect.getMetadata(\"design:paramtypes\", target, key);\n    const predicates = Reflect.getMetadata(predicateMetadataKey, target, key);\n    descriptor.value = function (...args: unknown[]) {\n        for (const [i, type] of types.entries()) {\n            let arg = Array.isArray(args) && args[i];\n\n            if (!!predicates && predicates[i] && !predicates[i](arg)) {\n                throw new Error(`Predicate exists but arg of ${arg} failed validation in method: ${String(key)}`);\n            }\n            if (arg === undefined || arg === null) {\n                // TODO: is there a way to check for nullable parameter?\n                break;\n            }\n            if (!isValueOfType(arg, type)) {\n                const methodPath = `${getTypeName(target)}.${String(key)}()`;\n                const indexSuffix = ordinalSuffixMap[i + 1] ?? \"th\";\n                throw new Error(\n                    `The ${i + 1}${indexSuffix} argument to '${methodPath}' method is of type ` +\n                        `'${getTypeName(arg)}', which is not assignable to parameter of type '${type.name}'`\n                );\n            }\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * Checks whether given value is assignable to provided type.\n */\nexport function isValueOfType(value: unknown, type: any) {\n    if (value instanceof type) {\n        return true;\n    }\n    // test for primitive value\n    const isPrimitive = value !== Object(value);\n    return isPrimitive && primitiveMap[typeof value] === type;\n}\n\n/* eslint-disable max-len */\n/**\n * Returns type string of a value. It mostly mimics the behavior of typeof, but for non-primitives\n * (i.e. objects and functions), it returns a more granular type name where possible. Source:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#custom_method_that_gets_a_more_specific_type\n */\nexport function getTypeName(value: unknown): string {\n    if (typeof value !== \"object\" && typeof value !== \"function\") {\n        return typeof value;\n    }\n    if (value === null) {\n        return \"null\";\n    }\n\n    if (Object.getPrototypeOf(value) === Function.prototype && /^class/.test(String(value))) {\n        return \"class\";\n    }\n\n    // Symbol.toStringTag often specifies the \"display name\" of the\n    // object's class.\n    if (Symbol.toStringTag in value && typeof value[Symbol.toStringTag] === \"string\") {\n        return value[Symbol.toStringTag];\n    }\n\n    // The name of the constructor; for example `Array`, `GeneratorFunction`,\n    // `Number`, `String`, `Boolean` or `MyCustomObject`\n    if (typeof value.constructor.name === \"string\" && value.constructor.name !== \"\") {\n        return value.constructor.name;\n    }\n\n    // At this point there's no robust way to get the type of value,\n    // so we use the base implementation.\n    return typeof value;\n}\n","import { ChainableHandler } from \"./HandlerChainBuilder\";\n\n/**\n * Modify a Fetch Request's headers.\n *\n * @param modifyHeaders\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createHeadersModifyingFetchHandler = <Res>(\n    modifyHeaders: (headers: Headers) => Headers\n): ChainableHandler<RequestInfo, Res, RequestInfo, Res, RequestInit | undefined> => (next) => (input, init) => {\n    const headers =\n        init && init.headers ? new Headers(init.headers) : typeof input === \"string\" ? new Headers() : input.headers;\n\n    const modifiedHeaders = modifyHeaders(headers);\n\n    // When `init` contains headers, `fetch` uses these *instead* of any headers found in the `input` Request.\n    return next(input, { ...init, headers: modifiedHeaders });\n};\n","import { cameraKitUserAgent } from \"../common/cameraKitUserAgent\";\nimport { CameraKitConfiguration, configurationToken } from \"../configuration\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"./defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\nimport { createHeadersModifyingFetchHandler } from \"./headersModifyingFetchHandler\";\n\n/**\n * A Fetch implementation which adds headers required to make authenticated calls to the CameraKit backend service.\n *\n * @internal\n */\nexport const cameraKitServiceFetchHandlerFactory = Injectable(\n    \"cameraKitServiceFetchHandler\",\n    [configurationToken, defaultFetchHandlerFactory.token] as const,\n    ({ apiToken }: CameraKitConfiguration, defaultFetchHandler: FetchHandler) => {\n        return new HandlerChainBuilder(defaultFetchHandler).map(\n            createHeadersModifyingFetchHandler((headers) => {\n                headers.append(\"x-snap-client-user-agent\", cameraKitUserAgent.userAgent);\n                headers.append(\"authorization\", `Bearer ${apiToken}`);\n                return headers;\n            })\n        ).handler;\n    }\n);\n","import { isUndefined } from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\n\n/**\n * A source of a lens group.\n */\nexport interface LensSource {\n    /**\n     * Whether the given source is able to load lenses of the supplied group.\n     * @param groupId Group ID to check.\n     */\n    isGroupOwner(groupId: string): boolean;\n\n    /**\n     * Returns an encoded lens object.\n     * @param lensId Lens ID to get.\n     * @param groupId Group ID the lens belongs to.\n     */\n    getLens(lensId: string, groupId: string): Promise<ArrayBuffer>;\n\n    /**\n     * Returns encoded lens objects.\n     * @param groupId Group ID to get lenses of.\n     */\n    getLensGroup(groupId: string): Promise<ArrayBuffer[]>;\n}\n\n/**\n * A chain of {@link LensSource} objects to be registered in Camera Kit on bootstrap. Camera Kit evaluates all\n * registered {@link LensSource} objects for a group ownership during Lens retrieval ({@link CameraKit.lenses}).\n * And if a source claims the ownership, its {@link LensSource.getLens} or {@link LensSource.getLensGroup}\n * methods are called.\n */\nexport class LensSources {\n    private readonly fallbackSources: LensSources | undefined;\n    private readonly source: LensSource | undefined;\n\n    /**\n     * Creates an instance of Lens sources.\n     * @param fallbackSources A fallback sources if given {@link LensSource} doesn't claim a group ownership.\n     * @param source Lens source.\n     */\n    constructor(fallbackSources: LensSources, source: LensSource) {\n        this.fallbackSources = fallbackSources;\n        this.source = source;\n    }\n\n    /**\n     * Returns empty LensSources instance.\n     * @internal\n     */\n    static empty() {\n        // NOTE: we want to keep LensSources constructor to require arguments\n        // but internally we don't need them for the base case\n        // @ts-expect-error\n        return new LensSources();\n    }\n\n    /**\n     * Returns envelopes of lens/groups taking into account group ownership.\n     * @internal\n     * @param groupId A group to test ownership and get lens envelopes of.\n     * @param lensId An optional lens ID to narrow envelopes down to a single lens.\n     * @returns Envelopes or undefined if not applicable.\n     */\n    async retrieveLenses({ groupId, lensId }: { groupId: string; lensId?: string }): Promise<ArrayBuffer[] | void> {\n        if (this.source?.isGroupOwner(groupId)) {\n            return isUndefined(lensId)\n                ? this.source.getLensGroup(groupId)\n                : this.source.getLens(lensId, groupId).then((envelope) => [envelope]);\n        }\n        return this.fallbackSources?.retrieveLenses({ groupId, lensId });\n    }\n}\n\nexport const lensSourcesFactory = Injectable(\"lensSources\", () => LensSources.empty());\n","/**\n * Assert a particular code path is unreachable, e.g. to perform a compile-time exhaustiveness check.\n *\n * Ex:\n * ```ts\n * interface A { type: 'a' }\n * interface B { type: 'b' }\n * type TaggedUnion = A | B\n *\n * function exhaustiveSwitch(value: TaggedUnion) {\n *   switch (value.type) {\n *     case 'a': // do something with A\n *     case 'b': // do something with B\n *     // this will fail to compile if we add another type to TaggedUnion and forget to add a corresponding case\n *     // to the switch statement.\n *     default: assertUnreachable(value)\n *   }\n * }\n * ```\n */\nexport function assertUnreachable(_: never): never {\n    throw new Error(\"Reached unreachable code at runtime.\");\n}\n\n/**\n * Assert that a condition is true. Otherwise, throws an error.\n * @param condition Condition to test.\n * @param error Optional error message or error instance to throw.\n */\nexport function assert(condition: boolean, error: string | Error = \"Assertion failed\"): void {\n    if (!condition) {\n        if (error instanceof Error) {\n            throw error;\n        } else {\n            throw new Error(error);\n        }\n    }\n}\n","import { assert } from \"../common/assertions\";\nimport { predicateRecordValues, isRecord, isString, isUndefined, isEmptyOrSafeUrl } from \"../common/typeguards\";\nimport {\n    Content,\n    Lens_CameraFacing,\n    Preview,\n    Lens as LensGeneratedProto,\n} from \"../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { GetGroupResponse } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\n\n/**\n * @internal\n */\nexport type ContentProto = Omit<Content, \"lnsUrl\" | \"iconUrl\">;\n\n/**\n * @internal\n */\nexport interface LensProto extends Omit<LensGeneratedProto, \"content\"> {\n    content: ContentProto | undefined;\n}\n\nexport interface Lens {\n    /**\n     * Non-empty identifier of a unique lens available to be applied in current session.\n     *\n     * NOTE: This value may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    id: string;\n\n    /**\n     * Human readable name of this lens.\n     *\n     * NOTE: This value may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    name: string;\n\n    /**\n     * Icon resource URI that represents this lens if available.\n     */\n    iconUrl: string | undefined;\n\n    /**\n     * Vendor specific metadata associated with this lens, empty by default.\n     *\n     * NOTE: Metadata values may contain unsafe characters\n     * and therefore may require additional processing depending on usages.\n     */\n    vendorData: { [key: string]: string };\n\n    /**\n     * Specifies a [Lens_CameraFacing] that this lens is designed for.\n     */\n    cameraFacingPreference: Lens_CameraFacing;\n\n    /**\n     *  Preview that represents this lens if available.\n     */\n    preview: Preview | undefined;\n}\n\nexport function isLens(value: unknown): value is Lens {\n    return (\n        isRecord(value) &&\n        isString(value.id) &&\n        isString(value.name) &&\n        (isUndefined(value.iconUrl) || isString(value.iconUrl)) &&\n        isRecord(value.vendorData) &&\n        predicateRecordValues(isString)(value.vendorData) &&\n        isString(value.cameraFacingPreference) &&\n        (isUndefined(value.preview) || isPreview(value.preview))\n    );\n}\n\nexport function isLensProto(value: unknown): value is LensProto {\n    return (\n        isRecord(value) &&\n        isString(value.id) &&\n        isString(value.name) &&\n        isRecord(value.vendorData) &&\n        predicateRecordValues(isString)(value.vendorData) &&\n        (typeof value.content === \"undefined\" || isLensContent(value.content))\n    );\n}\n\nexport function isPreview(value: unknown): value is Preview {\n    return isRecord(value) && isString(value.imageUrl);\n}\n\nexport function isLensContent(value: unknown): value is ContentProto {\n    return (\n        isRecord(value) &&\n        isString(value.iconUrlBolt) &&\n        isString(value.lnsSha256) &&\n        isString(value.lnsUrlBolt) &&\n        isRecord(value.preview) &&\n        isString(value.preview.imageUrl)\n    );\n}\n\nexport function isGetGroupResponse(value: unknown): value is GetGroupResponse {\n    return isRecord(value) && isString(value.id) && Array.isArray(value.lenses) && value.lenses.every(isLensProto);\n}\n\n/**\n * Converts lens proto to a public lens object.\n * @param lens Lens proto\n * @returns Public lens object.\n *\n * @internal\n */\nexport function toPublicLens({ id, name, content, vendorData, cameraFacingPreference }: LensProto): Lens {\n    assert(isEmptyOrSafeUrl(content?.iconUrlBolt), \"Unsafe icon URL\");\n    assert(isEmptyOrSafeUrl(content?.preview?.imageUrl), \"Unsafe preview URL\");\n    return {\n        id,\n        name,\n        iconUrl: content?.iconUrlBolt,\n        preview: content?.preview,\n        vendorData,\n        cameraFacingPreference,\n    };\n}\n","import { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { isGetGroupResponse, isLensProto, LensProto } from \"./Lens\";\n\nconst BASE_PATH = \"https://api-kit.snapchat.com/com.snap.camerakit.v3.Lenses\";\n\nfunction getRequestId(res: Response) {\n    return res.headers.get(\"x-request-id\");\n}\n\nexport async function retrieveCameraKitLens(\n    httpClient: FetchHandler,\n    lensId: string,\n    groupId: string\n): Promise<LensProto> {\n    const url = [BASE_PATH, \"groups\", groupId, \"lenses\", lensId].join(\"/\");\n    const response = await httpClient(url, { credentials: \"include\" });\n    const body = await response.json();\n    const lens = body.lens;\n    if (!isLensProto(lens)) {\n        throw new Error(\n            `Expected request to ${url} to return a Lens. Got:\\n\\n${JSON.stringify(\n                body\n            )} with request-id of \"${getRequestId(response)}\"`\n        );\n    }\n    return lens;\n}\n\nexport async function retrieveCameraKitLensGroup(httpClient: FetchHandler, groupId: string): Promise<LensProto[]> {\n    const url = [BASE_PATH, \"groups\", groupId].join(\"/\");\n    const response = await httpClient(url, { credentials: \"include\" });\n    const body = await response.json();\n    if (!isGetGroupResponse(body)) {\n        throw new Error(\n            `Expected request to ${url} to return a LensGroup. Got:\\n\\n${JSON.stringify(\n                body\n            )} with request-id of \"${getRequestId(response)}\"`\n        );\n    }\n    return body.lenses;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := ptypes.MarshalAny(foo)\n *      ...\n *      foo := &pb.Foo{}\n *      if err := ptypes.UnmarshalAny(any, foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n */\nexport interface Any {\n  /**\n   * A URL/resource name whose content describes the type of the\n   * serialized protocol buffer message.\n   *\n   * For URLs which use the scheme `http`, `https`, or no scheme, the\n   * following restrictions and interpretations apply:\n   *\n   * * If no scheme is provided, `https` is assumed.\n   * * The last segment of the URL's path must represent the fully\n   *   qualified name of the type (as in `path/google.protobuf.Duration`).\n   *   The name should be in a canonical form (e.g., leading \".\" is\n   *   not accepted).\n   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   *   value in binary format, or produce an error.\n   * * Applications are allowed to cache lookup results based on the\n   *   URL, or have them precompiled into a binary to avoid any\n   *   lookup. Therefore, binary compatibility needs to be preserved\n   *   on changes to types. (Use versioned type names to manage\n   *   breaking changes.)\n   *\n   * Schemes other than `http`, `https` (or the empty scheme) might be\n   * used with implementation specific semantics.\n   */\n  typeUrl: string;\n  /** Must be a valid serialized protocol buffer of the above specified type. */\n  value: Uint8Array;\n}\n\nfunction createBaseAny(): Any {\n  return { typeUrl: \"\", value: new Uint8Array() };\n}\n\nexport const Any = {\n  encode(message: Any, writer: Writer = Writer.create()): Writer {\n    if (message.typeUrl !== \"\") {\n      writer.uint32(10).string(message.typeUrl);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Any {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAny();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.typeUrl = reader.string();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Any {\n    return {\n      typeUrl: isSet(object.typeUrl) ? String(object.typeUrl) : \"\",\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: Any): unknown {\n    const obj: any = {};\n    message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n    message.value !== undefined &&\n      (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Any>, I>>(object: I): Any {\n    const message = createBaseAny();\n    message.typeUrl = object.typeUrl ?? \"\";\n    message.value = object.value ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../google/protobuf/any\";\n\nexport const protobufPackage = \"com.snap.camerakit.v3\";\n\nexport interface Lens {\n  /** Lens ID */\n  id: string;\n  /** Lens name */\n  name: string;\n  /** Lens custom vendor data */\n  vendorData: { [key: string]: string };\n  /** Lens content */\n  content: Content | undefined;\n  /** Indicates if Lens private API is disabled */\n  isThirdParty: boolean;\n  /** camera facing enum. */\n  cameraFacingPreference: Lens_CameraFacing;\n  /** Lens feature metadata */\n  featureMetadata: Any[];\n}\n\n/** CameraFacing enum. */\nexport enum Lens_CameraFacing {\n  /** CAMERA_FACING_UNSET - unspecified value. */\n  CAMERA_FACING_UNSET = \"CAMERA_FACING_UNSET\",\n  /** CAMERA_FACING_FRONT - camera facing front */\n  CAMERA_FACING_FRONT = \"CAMERA_FACING_FRONT\",\n  /** CAMERA_FACING_BACK - camera facing back */\n  CAMERA_FACING_BACK = \"CAMERA_FACING_BACK\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function lens_CameraFacingFromJSON(object: any): Lens_CameraFacing {\n  switch (object) {\n    case 0:\n    case \"CAMERA_FACING_UNSET\":\n      return Lens_CameraFacing.CAMERA_FACING_UNSET;\n    case 1:\n    case \"CAMERA_FACING_FRONT\":\n      return Lens_CameraFacing.CAMERA_FACING_FRONT;\n    case 2:\n    case \"CAMERA_FACING_BACK\":\n      return Lens_CameraFacing.CAMERA_FACING_BACK;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return Lens_CameraFacing.UNRECOGNIZED;\n  }\n}\n\nexport function lens_CameraFacingToJSON(object: Lens_CameraFacing): string {\n  switch (object) {\n    case Lens_CameraFacing.CAMERA_FACING_UNSET:\n      return \"CAMERA_FACING_UNSET\";\n    case Lens_CameraFacing.CAMERA_FACING_FRONT:\n      return \"CAMERA_FACING_FRONT\";\n    case Lens_CameraFacing.CAMERA_FACING_BACK:\n      return \"CAMERA_FACING_BACK\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function lens_CameraFacingToNumber(object: Lens_CameraFacing): number {\n  switch (object) {\n    case Lens_CameraFacing.CAMERA_FACING_UNSET:\n      return 0;\n    case Lens_CameraFacing.CAMERA_FACING_FRONT:\n      return 1;\n    case Lens_CameraFacing.CAMERA_FACING_BACK:\n      return 2;\n    default:\n      return 0;\n  }\n}\n\nexport interface Lens_VendorDataEntry {\n  key: string;\n  value: string;\n}\n\nexport interface Content {\n  /** Lens LNS URL */\n  lnsUrl: string;\n  /** Lens LNS SHA256 checksum */\n  lnsSha256: string;\n  /** Lens icon URL */\n  iconUrl: string;\n  /** Lens preview */\n  preview: Preview | undefined;\n  /** Lens asset manifest */\n  assetManifest: LensAssetManifestItem[];\n  /** Lens default hint id */\n  defaultHintId: string;\n  /** Lens hint translations. Contains hint id, manifest data id and corresponding translation string as a value */\n  hintTranslations: { [key: string]: string };\n  /**\n   * Lens LNS archive URL in Bolt CDN (https://wiki.sc-corp.net/display/CDP/BOLT). Lens archive content is the same as\n   * in 'lns_url'. The field will eventually deprecate 'lns_url'.\n   */\n  lnsUrlBolt: string;\n  /**\n   * Lens icon URL in Bolt CDN (https://wiki.sc-corp.net/display/CDP/BOLT). MIME type of the Bolt URL image may differ\n   * from the 'icon_url' image. At the moment of this writing, 'icon_url' refers to a PNG image, 'icon_url_bolt' refers\n   * to a WEBP image. The field will eventually deprecate 'icon_url'.\n   */\n  iconUrlBolt: string;\n}\n\nexport interface Content_HintTranslationsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface LensAssetManifestItem {\n  /** Lens asset manifest type */\n  type: LensAssetManifestItem_Type;\n  /** Lens manifest item ID */\n  id: string;\n  /** Lens manifest item request timing */\n  requestTiming: LensAssetManifestItem_RequestTiming;\n  /** Lens asset url */\n  assetUrl: string;\n  /** asset checksum */\n  assetChecksum: string;\n}\n\n/** Manifest type */\nexport enum LensAssetManifestItem_Type {\n  /** DEVICE_DEPENDENT_ASSET_UNSET - Device dependent asset */\n  DEVICE_DEPENDENT_ASSET_UNSET = \"DEVICE_DEPENDENT_ASSET_UNSET\",\n  /** ASSET - Device independent asset */\n  ASSET = \"ASSET\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function lensAssetManifestItem_TypeFromJSON(object: any): LensAssetManifestItem_Type {\n  switch (object) {\n    case 0:\n    case \"DEVICE_DEPENDENT_ASSET_UNSET\":\n      return LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET;\n    case 1:\n    case \"ASSET\":\n      return LensAssetManifestItem_Type.ASSET;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LensAssetManifestItem_Type.UNRECOGNIZED;\n  }\n}\n\nexport function lensAssetManifestItem_TypeToJSON(object: LensAssetManifestItem_Type): string {\n  switch (object) {\n    case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n      return \"DEVICE_DEPENDENT_ASSET_UNSET\";\n    case LensAssetManifestItem_Type.ASSET:\n      return \"ASSET\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function lensAssetManifestItem_TypeToNumber(object: LensAssetManifestItem_Type): number {\n  switch (object) {\n    case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n      return 0;\n    case LensAssetManifestItem_Type.ASSET:\n      return 1;\n    default:\n      return 0;\n  }\n}\n\n/** Manifest request timing */\nexport enum LensAssetManifestItem_RequestTiming {\n  /** PRELOAD_UNSET - Preload request timing */\n  PRELOAD_UNSET = \"PRELOAD_UNSET\",\n  /** ON_DEMAND - On demand request timing */\n  ON_DEMAND = \"ON_DEMAND\",\n  /** REQUIRED - Required request timing */\n  REQUIRED = \"REQUIRED\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function lensAssetManifestItem_RequestTimingFromJSON(object: any): LensAssetManifestItem_RequestTiming {\n  switch (object) {\n    case 0:\n    case \"PRELOAD_UNSET\":\n      return LensAssetManifestItem_RequestTiming.PRELOAD_UNSET;\n    case 1:\n    case \"ON_DEMAND\":\n      return LensAssetManifestItem_RequestTiming.ON_DEMAND;\n    case 2:\n    case \"REQUIRED\":\n      return LensAssetManifestItem_RequestTiming.REQUIRED;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LensAssetManifestItem_RequestTiming.UNRECOGNIZED;\n  }\n}\n\nexport function lensAssetManifestItem_RequestTimingToJSON(object: LensAssetManifestItem_RequestTiming): string {\n  switch (object) {\n    case LensAssetManifestItem_RequestTiming.PRELOAD_UNSET:\n      return \"PRELOAD_UNSET\";\n    case LensAssetManifestItem_RequestTiming.ON_DEMAND:\n      return \"ON_DEMAND\";\n    case LensAssetManifestItem_RequestTiming.REQUIRED:\n      return \"REQUIRED\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function lensAssetManifestItem_RequestTimingToNumber(object: LensAssetManifestItem_RequestTiming): number {\n  switch (object) {\n    case LensAssetManifestItem_RequestTiming.PRELOAD_UNSET:\n      return 0;\n    case LensAssetManifestItem_RequestTiming.ON_DEMAND:\n      return 1;\n    case LensAssetManifestItem_RequestTiming.REQUIRED:\n      return 2;\n    default:\n      return 0;\n  }\n}\n\nexport interface Preview {\n  /** Lens preview image URL */\n  imageUrl: string;\n}\n\nfunction createBaseLens(): Lens {\n  return {\n    id: \"\",\n    name: \"\",\n    vendorData: {},\n    content: undefined,\n    isThirdParty: false,\n    cameraFacingPreference: Lens_CameraFacing.CAMERA_FACING_UNSET,\n    featureMetadata: [],\n  };\n}\n\nexport const Lens = {\n  encode(message: Lens, writer: Writer = Writer.create()): Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    Object.entries(message.vendorData).forEach(([key, value]) => {\n      Lens_VendorDataEntry.encode({ key: key as any, value }, writer.uint32(26).fork()).ldelim();\n    });\n    if (message.content !== undefined) {\n      Content.encode(message.content, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.isThirdParty === true) {\n      writer.uint32(40).bool(message.isThirdParty);\n    }\n    if (message.cameraFacingPreference !== Lens_CameraFacing.CAMERA_FACING_UNSET) {\n      writer.uint32(48).int32(lens_CameraFacingToNumber(message.cameraFacingPreference));\n    }\n    for (const v of message.featureMetadata) {\n      Any.encode(v!, writer.uint32(58).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Lens {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLens();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.name = reader.string();\n          break;\n        case 3:\n          const entry3 = Lens_VendorDataEntry.decode(reader, reader.uint32());\n          if (entry3.value !== undefined) {\n            message.vendorData[entry3.key] = entry3.value;\n          }\n          break;\n        case 4:\n          message.content = Content.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.isThirdParty = reader.bool();\n          break;\n        case 6:\n          message.cameraFacingPreference = lens_CameraFacingFromJSON(reader.int32());\n          break;\n        case 7:\n          message.featureMetadata.push(Any.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Lens {\n    return {\n      id: isSet(object.id) ? String(object.id) : \"\",\n      name: isSet(object.name) ? String(object.name) : \"\",\n      vendorData: isObject(object.vendorData)\n        ? Object.entries(object.vendorData).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n            acc[key] = String(value);\n            return acc;\n          }, {})\n        : {},\n      content: isSet(object.content) ? Content.fromJSON(object.content) : undefined,\n      isThirdParty: isSet(object.isThirdParty) ? Boolean(object.isThirdParty) : false,\n      cameraFacingPreference: isSet(object.cameraFacingPreference)\n        ? lens_CameraFacingFromJSON(object.cameraFacingPreference)\n        : Lens_CameraFacing.CAMERA_FACING_UNSET,\n      featureMetadata: Array.isArray(object?.featureMetadata)\n        ? object.featureMetadata.map((e: any) => Any.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: Lens): unknown {\n    const obj: any = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.name !== undefined && (obj.name = message.name);\n    obj.vendorData = {};\n    if (message.vendorData) {\n      Object.entries(message.vendorData).forEach(([k, v]) => {\n        obj.vendorData[k] = v;\n      });\n    }\n    message.content !== undefined && (obj.content = message.content ? Content.toJSON(message.content) : undefined);\n    message.isThirdParty !== undefined && (obj.isThirdParty = message.isThirdParty);\n    message.cameraFacingPreference !== undefined &&\n      (obj.cameraFacingPreference = lens_CameraFacingToJSON(message.cameraFacingPreference));\n    if (message.featureMetadata) {\n      obj.featureMetadata = message.featureMetadata.map((e) => (e ? Any.toJSON(e) : undefined));\n    } else {\n      obj.featureMetadata = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Lens>, I>>(object: I): Lens {\n    const message = createBaseLens();\n    message.id = object.id ?? \"\";\n    message.name = object.name ?? \"\";\n    message.vendorData = Object.entries(object.vendorData ?? {}).reduce<{ [key: string]: string }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = String(value);\n        }\n        return acc;\n      },\n      {}\n    );\n    message.content =\n      object.content !== undefined && object.content !== null ? Content.fromPartial(object.content) : undefined;\n    message.isThirdParty = object.isThirdParty ?? false;\n    message.cameraFacingPreference = object.cameraFacingPreference ?? Lens_CameraFacing.CAMERA_FACING_UNSET;\n    message.featureMetadata = object.featureMetadata?.map((e) => Any.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseLens_VendorDataEntry(): Lens_VendorDataEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const Lens_VendorDataEntry = {\n  encode(message: Lens_VendorDataEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Lens_VendorDataEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLens_VendorDataEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Lens_VendorDataEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: Lens_VendorDataEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Lens_VendorDataEntry>, I>>(object: I): Lens_VendorDataEntry {\n    const message = createBaseLens_VendorDataEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseContent(): Content {\n  return {\n    lnsUrl: \"\",\n    lnsSha256: \"\",\n    iconUrl: \"\",\n    preview: undefined,\n    assetManifest: [],\n    defaultHintId: \"\",\n    hintTranslations: {},\n    lnsUrlBolt: \"\",\n    iconUrlBolt: \"\",\n  };\n}\n\nexport const Content = {\n  encode(message: Content, writer: Writer = Writer.create()): Writer {\n    if (message.lnsUrl !== \"\") {\n      writer.uint32(10).string(message.lnsUrl);\n    }\n    if (message.lnsSha256 !== \"\") {\n      writer.uint32(18).string(message.lnsSha256);\n    }\n    if (message.iconUrl !== \"\") {\n      writer.uint32(26).string(message.iconUrl);\n    }\n    if (message.preview !== undefined) {\n      Preview.encode(message.preview, writer.uint32(34).fork()).ldelim();\n    }\n    for (const v of message.assetManifest) {\n      LensAssetManifestItem.encode(v!, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.defaultHintId !== \"\") {\n      writer.uint32(50).string(message.defaultHintId);\n    }\n    Object.entries(message.hintTranslations).forEach(([key, value]) => {\n      Content_HintTranslationsEntry.encode({ key: key as any, value }, writer.uint32(58).fork()).ldelim();\n    });\n    if (message.lnsUrlBolt !== \"\") {\n      writer.uint32(66).string(message.lnsUrlBolt);\n    }\n    if (message.iconUrlBolt !== \"\") {\n      writer.uint32(74).string(message.iconUrlBolt);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Content {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseContent();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.lnsUrl = reader.string();\n          break;\n        case 2:\n          message.lnsSha256 = reader.string();\n          break;\n        case 3:\n          message.iconUrl = reader.string();\n          break;\n        case 4:\n          message.preview = Preview.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.assetManifest.push(LensAssetManifestItem.decode(reader, reader.uint32()));\n          break;\n        case 6:\n          message.defaultHintId = reader.string();\n          break;\n        case 7:\n          const entry7 = Content_HintTranslationsEntry.decode(reader, reader.uint32());\n          if (entry7.value !== undefined) {\n            message.hintTranslations[entry7.key] = entry7.value;\n          }\n          break;\n        case 8:\n          message.lnsUrlBolt = reader.string();\n          break;\n        case 9:\n          message.iconUrlBolt = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Content {\n    return {\n      lnsUrl: isSet(object.lnsUrl) ? String(object.lnsUrl) : \"\",\n      lnsSha256: isSet(object.lnsSha256) ? String(object.lnsSha256) : \"\",\n      iconUrl: isSet(object.iconUrl) ? String(object.iconUrl) : \"\",\n      preview: isSet(object.preview) ? Preview.fromJSON(object.preview) : undefined,\n      assetManifest: Array.isArray(object?.assetManifest)\n        ? object.assetManifest.map((e: any) => LensAssetManifestItem.fromJSON(e))\n        : [],\n      defaultHintId: isSet(object.defaultHintId) ? String(object.defaultHintId) : \"\",\n      hintTranslations: isObject(object.hintTranslations)\n        ? Object.entries(object.hintTranslations).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n            acc[key] = String(value);\n            return acc;\n          }, {})\n        : {},\n      lnsUrlBolt: isSet(object.lnsUrlBolt) ? String(object.lnsUrlBolt) : \"\",\n      iconUrlBolt: isSet(object.iconUrlBolt) ? String(object.iconUrlBolt) : \"\",\n    };\n  },\n\n  toJSON(message: Content): unknown {\n    const obj: any = {};\n    message.lnsUrl !== undefined && (obj.lnsUrl = message.lnsUrl);\n    message.lnsSha256 !== undefined && (obj.lnsSha256 = message.lnsSha256);\n    message.iconUrl !== undefined && (obj.iconUrl = message.iconUrl);\n    message.preview !== undefined && (obj.preview = message.preview ? Preview.toJSON(message.preview) : undefined);\n    if (message.assetManifest) {\n      obj.assetManifest = message.assetManifest.map((e) => (e ? LensAssetManifestItem.toJSON(e) : undefined));\n    } else {\n      obj.assetManifest = [];\n    }\n    message.defaultHintId !== undefined && (obj.defaultHintId = message.defaultHintId);\n    obj.hintTranslations = {};\n    if (message.hintTranslations) {\n      Object.entries(message.hintTranslations).forEach(([k, v]) => {\n        obj.hintTranslations[k] = v;\n      });\n    }\n    message.lnsUrlBolt !== undefined && (obj.lnsUrlBolt = message.lnsUrlBolt);\n    message.iconUrlBolt !== undefined && (obj.iconUrlBolt = message.iconUrlBolt);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Content>, I>>(object: I): Content {\n    const message = createBaseContent();\n    message.lnsUrl = object.lnsUrl ?? \"\";\n    message.lnsSha256 = object.lnsSha256 ?? \"\";\n    message.iconUrl = object.iconUrl ?? \"\";\n    message.preview =\n      object.preview !== undefined && object.preview !== null ? Preview.fromPartial(object.preview) : undefined;\n    message.assetManifest = object.assetManifest?.map((e) => LensAssetManifestItem.fromPartial(e)) || [];\n    message.defaultHintId = object.defaultHintId ?? \"\";\n    message.hintTranslations = Object.entries(object.hintTranslations ?? {}).reduce<{ [key: string]: string }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = String(value);\n        }\n        return acc;\n      },\n      {}\n    );\n    message.lnsUrlBolt = object.lnsUrlBolt ?? \"\";\n    message.iconUrlBolt = object.iconUrlBolt ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseContent_HintTranslationsEntry(): Content_HintTranslationsEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const Content_HintTranslationsEntry = {\n  encode(message: Content_HintTranslationsEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Content_HintTranslationsEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseContent_HintTranslationsEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Content_HintTranslationsEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: Content_HintTranslationsEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Content_HintTranslationsEntry>, I>>(\n    object: I\n  ): Content_HintTranslationsEntry {\n    const message = createBaseContent_HintTranslationsEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseLensAssetManifestItem(): LensAssetManifestItem {\n  return {\n    type: LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET,\n    id: \"\",\n    requestTiming: LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n    assetUrl: \"\",\n    assetChecksum: \"\",\n  };\n}\n\nexport const LensAssetManifestItem = {\n  encode(message: LensAssetManifestItem, writer: Writer = Writer.create()): Writer {\n    if (message.type !== LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET) {\n      writer.uint32(8).int32(lensAssetManifestItem_TypeToNumber(message.type));\n    }\n    if (message.id !== \"\") {\n      writer.uint32(18).string(message.id);\n    }\n    if (message.requestTiming !== LensAssetManifestItem_RequestTiming.PRELOAD_UNSET) {\n      writer.uint32(24).int32(lensAssetManifestItem_RequestTimingToNumber(message.requestTiming));\n    }\n    if (message.assetUrl !== \"\") {\n      writer.uint32(34).string(message.assetUrl);\n    }\n    if (message.assetChecksum !== \"\") {\n      writer.uint32(42).string(message.assetChecksum);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): LensAssetManifestItem {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLensAssetManifestItem();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = lensAssetManifestItem_TypeFromJSON(reader.int32());\n          break;\n        case 2:\n          message.id = reader.string();\n          break;\n        case 3:\n          message.requestTiming = lensAssetManifestItem_RequestTimingFromJSON(reader.int32());\n          break;\n        case 4:\n          message.assetUrl = reader.string();\n          break;\n        case 5:\n          message.assetChecksum = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LensAssetManifestItem {\n    return {\n      type: isSet(object.type)\n        ? lensAssetManifestItem_TypeFromJSON(object.type)\n        : LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET,\n      id: isSet(object.id) ? String(object.id) : \"\",\n      requestTiming: isSet(object.requestTiming)\n        ? lensAssetManifestItem_RequestTimingFromJSON(object.requestTiming)\n        : LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n      assetUrl: isSet(object.assetUrl) ? String(object.assetUrl) : \"\",\n      assetChecksum: isSet(object.assetChecksum) ? String(object.assetChecksum) : \"\",\n    };\n  },\n\n  toJSON(message: LensAssetManifestItem): unknown {\n    const obj: any = {};\n    message.type !== undefined && (obj.type = lensAssetManifestItem_TypeToJSON(message.type));\n    message.id !== undefined && (obj.id = message.id);\n    message.requestTiming !== undefined &&\n      (obj.requestTiming = lensAssetManifestItem_RequestTimingToJSON(message.requestTiming));\n    message.assetUrl !== undefined && (obj.assetUrl = message.assetUrl);\n    message.assetChecksum !== undefined && (obj.assetChecksum = message.assetChecksum);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<LensAssetManifestItem>, I>>(object: I): LensAssetManifestItem {\n    const message = createBaseLensAssetManifestItem();\n    message.type = object.type ?? LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET;\n    message.id = object.id ?? \"\";\n    message.requestTiming = object.requestTiming ?? LensAssetManifestItem_RequestTiming.PRELOAD_UNSET;\n    message.assetUrl = object.assetUrl ?? \"\";\n    message.assetChecksum = object.assetChecksum ?? \"\";\n    return message;\n  },\n};\n\nfunction createBasePreview(): Preview {\n  return { imageUrl: \"\" };\n}\n\nexport const Preview = {\n  encode(message: Preview, writer: Writer = Writer.create()): Writer {\n    if (message.imageUrl !== \"\") {\n      writer.uint32(10).string(message.imageUrl);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Preview {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePreview();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.imageUrl = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Preview {\n    return {\n      imageUrl: isSet(object.imageUrl) ? String(object.imageUrl) : \"\",\n    };\n  },\n\n  toJSON(message: Preview): unknown {\n    const obj: any = {};\n    message.imageUrl !== undefined && (obj.imageUrl = message.imageUrl);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Preview>, I>>(object: I): Preview {\n    const message = createBasePreview();\n    message.imageUrl = object.imageUrl ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Lens } from \"../../camera_kit/v3/lens\";\n\nexport const protobufPackage = \"com.snap.camerakit.v3\";\n\nexport interface ExportLensesByIdRequest {\n  /** Unlockable ids to export */\n  unlockableIds: number[];\n  /** Request context */\n  context: ExportLensesByIdRequest_Context | undefined;\n}\n\nexport interface ExportLensesByIdRequest_Context {\n  /**\n   * User agent string\n   * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/useragent.md\n   *\n   * @deprecated\n   */\n  userAgent: string;\n  /**\n   * User locale\n   * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/accept-language.md\n   *\n   * @deprecated\n   */\n  locale: string;\n  /**\n   * Misspelled field. Use `extension` field instead\n   *\n   * @deprecated\n   */\n  extention: ExportLensesByIdRequest_Context_Extension | undefined;\n  /** Extension that called export endpoint */\n  extension: ExportLensesByIdRequest_Context_Extension | undefined;\n  /** Extension request context */\n  extensionRequestContext: Uint8Array;\n}\n\nexport interface ExportLensesByIdRequest_Context_Extension {\n  /** Extension name that called export endpoint */\n  name: ExportLensesByIdRequest_Context_Extension_Name;\n  /** Extension version (optional) that called export endpoint */\n  version: string;\n}\n\n/** Extension enum specifies list of supported extensions */\nexport enum ExportLensesByIdRequest_Context_Extension_Name {\n  /** UNSET - UNSET value */\n  UNSET = \"UNSET\",\n  /** SHOP_KIT - Shopkit */\n  SHOP_KIT = \"SHOP_KIT\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function exportLensesByIdRequest_Context_Extension_NameFromJSON(\n  object: any\n): ExportLensesByIdRequest_Context_Extension_Name {\n  switch (object) {\n    case 0:\n    case \"UNSET\":\n      return ExportLensesByIdRequest_Context_Extension_Name.UNSET;\n    case 1:\n    case \"SHOP_KIT\":\n      return ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ExportLensesByIdRequest_Context_Extension_Name.UNRECOGNIZED;\n  }\n}\n\nexport function exportLensesByIdRequest_Context_Extension_NameToJSON(\n  object: ExportLensesByIdRequest_Context_Extension_Name\n): string {\n  switch (object) {\n    case ExportLensesByIdRequest_Context_Extension_Name.UNSET:\n      return \"UNSET\";\n    case ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT:\n      return \"SHOP_KIT\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function exportLensesByIdRequest_Context_Extension_NameToNumber(\n  object: ExportLensesByIdRequest_Context_Extension_Name\n): number {\n  switch (object) {\n    case ExportLensesByIdRequest_Context_Extension_Name.UNSET:\n      return 0;\n    case ExportLensesByIdRequest_Context_Extension_Name.SHOP_KIT:\n      return 1;\n    default:\n      return 0;\n  }\n}\n\nexport interface ExportLensesByIdResponse {\n  /** Map between unlockable_id and exported lens object to pass in CameraKit SDK */\n  lenses: { [key: number]: Uint8Array };\n  /** List of excluded lenses with code and reason */\n  excludedLenses: ExportLensesByIdResponse_ExcludedLens[];\n}\n\nexport interface ExportLensesByIdResponse_LensesEntry {\n  key: number;\n  value: Uint8Array;\n}\n\nexport interface ExportLensesByIdResponse_ExcludedLens {\n  /** lens id */\n  lensId: number;\n  /** code why this lens been excluded */\n  code: ExportLensesByIdResponse_ExcludedLens_Code;\n  /** text reason why this lens been excluded */\n  reason: string;\n}\n\nexport enum ExportLensesByIdResponse_ExcludedLens_Code {\n  /** UNSET - for linter */\n  UNSET = \"UNSET\",\n  /** UNKNOWN - reason unknown */\n  UNKNOWN = \"UNKNOWN\",\n  /** NOT_FOUND - lens not found */\n  NOT_FOUND = \"NOT_FOUND\",\n  /** INCOMPATIBLE_LENS_CORE_VERSION - client has core version less than  core version of the lens */\n  INCOMPATIBLE_LENS_CORE_VERSION = \"INCOMPATIBLE_LENS_CORE_VERSION\",\n  /** ARCHIVED_OR_INVISIBLE - Lens archived or excluded due to visibility */\n  ARCHIVED_OR_INVISIBLE = \"ARCHIVED_OR_INVISIBLE\",\n  /** CONTAINS_MUSIC - lens contains music and cannot be provided by CameraKit */\n  CONTAINS_MUSIC = \"CONTAINS_MUSIC\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function exportLensesByIdResponse_ExcludedLens_CodeFromJSON(\n  object: any\n): ExportLensesByIdResponse_ExcludedLens_Code {\n  switch (object) {\n    case 0:\n    case \"UNSET\":\n      return ExportLensesByIdResponse_ExcludedLens_Code.UNSET;\n    case 1:\n    case \"UNKNOWN\":\n      return ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN;\n    case 2:\n    case \"NOT_FOUND\":\n      return ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND;\n    case 3:\n    case \"INCOMPATIBLE_LENS_CORE_VERSION\":\n      return ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION;\n    case 4:\n    case \"ARCHIVED_OR_INVISIBLE\":\n      return ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE;\n    case 5:\n    case \"CONTAINS_MUSIC\":\n      return ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return ExportLensesByIdResponse_ExcludedLens_Code.UNRECOGNIZED;\n  }\n}\n\nexport function exportLensesByIdResponse_ExcludedLens_CodeToJSON(\n  object: ExportLensesByIdResponse_ExcludedLens_Code\n): string {\n  switch (object) {\n    case ExportLensesByIdResponse_ExcludedLens_Code.UNSET:\n      return \"UNSET\";\n    case ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN:\n      return \"UNKNOWN\";\n    case ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND:\n      return \"NOT_FOUND\";\n    case ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION:\n      return \"INCOMPATIBLE_LENS_CORE_VERSION\";\n    case ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE:\n      return \"ARCHIVED_OR_INVISIBLE\";\n    case ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC:\n      return \"CONTAINS_MUSIC\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function exportLensesByIdResponse_ExcludedLens_CodeToNumber(\n  object: ExportLensesByIdResponse_ExcludedLens_Code\n): number {\n  switch (object) {\n    case ExportLensesByIdResponse_ExcludedLens_Code.UNSET:\n      return 0;\n    case ExportLensesByIdResponse_ExcludedLens_Code.UNKNOWN:\n      return 1;\n    case ExportLensesByIdResponse_ExcludedLens_Code.NOT_FOUND:\n      return 2;\n    case ExportLensesByIdResponse_ExcludedLens_Code.INCOMPATIBLE_LENS_CORE_VERSION:\n      return 3;\n    case ExportLensesByIdResponse_ExcludedLens_Code.ARCHIVED_OR_INVISIBLE:\n      return 4;\n    case ExportLensesByIdResponse_ExcludedLens_Code.CONTAINS_MUSIC:\n      return 5;\n    default:\n      return 0;\n  }\n}\n\n/** ExtensionRequestContext message contains export context. */\nexport interface ExtensionRequestContext {\n  /**\n   * User agent string\n   * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/useragent.md\n   */\n  userAgent: string;\n  /**\n   * User locale\n   * For details link https://github.sc-corp.net/Snapchat/camera-kit-backend/blob/master/docs/accept-language.md\n   */\n  locale: string;\n}\n\n/**\n * This message contains any auxiliary data to the exported lenses.\n * ExportLensesByIdResponse returns this object in bytes representation to hide specific implementation from\n * the extension.\n * We expect that extension will simply pass through bytes to the\n * SDK and do not perform any modifications to the original object.\n */\nexport interface Envelope {\n  /** Exported lenses */\n  lenses: Lens[];\n}\n\nfunction createBaseExportLensesByIdRequest(): ExportLensesByIdRequest {\n  return { unlockableIds: [], context: undefined };\n}\n\nexport const ExportLensesByIdRequest = {\n  encode(message: ExportLensesByIdRequest, writer: Writer = Writer.create()): Writer {\n    writer.uint32(10).fork();\n    for (const v of message.unlockableIds) {\n      writer.int64(v);\n    }\n    writer.ldelim();\n    if (message.context !== undefined) {\n      ExportLensesByIdRequest_Context.encode(message.context, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExportLensesByIdRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExportLensesByIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.unlockableIds.push(longToNumber(reader.int64() as Long));\n            }\n          } else {\n            message.unlockableIds.push(longToNumber(reader.int64() as Long));\n          }\n          break;\n        case 2:\n          message.context = ExportLensesByIdRequest_Context.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExportLensesByIdRequest {\n    return {\n      unlockableIds: Array.isArray(object?.unlockableIds) ? object.unlockableIds.map((e: any) => Number(e)) : [],\n      context: isSet(object.context) ? ExportLensesByIdRequest_Context.fromJSON(object.context) : undefined,\n    };\n  },\n\n  toJSON(message: ExportLensesByIdRequest): unknown {\n    const obj: any = {};\n    if (message.unlockableIds) {\n      obj.unlockableIds = message.unlockableIds.map((e) => Math.round(e));\n    } else {\n      obj.unlockableIds = [];\n    }\n    message.context !== undefined &&\n      (obj.context = message.context ? ExportLensesByIdRequest_Context.toJSON(message.context) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest>, I>>(object: I): ExportLensesByIdRequest {\n    const message = createBaseExportLensesByIdRequest();\n    message.unlockableIds = object.unlockableIds?.map((e) => e) || [];\n    message.context =\n      object.context !== undefined && object.context !== null\n        ? ExportLensesByIdRequest_Context.fromPartial(object.context)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseExportLensesByIdRequest_Context(): ExportLensesByIdRequest_Context {\n  return {\n    userAgent: \"\",\n    locale: \"\",\n    extention: undefined,\n    extension: undefined,\n    extensionRequestContext: new Uint8Array(),\n  };\n}\n\nexport const ExportLensesByIdRequest_Context = {\n  encode(message: ExportLensesByIdRequest_Context, writer: Writer = Writer.create()): Writer {\n    if (message.userAgent !== \"\") {\n      writer.uint32(10).string(message.userAgent);\n    }\n    if (message.locale !== \"\") {\n      writer.uint32(18).string(message.locale);\n    }\n    if (message.extention !== undefined) {\n      ExportLensesByIdRequest_Context_Extension.encode(message.extention, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.extension !== undefined) {\n      ExportLensesByIdRequest_Context_Extension.encode(message.extension, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.extensionRequestContext.length !== 0) {\n      writer.uint32(42).bytes(message.extensionRequestContext);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExportLensesByIdRequest_Context();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userAgent = reader.string();\n          break;\n        case 2:\n          message.locale = reader.string();\n          break;\n        case 3:\n          message.extention = ExportLensesByIdRequest_Context_Extension.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.extension = ExportLensesByIdRequest_Context_Extension.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.extensionRequestContext = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExportLensesByIdRequest_Context {\n    return {\n      userAgent: isSet(object.userAgent) ? String(object.userAgent) : \"\",\n      locale: isSet(object.locale) ? String(object.locale) : \"\",\n      extention: isSet(object.extention)\n        ? ExportLensesByIdRequest_Context_Extension.fromJSON(object.extention)\n        : undefined,\n      extension: isSet(object.extension)\n        ? ExportLensesByIdRequest_Context_Extension.fromJSON(object.extension)\n        : undefined,\n      extensionRequestContext: isSet(object.extensionRequestContext)\n        ? bytesFromBase64(object.extensionRequestContext)\n        : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: ExportLensesByIdRequest_Context): unknown {\n    const obj: any = {};\n    message.userAgent !== undefined && (obj.userAgent = message.userAgent);\n    message.locale !== undefined && (obj.locale = message.locale);\n    message.extention !== undefined &&\n      (obj.extention = message.extention\n        ? ExportLensesByIdRequest_Context_Extension.toJSON(message.extention)\n        : undefined);\n    message.extension !== undefined &&\n      (obj.extension = message.extension\n        ? ExportLensesByIdRequest_Context_Extension.toJSON(message.extension)\n        : undefined);\n    message.extensionRequestContext !== undefined &&\n      (obj.extensionRequestContext = base64FromBytes(\n        message.extensionRequestContext !== undefined ? message.extensionRequestContext : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest_Context>, I>>(\n    object: I\n  ): ExportLensesByIdRequest_Context {\n    const message = createBaseExportLensesByIdRequest_Context();\n    message.userAgent = object.userAgent ?? \"\";\n    message.locale = object.locale ?? \"\";\n    message.extention =\n      object.extention !== undefined && object.extention !== null\n        ? ExportLensesByIdRequest_Context_Extension.fromPartial(object.extention)\n        : undefined;\n    message.extension =\n      object.extension !== undefined && object.extension !== null\n        ? ExportLensesByIdRequest_Context_Extension.fromPartial(object.extension)\n        : undefined;\n    message.extensionRequestContext = object.extensionRequestContext ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseExportLensesByIdRequest_Context_Extension(): ExportLensesByIdRequest_Context_Extension {\n  return { name: ExportLensesByIdRequest_Context_Extension_Name.UNSET, version: \"\" };\n}\n\nexport const ExportLensesByIdRequest_Context_Extension = {\n  encode(message: ExportLensesByIdRequest_Context_Extension, writer: Writer = Writer.create()): Writer {\n    if (message.name !== ExportLensesByIdRequest_Context_Extension_Name.UNSET) {\n      writer.uint32(8).int32(exportLensesByIdRequest_Context_Extension_NameToNumber(message.name));\n    }\n    if (message.version !== \"\") {\n      writer.uint32(18).string(message.version);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExportLensesByIdRequest_Context_Extension {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExportLensesByIdRequest_Context_Extension();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = exportLensesByIdRequest_Context_Extension_NameFromJSON(reader.int32());\n          break;\n        case 2:\n          message.version = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExportLensesByIdRequest_Context_Extension {\n    return {\n      name: isSet(object.name)\n        ? exportLensesByIdRequest_Context_Extension_NameFromJSON(object.name)\n        : ExportLensesByIdRequest_Context_Extension_Name.UNSET,\n      version: isSet(object.version) ? String(object.version) : \"\",\n    };\n  },\n\n  toJSON(message: ExportLensesByIdRequest_Context_Extension): unknown {\n    const obj: any = {};\n    message.name !== undefined && (obj.name = exportLensesByIdRequest_Context_Extension_NameToJSON(message.name));\n    message.version !== undefined && (obj.version = message.version);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExportLensesByIdRequest_Context_Extension>, I>>(\n    object: I\n  ): ExportLensesByIdRequest_Context_Extension {\n    const message = createBaseExportLensesByIdRequest_Context_Extension();\n    message.name = object.name ?? ExportLensesByIdRequest_Context_Extension_Name.UNSET;\n    message.version = object.version ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseExportLensesByIdResponse(): ExportLensesByIdResponse {\n  return { lenses: {}, excludedLenses: [] };\n}\n\nexport const ExportLensesByIdResponse = {\n  encode(message: ExportLensesByIdResponse, writer: Writer = Writer.create()): Writer {\n    Object.entries(message.lenses).forEach(([key, value]) => {\n      ExportLensesByIdResponse_LensesEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n    });\n    for (const v of message.excludedLenses) {\n      ExportLensesByIdResponse_ExcludedLens.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExportLensesByIdResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExportLensesByIdResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          const entry1 = ExportLensesByIdResponse_LensesEntry.decode(reader, reader.uint32());\n          if (entry1.value !== undefined) {\n            message.lenses[entry1.key] = entry1.value;\n          }\n          break;\n        case 2:\n          message.excludedLenses.push(ExportLensesByIdResponse_ExcludedLens.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExportLensesByIdResponse {\n    return {\n      lenses: isObject(object.lenses)\n        ? Object.entries(object.lenses).reduce<{ [key: number]: Uint8Array }>((acc, [key, value]) => {\n            acc[Number(key)] = bytesFromBase64(value as string);\n            return acc;\n          }, {})\n        : {},\n      excludedLenses: Array.isArray(object?.excludedLenses)\n        ? object.excludedLenses.map((e: any) => ExportLensesByIdResponse_ExcludedLens.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ExportLensesByIdResponse): unknown {\n    const obj: any = {};\n    obj.lenses = {};\n    if (message.lenses) {\n      Object.entries(message.lenses).forEach(([k, v]) => {\n        obj.lenses[k] = base64FromBytes(v);\n      });\n    }\n    if (message.excludedLenses) {\n      obj.excludedLenses = message.excludedLenses.map((e) =>\n        e ? ExportLensesByIdResponse_ExcludedLens.toJSON(e) : undefined\n      );\n    } else {\n      obj.excludedLenses = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse>, I>>(object: I): ExportLensesByIdResponse {\n    const message = createBaseExportLensesByIdResponse();\n    message.lenses = Object.entries(object.lenses ?? {}).reduce<{ [key: number]: Uint8Array }>((acc, [key, value]) => {\n      if (value !== undefined) {\n        acc[Number(key)] = value;\n      }\n      return acc;\n    }, {});\n    message.excludedLenses =\n      object.excludedLenses?.map((e) => ExportLensesByIdResponse_ExcludedLens.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseExportLensesByIdResponse_LensesEntry(): ExportLensesByIdResponse_LensesEntry {\n  return { key: 0, value: new Uint8Array() };\n}\n\nexport const ExportLensesByIdResponse_LensesEntry = {\n  encode(message: ExportLensesByIdResponse_LensesEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== 0) {\n      writer.uint32(8).int64(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExportLensesByIdResponse_LensesEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExportLensesByIdResponse_LensesEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = longToNumber(reader.int64() as Long);\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExportLensesByIdResponse_LensesEntry {\n    return {\n      key: isSet(object.key) ? Number(object.key) : 0,\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: ExportLensesByIdResponse_LensesEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = Math.round(message.key));\n    message.value !== undefined &&\n      (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse_LensesEntry>, I>>(\n    object: I\n  ): ExportLensesByIdResponse_LensesEntry {\n    const message = createBaseExportLensesByIdResponse_LensesEntry();\n    message.key = object.key ?? 0;\n    message.value = object.value ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseExportLensesByIdResponse_ExcludedLens(): ExportLensesByIdResponse_ExcludedLens {\n  return { lensId: 0, code: ExportLensesByIdResponse_ExcludedLens_Code.UNSET, reason: \"\" };\n}\n\nexport const ExportLensesByIdResponse_ExcludedLens = {\n  encode(message: ExportLensesByIdResponse_ExcludedLens, writer: Writer = Writer.create()): Writer {\n    if (message.lensId !== 0) {\n      writer.uint32(8).int64(message.lensId);\n    }\n    if (message.code !== ExportLensesByIdResponse_ExcludedLens_Code.UNSET) {\n      writer.uint32(16).int32(exportLensesByIdResponse_ExcludedLens_CodeToNumber(message.code));\n    }\n    if (message.reason !== \"\") {\n      writer.uint32(26).string(message.reason);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExportLensesByIdResponse_ExcludedLens {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExportLensesByIdResponse_ExcludedLens();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.lensId = longToNumber(reader.int64() as Long);\n          break;\n        case 2:\n          message.code = exportLensesByIdResponse_ExcludedLens_CodeFromJSON(reader.int32());\n          break;\n        case 3:\n          message.reason = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExportLensesByIdResponse_ExcludedLens {\n    return {\n      lensId: isSet(object.lensId) ? Number(object.lensId) : 0,\n      code: isSet(object.code)\n        ? exportLensesByIdResponse_ExcludedLens_CodeFromJSON(object.code)\n        : ExportLensesByIdResponse_ExcludedLens_Code.UNSET,\n      reason: isSet(object.reason) ? String(object.reason) : \"\",\n    };\n  },\n\n  toJSON(message: ExportLensesByIdResponse_ExcludedLens): unknown {\n    const obj: any = {};\n    message.lensId !== undefined && (obj.lensId = Math.round(message.lensId));\n    message.code !== undefined && (obj.code = exportLensesByIdResponse_ExcludedLens_CodeToJSON(message.code));\n    message.reason !== undefined && (obj.reason = message.reason);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExportLensesByIdResponse_ExcludedLens>, I>>(\n    object: I\n  ): ExportLensesByIdResponse_ExcludedLens {\n    const message = createBaseExportLensesByIdResponse_ExcludedLens();\n    message.lensId = object.lensId ?? 0;\n    message.code = object.code ?? ExportLensesByIdResponse_ExcludedLens_Code.UNSET;\n    message.reason = object.reason ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseExtensionRequestContext(): ExtensionRequestContext {\n  return { userAgent: \"\", locale: \"\" };\n}\n\nexport const ExtensionRequestContext = {\n  encode(message: ExtensionRequestContext, writer: Writer = Writer.create()): Writer {\n    if (message.userAgent !== \"\") {\n      writer.uint32(10).string(message.userAgent);\n    }\n    if (message.locale !== \"\") {\n      writer.uint32(18).string(message.locale);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExtensionRequestContext {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExtensionRequestContext();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userAgent = reader.string();\n          break;\n        case 2:\n          message.locale = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExtensionRequestContext {\n    return {\n      userAgent: isSet(object.userAgent) ? String(object.userAgent) : \"\",\n      locale: isSet(object.locale) ? String(object.locale) : \"\",\n    };\n  },\n\n  toJSON(message: ExtensionRequestContext): unknown {\n    const obj: any = {};\n    message.userAgent !== undefined && (obj.userAgent = message.userAgent);\n    message.locale !== undefined && (obj.locale = message.locale);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExtensionRequestContext>, I>>(object: I): ExtensionRequestContext {\n    const message = createBaseExtensionRequestContext();\n    message.userAgent = object.userAgent ?? \"\";\n    message.locale = object.locale ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseEnvelope(): Envelope {\n  return { lenses: [] };\n}\n\nexport const Envelope = {\n  encode(message: Envelope, writer: Writer = Writer.create()): Writer {\n    for (const v of message.lenses) {\n      Lens.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Envelope {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEnvelope();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.lenses.push(Lens.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Envelope {\n    return {\n      lenses: Array.isArray(object?.lenses) ? object.lenses.map((e: any) => Lens.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: Envelope): unknown {\n    const obj: any = {};\n    if (message.lenses) {\n      obj.lenses = message.lenses.map((e) => (e ? Lens.toJSON(e) : undefined));\n    } else {\n      obj.lenses = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Envelope>, I>>(object: I): Envelope {\n    const message = createBaseEnvelope();\n    message.lenses = object.lenses?.map((e) => Lens.fromPartial(e)) || [];\n    return message;\n  },\n};\n\n/** Export service exposes methods that relate to Export API */\nexport interface Export {\n  /**\n   * ExportLensesById exports CameraKit SDK compatible Lens data models\n   * by given lens ids\n   */\n  ExportLensesById(request: ExportLensesByIdRequest): Promise<ExportLensesByIdResponse>;\n}\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","import { Envelope } from \"../generated-proto/pb_schema/camera_kit/v3/export\";\nimport { LensProto } from \"./Lens\";\n\n/**\n * @internal\n */\nfunction decodeEnvelope(envelope: ArrayBuffer) {\n    try {\n        return Envelope.decode(new Uint8Array(envelope)).lenses;\n    } catch {\n        throw new Error(\"Invalid lens envelope\");\n    }\n}\n\n/**\n * @internal\n */\nexport function decodeEnvelopes(envelopes: ArrayBuffer[]) {\n    return envelopes.reduce<LensProto[]>((lenses, envelope) => [...lenses, ...decodeEnvelope(envelope)], []);\n}\n","import { guard, validate } from \"../common/validate\";\nimport { isSafeString, isSafeStringArray } from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { cameraKitServiceFetchHandlerFactory } from \"../handlers/cameraKitServiceFetchHandlerFactory\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { LensSources, lensSourcesFactory } from \"../extensions/LensSources\";\nimport { Lens, LensProto, toPublicLens } from \"./Lens\";\nimport { retrieveCameraKitLens, retrieveCameraKitLensGroup } from \"./lensHttpUtil\";\nimport { decodeEnvelopes } from \"./lensEnvelopeUtil\";\n\nexport interface LensGroupsQueryResponse {\n    errors: Error[];\n    lenses: Lens[];\n}\n\n/**\n * The LensRepository is used to query for lenses from specific lens groups, or for a lens with a specific ID.\n *\n * **Note on caching:** currently, LensRepository relies on the remote Lens service to set appropriate Cache-Control\n * headers -- that is, caching lens metadata is assumed to be handled by the browser. If we cannot always guarantee\n * correct Cache-Control headers (or need more control over caching in general), we will need to add some kind of\n * caching handler to the handler chained used by the LensRepository.\n *\n * @internal\n */\nexport class LensRepository {\n    private readonly lensCache = new Map<string, LensProto>();\n\n    constructor(private readonly httpClient: FetchHandler, private readonly lensSources: LensSources) {}\n\n    /**\n     * Retrieve a single Lens.\n     *\n     * @param lensId Desired Lens's unique ID. Can be found in the CameraKit Portal.\n     * @param groupId The ID of a group containing the desired Lens. Can be found in the CameraKit Portal.\n     * @returns Resolves with the desired Lens, or rejects if an error occurred (including a missing Lens).\n     */\n    @validate\n    async loadLens(@guard(isSafeString) lensId: string, @guard(isSafeString) groupId: string): Promise<Lens> {\n        const envelopes = await this.lensSources.retrieveLenses({ lensId, groupId });\n        let lens: LensProto;\n        if (envelopes) {\n            lens = decodeEnvelopes(envelopes)[0];\n            if (!lens) {\n                throw new Error(\"Expected non-empty envelope\");\n            }\n        } else {\n            lens = await retrieveCameraKitLens(this.httpClient, lensId, groupId);\n        }\n        this.lensCache.set(lens.id, lens);\n        return toPublicLens(lens);\n    }\n\n    /**\n     * Retrieve the Lenses contained in a list of Lens Groups.\n     *\n     * This may result in multiple requests to retrieve Lens data (e.g. one per desired group). If any constituent\n     * requests fail, those errors will be reported in the response – but the returned Promise will not be rejected. Any\n     * Lenses which could be successfully retrieved will be availble in the response.\n     *\n     * @param groupIds A list of Lens Group IDs. Can be found in the CameraKit Portal.\n     * @returns Resolves with a flattened list of all lenses in the desired groups. If any errors occurred during the\n     * query operation, these will be included in a separate list. If errors are present, the list of Lenses may not\n     * contain all the Lenses from the desired groups.\n     */\n    @validate\n    async loadLensGroups(@guard(isSafeStringArray) groupIds: string[]): Promise<LensGroupsQueryResponse> {\n        const responses = await Promise.all(\n            groupIds.map(async (groupId) => {\n                try {\n                    const envelopes = await this.lensSources.retrieveLenses({ groupId });\n                    const lenses = envelopes\n                        ? decodeEnvelopes(envelopes)\n                        : await retrieveCameraKitLensGroup(this.httpClient, groupId);\n                    lenses.forEach((lens) => this.lensCache.set(lens.id, lens));\n                    return lenses.map(toPublicLens);\n                } catch (error) {\n                    return error as Error;\n                }\n            })\n        );\n\n        const errors: Error[] = [];\n        const lenses: Lens[] = [];\n        responses.forEach((response) => (Array.isArray(response) ? lenses.push(...response) : errors.push(response)));\n        return { errors, lenses };\n    }\n\n    /**\n     * Returns cached Lens proto if available.\n     * @param lensId Lens ID.\n     * @returns Lens proto or undefined.\n     */\n    getCachedLens(lensId: string): LensProto | undefined {\n        return this.lensCache.get(lensId);\n    }\n}\n\n/**\n * @internal\n */\nexport const lensRepositoryFactory = Injectable(\n    \"LensRepository\",\n    [cameraKitServiceFetchHandlerFactory.token, lensSourcesFactory.token] as const,\n    (fetchHandler: FetchHandler, lensSources: LensSources) => new LensRepository(fetchHandler, lensSources)\n);\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","type AnyFunction<A extends any[] = any[], B = any> = (...args: A) => B;\n\nexport type Memoized<Fn extends AnyFunction> = {\n    (...args: Parameters<Fn>): ReturnType<Fn>;\n    delegate: Fn;\n};\n\nexport function isMemoized(fn: unknown): fn is Memoized<AnyFunction> {\n    return typeof fn === \"function\" && typeof (fn as any).delegate === \"function\";\n}\n\nexport function memoize<Fn extends AnyFunction>(delegate: Fn): Memoized<Fn> {\n    let memo: any;\n    const memoized = (...args: any[]) => {\n        if (typeof memo !== \"undefined\") return memo;\n        memo = delegate(...args);\n        return memo;\n    };\n    memoized.delegate = delegate;\n    return memoized;\n}\n","// `Object.entries` does not use `keyof` types, so it loses type specificity. We'll fix this with a wrapper.\nexport const entries = <T extends { [s: string]: U } | ArrayLike<U>, U>(o: T): Array<[keyof T, T[keyof T]]> =>\n    Object.entries(o) as Array<[keyof T, T[keyof T]]>;\n","import { entries } from \"../common/entries\";\nimport { memoize } from \"../common/memoize\";\nimport { Container, Factories } from \"./Container\";\nimport { AddService, InjectableFunction, ServicesFromTokenizedParams, ValidTokens } from \"./types\";\n\ntype AddDependencies<\n    ParentDependencies,\n    Tokens extends readonly string[],\n    Params extends readonly any[]\n> = ParentDependencies & ServicesFromTokenizedParams<Tokens, Params>;\n\ntype ExcludeKey<T, U> = { [K in Exclude<keyof T, U>]: T[K] };\n\ntype PartialInjectableFunction<\n    Params extends readonly any[],\n    Tokens extends readonly string[],\n    Token extends string,\n    Service\n> = {\n    (...args: Params): Service;\n    token: Token;\n    dependencies: Tokens;\n};\n\ntype Injectables<Services, Dependencies> = {\n    [K in keyof Services]: K extends string\n        ? InjectableFunction<Services & Dependencies, readonly ValidTokens<Services & Dependencies>[], K, Services[K]>\n        : never;\n};\n\n/**\n * Similar to [Container], with the exception that Services may be provided to a PartialContainer which *does not*\n * contain all of that Services dependencies.\n *\n * For this to remain safe, Services can not be resolved by PartialContainer – it has no `get` method.\n *\n * Instead, the PartialContainer must be provided to a [Container] which *does* contain all the dependencies required\n * by all the Service in the PartialContainer. The resulting [Container] can then resolve these Services.\n *\n * PartialContainers are used to create a collection of Services which can then be provided via a simple one-line syntax\n * to an existing Container (which fulfills the collection's dependencies). It is an organizational tool, allowing\n * coherent groupings of Services to be defined in one place, then combined elsewhere to form a complete [Container].\n *\n * Here's an example of PartialContainer usage:\n * ```ts\n * // We can provide fooFactory, even though the PartialContainer doesn't fulfill the Bar dependency.\n * const fooFactory = Injectable('Foo', ['Bar'] as const, (bar: Bar) => new Foo(bar))\n * const partialContainer = new PartialContainer({}).provide(fooFactory)\n *\n * const barFactory = Injectable('Bar', () => new Bar())\n * const dependenciesContainer = Container.provides(barFactory)\n *\n * const combinedContainer = dependenciesContainer.provides(partialContainer)\n *\n * // We can resolve Foo, because the combined container includes Bar, so all of Foo's dependencies are now met.\n * const foo = combinedContainer.get('Foo')\n * ```\n */\nexport class PartialContainer<Services = {}, Dependencies = {}> {\n    constructor(private readonly injectables: Injectables<Services, Dependencies>) {}\n\n    /**\n     * Create a new PartialContainer which provides a Service created by the given InjectableFunction.\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * This dependencies are allowed to be missing from the PartialContainer, but these dependencies are maintained as a\n     * parameter of the returned PartialContainer. This allows `[Container.provides]` to type check the dependencies and\n     * ensure they can be provided by the Container.\n     *\n     * @param fn A InjectableFunction, taking dependencies as arguments, which returns the Service.\n     */\n    provides<\n        AdditionalDependencies extends readonly any[],\n        Tokens extends readonly string[],\n        Token extends string,\n        Service\n    >(\n        fn: PartialInjectableFunction<AdditionalDependencies, Tokens, Token, Service>\n    ): PartialContainer<\n        AddService<Services, Token, Service>,\n        ExcludeKey<AddDependencies<ExcludeKey<Dependencies, Token>, Tokens, AdditionalDependencies>, keyof Services>\n    > {\n        return new PartialContainer({ ...this.injectables, [fn.token]: fn } as any);\n    }\n\n    /**\n     * In order to create a [Container], the InjectableFunctions maintained by the PartialContainer must be memoized\n     * into Factories that can resolve their dependencies and return the correct Service.\n     *\n     * In particular, this requires access to a \"parent\" Container to avoid infinite looping in cases where Service A\n     * depends on Service A – this is allowed (as long as the parent container provides Service A), but requires access\n     * to the parent Container to provide the parent implementation of Service A.\n     *\n     * This also means that Services provided by a PartialContainer to a Container via this function will always be\n     * scoped to the Container. In other words, if a PartialContainer containing Service A is provided to both\n     * Container X and Container Y, when Service A is resolved by Container X the InjectableFunction used to create\n     * Service A will be invoked – and when Service A is resolved by Container Y, the InjectableFunction will be invoked\n     * again.\n     *\n     * @param parent A [Container] which provides all the required Dependencies of this PartialContainer.\n     */\n    getFactories(parent: Container<Dependencies>): Factories<Services> {\n        return Object.fromEntries(\n            entries(this.injectables).map(([token, fn]) => {\n                return [\n                    token,\n                    memoize((c: Container<Services & Dependencies>) => {\n                        return fn(\n                            ...(fn.dependencies.map((t) => {\n                                return t === token\n                                    ? parent.get(t as keyof Dependencies)\n                                    : c.get(t as keyof Services & Dependencies);\n                            }) as any)\n                        );\n                    }),\n                ];\n            })\n        ) as Factories<Services>;\n    }\n\n    getTokens(): Array<keyof Services> {\n        return Object.keys(this.injectables) as Array<keyof Services>;\n    }\n}\n","import { isMemoized, memoize, Memoized } from \"../common/memoize\";\nimport { PartialContainer } from \"./PartialContainer\";\nimport { AddService, InjectableFunction, ValidTokens } from \"./types\";\n\ntype IsAssignable<T, U> = T extends U ? U : never;\n\n// This is un-safe. In practice, Containers should always be created by calling `Container::provides` on some other\n// Container (except for some \"root\" Container which is instantiated with no Services) – `Container::provides\" is safely\n// type-checked, so this doesn't introduce much risk. But a more accurate solution would be for the `Factories` and\n// `MaybeMemoizedFactories` types to keep track of which specific Services must be present in the Container\n// corresponding to each Service. But this is much more complex to implement.\ntype UnsafePartialContainer<Services> = Container<Partial<Services>>;\n\ntype MaybeMemoizedFactories<Services> = {\n    [K in keyof Services]:\n        | ((c: UnsafePartialContainer<Services>) => Services[K])\n        | Memoized<(c: UnsafePartialContainer<Services>) => Services[K]>;\n};\n\nexport type Factories<Services> = {\n    [K in keyof Services]: Memoized<(c: UnsafePartialContainer<Services>) => Services[K]>;\n};\n\nexport const CONTAINER = \"$container\";\nexport type ContainerToken = typeof CONTAINER;\n\n/**\n * A Container of values, indexed each by a unique token, which can be used throughout CameraKit. This is how CameraKit\n * implements simple dependency injection.\n *\n * Dependency injection is a way to decouple the *use* of a dependency from the *creation* of that dependency. This\n * improves modularity and re-usability, since components only care about the *interfaces* of dependencies (since that\n * determines their use) and not about their concrete creation. New implementations of a particular dependency may be\n * provided without the need to change any of the consumers of that dependency.\n *\n * There are a few commonly-used terms used when talking about dependency injection:\n *\n *   - Container (or Injector): Maintains a registry of all available Services and understands how to create them.\n *   - Service: Anything that can be provided by the Container is called a Service – this can be a value of any type.\n *   - Token: Each Service is associated with a unique name, or Token. In order to obtain a Service from the Container,\n *     the consumer must provide the Token corresponding to that Service.\n *   - InjectableFunction: Services are created by InjectableFunctions. When adding a Service to a Container, the\n *     Service provider gives the Container a InjectableFunction which, when called will return the Service. These\n *     InjectableFunctions may themselves use other Services, which will be passed to them as arguments.\n *\n * Services are, by default, singletons – that is, each call to `get()` a particular Service will return a reference\n * to the same value. In other words, InjectableFunctions are only invoked once. If multiple instances of a Service are\n * desired, a new Container can be created using the `copy([Token])` method – passing a Token to this method forces the\n * new Container to recreate the corresponding Service (the InjectableFunction will be invoked again). We say that the\n * Service is then \"scoped\" to the new Container.\n *\n *\n * One common downside of many dependency injection implementations is that the dependency graph formed by the various\n * Services can only be validated at runtime. That is, if a dependency is missing or a circular dependency is found, the\n * developer must wait until runtime to discover the error. These errors can often be confusing and hard to debug.\n *\n * This implementation eliminates this issue by moving these sorts of errors to compile time. If an unknown dependency\n * is used in a InjectableFunction, for example, the code simply won't compile.\n *\n * To achieve this, we do lose the ability to implicitly define the dependency graph, as is common with many dependency\n * injection frameworks that employ decorators to define Services and their dependencies. Instead, the dependency graph\n * must be constructed explicitly, step-by-step, via successive calls to the `provide()` method. This is a suitable\n * trade-off for CameraKit, as there are a relatively small number of Services.\n *\n * Here's a simple example of Container usage:\n * ```ts\n * const fooFactory = Injectable('Foo', () => new Foo())\n * const barFactory = Injectable('Bar', ['Foo'] as const, (foo: Foo) => new Bar(foo))\n * const container = Container.empy()\n *   .provide(fooFactory)\n *   .provide(barFactory)\n *\n * const bar: Bar = container.get('Bar')\n * ```\n */\nexport class Container<Services = {}> {\n    private readonly factories: Factories<Services>;\n\n    constructor(factories: MaybeMemoizedFactories<Services>) {\n        this.factories = {} as Factories<Services>;\n        for (const k in factories) {\n            const fn = factories[k];\n            if (isMemoized(fn)) this.factories[k] = fn;\n            else this.factories[k] = memoize(fn);\n        }\n    }\n\n    /**\n     * Create a new [Container] by providing a Service that has no dependencies.\n     */\n    static provides<Services, Dependencies>(\n        container: PartialContainer<Services, IsAssignable<{}, Dependencies>>\n    ): Container<Services>;\n\n    /**\n     * Create a new [Container] by providing a [PartialContainer] that has no dependencies.\n     */\n    static provides<Token extends string, Service>(\n        fn: InjectableFunction<{}, [], Token, Service>\n    ): Container<AddService<{}, Token, Service>>;\n\n    static provides(\n        fnOrContainer: InjectableFunction<{}, [], string, any> | PartialContainer<any, {}>\n    ): Container<any> {\n        // Although the `provides` method has overloads that match both members of the union type separately, it does\n        // not match the union type itself, so the compiler forces us to branch and handle each type within the union\n        // separately. (Maybe in the future the compiler will decide to infer this, but for now this is necessary.)\n        if (fnOrContainer instanceof PartialContainer) return new Container({}).provides(fnOrContainer);\n        return new Container({}).provides(fnOrContainer);\n    }\n\n    /**\n     * Create a copy of this Container, optionally providing a list of Services which will be scoped to the copy.\n     *\n     * This can be useful, for example, if different parts of an application wish to use the same Service interface, but\n     * do not want to share a reference to same Service instance.\n     *\n     * Say we have a Service which manages a list of Users. Our application wishes to display two lists of Users, which\n     * may be edited independently. In this case it may be desirable to create a Container for each list component, with\n     * the UserList Service scoped to those Containers – that way, each list component gets a unique copy of the\n     * UserList Service that can be edited independently of the other.\n     *\n     * @param scopedServices A list of Tokens identifying Services which will be scoped to the new Container – that is,\n     * if those Services had already been created by the source Container, they will be re-created by their Factory\n     * functions when provided by the new Container.\n     * @returns A new copy of this Container, sharing all of this Container's Services. Services corresponding to any\n     * Tokens passed to this method will be re-created by the new Container (i.e. they become \"scoped\" to the new\n     * Container).\n     */\n    copy<Tokens extends readonly (keyof Services)[]>(scopedServices?: Tokens): Container<Services> {\n        const factories: MaybeMemoizedFactories<Services> = { ...this.factories };\n\n        // We \"un-memoize\" scoped Service InjectableFunctions so they will create a new copy of their Service when\n        // provided by the new Container – we re-memoize them so the new Container will itself only create one Service\n        // instance.\n        (scopedServices || []).forEach((token: keyof Services) => {\n            factories[token] = this.factories[token].delegate;\n        });\n        return new Container(factories);\n    }\n\n    /**\n     * Gets a reference to this Container.\n     *\n     * @param token The CONTAINER token.\n     * @returns This Container.\n     */\n    get(token: ContainerToken): this;\n\n    /**\n     * Get a specific Service provided by this Container.\n     *\n     * @param token A unique string corresponding to a Service\n     * @returns A Service corresponding to the given Token.\n     */\n    get<Token extends keyof Services>(token: Token): Services[Token];\n\n    get(token: string): this | Services[keyof Services] {\n        if (token === CONTAINER) return this;\n        const factory = this.factories[token];\n        if (!factory) {\n            throw new Error(\n                `[Container::get] Could not find Service for Token \"${token}\". This should've caused a ` +\n                    \"compile-time error. If the Token is 'undefined', check all your calls to the Injectable \" +\n                    \"function. Make sure you define dependencies using string literals or string constants that are \" +\n                    \"definitely initialized before the call to Injectable.\"\n            );\n        }\n        return factory(this);\n    }\n\n    /**\n     * Run the services in this [PartialContainer]. \"Run\" simply means that [Container::get] will be called for each\n     * Service, which invokes that Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param container Optionally provide a [PartialContainer], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<AdditionalServices, Dependencies>(\n        container: PartialContainer<AdditionalServices, IsAssignable<Services, Dependencies>>\n    ): this;\n\n    /**\n     * Run the given Service. \"Run\" simply means that [Container::get] will be called for this Service, which invokes\n     * the Service's factory function, creating the Service.\n     *\n     * This may be useful e.g. if services need to initialize themselves, since generally a Service factory is only\n     * invoked when the Service is needed.\n     *\n     * Note this method cannot be used to add services to a Container. – that is, calling this method does not provide\n     * the services in a new Container.\n     *\n     * @param fn Optionally provide an [InjectableFunction], which will be used as a filter – the only services\n     * from *this* container that will run are those with a token that is also present in this PartialContainer.\n     * @returns No mutation is done to the Container, it is returned as-is (convenient for chaining).\n     */\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): this;\n\n    run<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n    ): this {\n        if (fnOrContainer instanceof PartialContainer) {\n            const runnableContainer = this.provides(fnOrContainer);\n            for (const token of fnOrContainer.getTokens()) {\n                runnableContainer.get(token);\n            }\n        } else {\n            this.provides(fnOrContainer).get(fnOrContainer.token);\n        }\n        return this;\n    }\n\n    /**\n     * Create a new Container from this Container with additional services from a given [PartialContainer].\n     *\n     * Services in the provided PartialContainer take precedence if there are service token conflicts.\n     *\n     * Services from the provided PartialContainer become scoped to the new Container – that is, if PartialContainer A\n     * is provided to Container X and Container Y, each resultant Container will contain its own copy of the services\n     * from PartialContainer A.\n     *\n     * @param container A [PartialContainer] providing additional services.\n     */\n    provides<AdditionalServices, Dependencies>(\n        container: PartialContainer<AdditionalServices, IsAssignable<Services, Dependencies>>\n    ): Container<Services & AdditionalServices>;\n\n    /**\n     * Create a new Container which provides a Service created by the given [InjectableFunction].\n     *\n     * The InjectableFunction contains metadata specifying the Token by which the created Service will be known, as well\n     * as an ordered list of Tokens to be resolved and provided to the InjectableFunction as arguments.\n     *\n     * If any of these required dependencies are missing from the Container (or if there is a mismatch between the types\n     * of those dependencies and the arguments of the InjectableFunction), a compiler error will be raised.\n     *\n     * @param fn A factory function, taking dependencies as arguments, which returns the Service.\n     */\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>>;\n\n    provides<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service, AdditionalServices>(\n        fnOrContainer:\n            | InjectableFunction<Services, Tokens, Token, Service>\n            | PartialContainer<AdditionalServices, Services>\n    ): Container<any> {\n        if (fnOrContainer instanceof PartialContainer) {\n            return this.providesContainer(fnOrContainer);\n        }\n        return this.providesService(fnOrContainer);\n    }\n\n    private providesContainer<AdditionalServices>(\n        container: PartialContainer<AdditionalServices, Services>\n    ): Container<Services & AdditionalServices> {\n        const factories = container.getFactories(this);\n        // Safety: `this.factories` and `factories` are both properly type checked, so merging them produces a Factories\n        // object with keys from both Services and AdditionalServices. The compiler is unable to infer that\n        // Factories<A> & Factories<B> == Factories<A & B>, so the cast is required.\n        return new Container(({\n            ...this.factories,\n            ...factories,\n        } as unknown) as MaybeMemoizedFactories<Services & AdditionalServices>);\n    }\n\n    private providesService<Token extends string, Tokens extends readonly ValidTokens<Services>[], Service>(\n        fn: InjectableFunction<Services, Tokens, Token, Service>\n    ): Container<AddService<Services, Token, Service>> {\n        const token = fn.token;\n        const dependencies: readonly any[] = fn.dependencies;\n\n        const factory = memoize((container: Container<Services>) => {\n            return fn(\n                ...(dependencies.map((t) => {\n                    // To support overwriting an already-existing service with a new implementation, it should be\n                    // possibleto do `provide(A, [A], a => createNewServiceFromOld(a))` – that is, inject a dependency\n                    // with the same token as this service's token.\n                    //\n                    // To avoid a circular dependency (in which the factory for service A depends on itself), we always\n                    // use the service defined in the *parent* container (i.e. this) when injecting a dependency with\n                    // the same token as the service we're providing. If we did not do this, calling `container.get(t)`\n                    // would result in an infinite loop.\n                    return t === token ? this.get(t) : container.get(t);\n                }) as any)\n            );\n        });\n\n        // Safety: `token` and `factory` are property type checked, so extending `this.factories` produces a\n        // MaybeMemoizedFactories object with the expected set of services – but when using the spread operation to\n        // merge two objects, the compiler widens the Token type to string. So we must re-narrow via casting.\n        const factories = { ...this.factories, [token]: factory };\n        return new Container((factories as unknown) as MaybeMemoizedFactories<AddService<Services, Token, Service>>);\n    }\n}\n","export const getTimeMs = () => performance.now();\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export type EventOfType<K extends string, Event extends TypedCustomEvent> = Extract<Event, TypedCustomEvent<K, any>>;\n\n/**\n * This wrapper around CustomEvent provides more descriptive type information. By using this class, the `type` property\n * of the CustomEvent will be typed as a string literal – this allows [TypedEventTarget] to provide more useful type\n * checking of events.\n */\nexport class TypedCustomEvent<N extends string = string, T = any> extends CustomEvent<T> {\n    // @ts-ignore: The compiler complains that this property \"has no initializer and is not definitely set in the\n    // constructor\" – we must rely on the superclass constructor to set this, because CustomEvent only implements a\n    // getter for type, so if we try to do `this.type = type` we get a runtime error. We do need to re-define type,\n    // though, so we can give it the specific type N instead of the less-useful string type defined by the superclass.\n    readonly type: N;\n    constructor(type: N, detail: T, eventInitDict: Omit<CustomEventInit<T>, \"detail\"> = {}) {\n        super(type, { ...eventInitDict, detail });\n    }\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** Benchmark name. Ideally, a name should be short and unambiguous with unit included. */\nexport enum BenchmarkName {\n  UNKNOWN_BENCHMARK = 0,\n  CPU_GFLOPS = 1,\n  /** GPU_GFLOPS - GFLOPS when performing single unit operations */\n  GPU_GFLOPS = 2,\n  /** GPU_GFLOPS_VECTOR - GFLOPS when performing vector operations */\n  GPU_GFLOPS_VECTOR = 3,\n  /** GPU_SYSTEM_CAPABILITIES - JSON object containing GPU feature support derived from OpenGL/CL API */\n  GPU_SYSTEM_CAPABILITIES = 4,\n  /** GPU_VERTEX_THROUGHPUT - Vertices per second */\n  GPU_VERTEX_THROUGHPUT = 5,\n  /** GPU_SIMPLE_GEOMETRY_THROUGHPUT - Vertices per second */\n  GPU_SIMPLE_GEOMETRY_THROUGHPUT = 6,\n  /** GPU_GAUSSIAN_BLUR - Sampling radius */\n  GPU_GAUSSIAN_BLUR = 7,\n  /** CPU_MEMORY_THROUGHPUT - MB per second */\n  CPU_MEMORY_THROUGHPUT = 8,\n  /** GPU_FILL_RATE - Pixels per second */\n  GPU_FILL_RATE = 9,\n  /** MEM_TOTAL_MEMORY - Total memory of the system */\n  MEM_TOTAL_MEMORY = 10,\n  /** CPU_NUM_PROCESSORS - Gathers the number of CPUs the device has */\n  CPU_NUM_PROCESSORS = 11,\n  /** DEVICE_INFORMATION_CHIPSET - Returns the Chipset of the device via Build.BOARD */\n  DEVICE_INFORMATION_CHIPSET = 12,\n  /** DEVICE_INFORMATION_BUILD_HARDWARE - Returns the Build.HARDWARE data for a device. This can be the chipset for some devices */\n  DEVICE_INFORMATION_BUILD_HARDWARE = 13,\n  /** DEVICE_INFORMATION_BUILD_BRAND - Returns the Build.BRAND for the device. This is normally the marketed brand for a device. */\n  DEVICE_INFORMATION_BUILD_BRAND = 14,\n  /** DEVICE_INFORMATION_BUILD_MANUFACTURER - Returns the Build.MANUFACTURER for the device. This is what company physically assembled the device */\n  DEVICE_INFORMATION_BUILD_MANUFACTURER = 15,\n  /** DEVICE_INFORMATION_BUILD_MODEL - Returns the Build.MODEL for the device. This is normally how we identify a device as 'SM-G930V' */\n  DEVICE_INFORMATION_BUILD_MODEL = 16,\n  /** DEVICE_INFORMATION_SCREEN_PROPERTIES - Returns the screen configuration from the device such as widthPixels and density. */\n  DEVICE_INFORMATION_SCREEN_PROPERTIES = 17,\n  /** DEVICE_INFORMATION_CODEC_CAPABILITES - Gathers the codec capabilities for the device. Such as HEVC and 264 profiles supported for encode/decode */\n  DEVICE_INFORMATION_CODEC_CAPABILITES = 18,\n  /** CPU_PRIME_KOTLIN - Calculates primes in Kotlin using sieve */\n  CPU_PRIME_KOTLIN = 19,\n  /** CPU_PRIME_NATIVE - Calculates primes in C++ using sieve */\n  CPU_PRIME_NATIVE = 20,\n  /** CPU_SQRT_KOTLIN - Calculates sqrt using the babylonian method in kotlin */\n  CPU_SQRT_KOTLIN = 21,\n  /** CPU_SQRT_NATIVE - Calculates sqrt using the babylonian method in C++ */\n  CPU_SQRT_NATIVE = 22,\n  /** CPU_INT_MATH_KOTLIN - Performs a serious of int ALU computations in kotlin */\n  CPU_INT_MATH_KOTLIN = 23,\n  /** CPU_INT_MATH_NATIVE - Performs a serious of int ALU computations in C++ */\n  CPU_INT_MATH_NATIVE = 24,\n  /** DEVICE_INFORMATION_GL_VERSION - OpenGL version running on the device, calculated as (100 * major) + minor, ex. \"OpenGL ES 3.2\" -> 302 */\n  DEVICE_INFORMATION_GL_VERSION = 25,\n  /** DEVICE_INFORMATION_GLSL_VERSION - GLSL version running on the device, calculated as (100 * major) + minor, ex. \"OpenGL ES GLSL ES 3.20\" -> 320 */\n  DEVICE_INFORMATION_GLSL_VERSION = 26,\n  /** DEVICE_INFORMATION_OPENCL_EXISTS - True if we can run OpenCL on this device, otherwise false */\n  DEVICE_INFORMATION_OPENCL_EXISTS = 27,\n  /** DEVICE_INFORMATION_IS_HOST_UNIFIED_MEMORY - True if the device is using a unified memory architecture */\n  DEVICE_INFORMATION_IS_HOST_UNIFIED_MEMORY = 28,\n  /** DEVICE_INFORMATION_OPENCL_VERSION - OpenCL version running on the device, calculated as (100 * major) + minor, ex. \"OpenCL 1.2\" -> 102 */\n  DEVICE_INFORMATION_OPENCL_VERSION = 29,\n  /** DEVICE_INFORMATION_TIMING_RESOLUTION_NS - Timing resolution in nanoseconds for profiling reported by OpenCL */\n  DEVICE_INFORMATION_TIMING_RESOLUTION_NS = 30,\n  /** DEVICE_INFORMATION_ADDRESS_SIZE - Number of bits used to address memory (32-bit, 64-bit) */\n  DEVICE_INFORMATION_ADDRESS_SIZE = 31,\n  /** DEVICE_INFORMATION_GPU_MAX_CLOCK_FREQUENCY_MHZ - Maximum clock frequency of the device in MHz */\n  DEVICE_INFORMATION_GPU_MAX_CLOCK_FREQUENCY_MHZ = 32,\n  /** DEVICE_INFORMATION_COMPUTE_UNITS - Number of available compute units on the device */\n  DEVICE_INFORMATION_COMPUTE_UNITS = 33,\n  /** DEVICE_INFORMATION_MAX_WORKGROUP_SIZE - Maximum number of tasks that can be processed at one time by a workgroup */\n  DEVICE_INFORMATION_MAX_WORKGROUP_SIZE = 34,\n  /** DEVICE_INFORMATION_LOCAL_MEMORY_IS_LOCAL - True if the device has dedicated local memory storage */\n  DEVICE_INFORMATION_LOCAL_MEMORY_IS_LOCAL = 35,\n  /** DEVICE_INFORMATION_LOCAL_MEMORY_SIZE - Amount of local memory storage in bytes */\n  DEVICE_INFORMATION_LOCAL_MEMORY_SIZE = 36,\n  /** DEVICE_INFORMATION_GLOBAL_MEMORY_CACHE_SIZE - Amount of global memory cache in bytes */\n  DEVICE_INFORMATION_GLOBAL_MEMORY_CACHE_SIZE = 37,\n  /** DEVICE_INFORMATION_GLOBAL_MEMORY_CACHELINE_SIZE - Line size for global memory cache in bytes */\n  DEVICE_INFORMATION_GLOBAL_MEMORY_CACHELINE_SIZE = 38,\n  /** DEVICE_INFORMATION_GL_HAS_FENCE_SYNC_OBJECT - True if device reports support for GL fence sync objects */\n  DEVICE_INFORMATION_GL_HAS_FENCE_SYNC_OBJECT = 39,\n  /** DEVICE_INFORMATION_HEXAGON_NN_LIBRARY_VERSION - Supported hexagon nn library version. 0 if hexagon nn is not suppoted */\n  DEVICE_INFORMATION_HEXAGON_NN_LIBRARY_VERSION = 40,\n  /** GPU_GFLOPS_V2 - New GPU_GFLOPS benchmark expected to have better convergence properties than GPU_GFLOPS */\n  GPU_GFLOPS_V2 = 41,\n  /** GPU_GFLOPS_VECTOR_V2 - New GPU_GFLOPS_VECTOR benchmark expected to have better convergence properties than GPU_GFLOPS_VECTOR */\n  GPU_GFLOPS_VECTOR_V2 = 42,\n  /** DEVICE_INFORMATION_GPU_MODEL - GPU Model, e.g. Adreno (TM) 308, Mali-300 */\n  DEVICE_INFORMATION_GPU_MODEL = 43,\n  /** DEVICE_INFORMATION_CODEC_CAPABILITES_V2 - Gathers more comprehensive info about media codec capabilities of the device */\n  DEVICE_INFORMATION_CODEC_CAPABILITES_V2 = 44,\n  /** DEVICE_INFORMATION_MEDIA_PERFORMANCE_CLASS - Media performance class, e.g. 12, 13 and details:https://developer.android.com/topic/performance/performance-class */\n  DEVICE_INFORMATION_MEDIA_PERFORMANCE_CLASS = 45,\n  UNRECOGNIZED = -1,\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\n\ntype TypedEventListener<Event extends TypedCustomEvent> = (evt: Event) => void;\n\ninterface TypedEventListenerOptions {\n    once?: boolean;\n}\n\n/**\n * Extract the generic Events type (which must extend {@link TypedCustomEvent}) from a {@link TypedEventTarget}\n */\nexport type EventsFromTarget<Target extends TypedEventTarget> = Target extends TypedEventTarget<infer Events>\n    ? Events\n    : never;\n\n/**\n * This wrapper around EventTarget provides more descriptive type information. By using this class, calls to EventTarget\n * methods are correctly type checked to ensure only allowed event types are used, and that events and their type\n * strings are correctly associated.\n *\n * For example, when calling TypedEventTarget::addEventListener, the event passed to the callback will have the correct\n * type corresponding to the type of event for which the listener has been added.\n */\nexport class TypedEventTarget<Events extends TypedCustomEvent = TypedCustomEvent> {\n    private readonly listeners: Map<string, TypedEventListener<TypedCustomEvent>[]>;\n    private readonly options: Map<TypedEventListener<TypedCustomEvent>, TypedEventListenerOptions>;\n\n    constructor() {\n        this.listeners = new Map();\n        this.options = new Map();\n    }\n\n    addEventListener<K extends Events[\"type\"]>(\n        type: K,\n        callback: TypedEventListener<EventOfType<K, Events>>,\n        options?: TypedEventListenerOptions\n    ): void {\n        // Safety: the type in the method signature ensures the callback handles events of type K, and we use that type\n        // as the key when storing the callback – we only ever invoke callbacks obtained by mapping from that event\n        // type to the callback, so even though we store the callback with a wider type, we only ever call it with the\n        // specific event type specified by K.\n        const listener = callback as TypedEventListener<TypedCustomEvent>;\n        const listeners = this.listeners.get(type) ?? [];\n        this.listeners.set(type, [...listeners, listener]);\n        if (options) this.options.set(listener, options);\n    }\n\n    dispatchEvent(event: Events): true {\n        const listeners = this.listeners.get(event.type);\n        if (!listeners) return true;\n\n        listeners.forEach((listener) => {\n            const options = this.options.get(listener) ?? {};\n            try {\n                listener(event);\n            } catch (error) {\n                // We'll do our best to immitate native behavior, where if a listener throws an error it is caught and\n                // emitted as an error event on the window – this might be slightly different from native behavior since\n                // we have to use a CustomEvent, but it's as close as we can get.\n                if (window) window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n            if (options.once) this.removeEventListener(event.type, listener);\n        });\n\n        return true;\n    }\n\n    removeEventListener<K extends Events[\"type\"]>(type: K, callback: TypedEventListener<EventOfType<K, Events>>): void {\n        const listener = callback as TypedEventListener<TypedCustomEvent>;\n        const listeners = this.listeners.get(type);\n        if (!listeners) return;\n        this.listeners.set(\n            type,\n            listeners.filter((l) => l !== listener)\n        );\n        this.options.delete(listener);\n    }\n}\n","import { ensureError } from \"../common/errors\";\nimport { getTimeMs } from \"../common/time\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nlet requestId = 0;\nconst safeParseInt = (str: string | null) => {\n    if (str == null) return 0;\n    const maybeInt = parseInt(str);\n    return isNaN(maybeInt) ? 0 : maybeInt;\n};\n\ninterface Started {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n}\n\ninterface Completed {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n    status: number;\n    sizeByte: number;\n}\n\ninterface Errored {\n    requestId: number;\n    timeMs: number;\n    dimensions: Dimensions;\n    error: Error;\n}\n\nexport type Dimensions = Record<string, string | undefined>;\n\nexport type RequestStateEvents =\n    | TypedCustomEvent<\"started\", Started>\n    | TypedCustomEvent<\"completed\", Completed>\n    | TypedCustomEvent<\"errored\", Errored>;\n\nexport const requestStateEventTarget = new TypedEventTarget<RequestStateEvents>();\n\nexport const dispatchRequestStarted = (data: Omit<Started, \"requestId\" | \"timeMs\">): Started => {\n    const started: Started = { ...data, requestId: requestId++, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"started\", started));\n    return started;\n};\n\nexport const dispatchRequestCompleted = (data: Omit<Completed, \"timeMs\">): Completed => {\n    const completed: Completed = { ...data, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"completed\", completed));\n    return completed;\n};\n\nexport const dispatchRequestErrored = (data: Omit<Errored, \"timeMs\">): Errored => {\n    const errored: Errored = { ...data, timeMs: getTimeMs() };\n    requestStateEventTarget.dispatchEvent(new TypedCustomEvent(\"errored\", errored));\n    return errored;\n};\n\nexport const createRequestStateEmittingHandler = <D extends Dimensions = Dimensions>(): ChainableHandler<\n    [RequestInfo, D],\n    Response,\n    RequestInfo,\n    Response,\n    RequestMetadata\n> => (next) => async ([request, dimensions], metadata) => {\n    const { requestId } = dispatchRequestStarted({ dimensions });\n    try {\n        const response = await next(request, metadata);\n        const status = response.status;\n        const sizeByte = safeParseInt(response.headers.get(\"content-length\"));\n        dispatchRequestCompleted({ requestId, dimensions, status, sizeByte });\n        return response;\n    } catch (error) {\n        dispatchRequestErrored({ requestId, dimensions, error: ensureError(error) });\n        throw error;\n    }\n};\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { LensProto } from \"../lens/Lens\";\n\n/**\n * Holds information about a lens being rendered.\n */\nexport interface LensContext {\n    activeLens: LensProto | undefined;\n}\n\n/**\n * @internal\n */\nexport const lensContextFactory = Injectable(\"LensContext\", () => {\n    const lensContext: LensContext = { activeLens: undefined };\n    return lensContext;\n});\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { Lens } from \"../lens\";\nimport { AssetDescriptor } from \"../lens-core-module/types\";\n\nexport type SessionLifecycleEvents =\n    | TypedCustomEvent<\"sessionCreated\">\n    | TypedCustomEvent<\"sessionSuspended\">\n    | TypedCustomEvent<\"sessionResumed\">\n    | TypedCustomEvent<\"sessionDestroyed\">;\n\nexport type SessionLensEvents =\n    | TypedCustomEvent<\"lensApplyStart\", Lens>\n    | TypedCustomEvent<\"lensDownloadComplete\", Lens>\n    | TypedCustomEvent<\"lensInitiated\", Lens>\n    | TypedCustomEvent<\"lensTurnedOn\", Lens>\n    | TypedCustomEvent<\"lensLoaded\", Lens>\n    | TypedCustomEvent<\"firstFrameProcessed\", Lens>\n    | TypedCustomEvent<\"lensTurnedOff\", Lens>\n    | TypedCustomEvent<\"lensContentValidationFailure\", Lens>;\n\nexport type SessionAssetEvents = TypedCustomEvent<\"assetValidationFailure\", AssetDescriptor>;\n\nexport type SessionStateEvents = SessionLensEvents | SessionAssetEvents | SessionLifecycleEvents;\n\n/**\n * @internal\n */\nexport const sessionStateEventTargetFactory = Injectable(\n    \"sessionEventTarget\",\n    () => new TypedEventTarget<SessionStateEvents>()\n);\n\nexport type SessionStateEventTarget = ReturnType<typeof sessionStateEventTargetFactory>;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * A Timestamp represents a point in time independent of any time zone\n * or calendar, represented as seconds and fractions of seconds at\n * nanosecond resolution in UTC Epoch time. It is encoded using the\n * Proleptic Gregorian Calendar which extends the Gregorian calendar\n * backwards to year one. It is encoded assuming all minutes are 60\n * seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from\n * 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.\n * By restricting to that range, we ensure that we can convert to\n * and from  RFC 3339 date strings.\n * See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n *\n * Example 5: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n */\nexport interface Timestamp {\n  /**\n   * Represents seconds of UTC time since Unix epoch\n   * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   * 9999-12-31T23:59:59Z inclusive.\n   */\n  seconds: number;\n  /**\n   * Non-negative fractions of a second at nanosecond resolution. Negative\n   * second values with fractions must still have non-negative nanos values\n   * that count forward in time. Must be from 0 to 999,999,999\n   * inclusive.\n   */\n  nanos: number;\n}\n\nconst baseTimestamp: object = { seconds: 0, nanos: 0 };\n\nexport const Timestamp = {\n  encode(\n    message: Timestamp,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.seconds !== 0) {\n      writer.uint32(8).int64(message.seconds);\n    }\n    if (message.nanos !== 0) {\n      writer.uint32(16).int32(message.nanos);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Timestamp {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTimestamp } as Timestamp;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.seconds = longToNumber(reader.int64() as Long);\n          break;\n        case 2:\n          message.nanos = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Timestamp>): Timestamp {\n    const message = { ...baseTimestamp } as Timestamp;\n    if (object.seconds !== undefined && object.seconds !== null) {\n      message.seconds = object.seconds;\n    } else {\n      message.seconds = 0;\n    }\n    if (object.nanos !== undefined && object.nanos !== null) {\n      message.nanos = object.nanos;\n    } else {\n      message.nanos = 0;\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { BenchmarkName } from \"../../cdp/cof/benchmark_name\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\nexport interface BenchmarkValue {\n  intValue: number | undefined;\n  longValue: number | undefined;\n  boolValue: boolean | undefined;\n  floatValue: number | undefined;\n}\n\nexport interface BenchmarkRequest {\n  /**\n   * Benchmarks a client is requested to execute. They are ordered by priority.\n   * Benchmark in the head of the list has the highest priority.\n   */\n  benchmarkNames: BenchmarkName[];\n  /**\n   * Client can ignore benchmarks that have not been executed after this timestamp. The client should still try to\n   * report the results from benchmarks that have already been executed.\n   */\n  expirationTimestamp: Date | undefined;\n}\n\nexport interface BenchmarkResult {\n  name: BenchmarkName;\n  value: BenchmarkValue | undefined;\n}\n\nconst baseBenchmarkValue: object = {};\n\nexport const BenchmarkValue = {\n  encode(\n    message: BenchmarkValue,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.intValue !== undefined) {\n      writer.uint32(8).int32(message.intValue);\n    }\n    if (message.longValue !== undefined) {\n      writer.uint32(16).int64(message.longValue);\n    }\n    if (message.boolValue !== undefined) {\n      writer.uint32(24).bool(message.boolValue);\n    }\n    if (message.floatValue !== undefined) {\n      writer.uint32(37).float(message.floatValue);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkValue {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseBenchmarkValue } as BenchmarkValue;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.intValue = reader.int32();\n          break;\n        case 2:\n          message.longValue = longToNumber(reader.int64() as Long);\n          break;\n        case 3:\n          message.boolValue = reader.bool();\n          break;\n        case 4:\n          message.floatValue = reader.float();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<BenchmarkValue>): BenchmarkValue {\n    const message = { ...baseBenchmarkValue } as BenchmarkValue;\n    if (object.intValue !== undefined && object.intValue !== null) {\n      message.intValue = object.intValue;\n    } else {\n      message.intValue = undefined;\n    }\n    if (object.longValue !== undefined && object.longValue !== null) {\n      message.longValue = object.longValue;\n    } else {\n      message.longValue = undefined;\n    }\n    if (object.boolValue !== undefined && object.boolValue !== null) {\n      message.boolValue = object.boolValue;\n    } else {\n      message.boolValue = undefined;\n    }\n    if (object.floatValue !== undefined && object.floatValue !== null) {\n      message.floatValue = object.floatValue;\n    } else {\n      message.floatValue = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseBenchmarkRequest: object = { benchmarkNames: 0 };\n\nexport const BenchmarkRequest = {\n  encode(\n    message: BenchmarkRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    writer.uint32(10).fork();\n    for (const v of message.benchmarkNames) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.expirationTimestamp !== undefined) {\n      Timestamp.encode(\n        toTimestamp(message.expirationTimestamp),\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseBenchmarkRequest } as BenchmarkRequest;\n    message.benchmarkNames = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.benchmarkNames.push(reader.int32() as any);\n            }\n          } else {\n            message.benchmarkNames.push(reader.int32() as any);\n          }\n          break;\n        case 2:\n          message.expirationTimestamp = fromTimestamp(\n            Timestamp.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<BenchmarkRequest>): BenchmarkRequest {\n    const message = { ...baseBenchmarkRequest } as BenchmarkRequest;\n    message.benchmarkNames = [];\n    if (object.benchmarkNames !== undefined && object.benchmarkNames !== null) {\n      for (const e of object.benchmarkNames) {\n        message.benchmarkNames.push(e);\n      }\n    }\n    if (\n      object.expirationTimestamp !== undefined &&\n      object.expirationTimestamp !== null\n    ) {\n      message.expirationTimestamp = object.expirationTimestamp;\n    } else {\n      message.expirationTimestamp = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseBenchmarkResult: object = { name: 0 };\n\nexport const BenchmarkResult = {\n  encode(\n    message: BenchmarkResult,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== 0) {\n      writer.uint32(8).int32(message.name);\n    }\n    if (message.value !== undefined) {\n      BenchmarkValue.encode(message.value, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): BenchmarkResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseBenchmarkResult } as BenchmarkResult;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.int32() as any;\n          break;\n        case 2:\n          message.value = BenchmarkValue.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<BenchmarkResult>): BenchmarkResult {\n    const message = { ...baseBenchmarkResult } as BenchmarkResult;\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = 0;\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = BenchmarkValue.fromPartial(object.value);\n    } else {\n      message.value = undefined;\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = date.getTime() / 1_000;\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = t.seconds * 1_000;\n  millis += t.nanos / 1_000_000;\n  return new Date(millis);\n}\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.common\";\n\n/** Randomization unit ID */\nexport interface Ruid {\n  /** Type of ID for request */\n  type: Ruid_Type;\n  /** String value of ID */\n  stringValue: string;\n  /**\n   * When specifying a privacy-sensitive RUID (such as device_id), a logging ID should be used instead of the RUID for logging.\n   * Each privacy-sensitive RUID type maps to a replacement logging ID type (for example: device_id -> client_id).\n   * Note: this is suffixed with `_value` both to indicate it's a value and to avoid conflict with the LoggingId DTO.\n   */\n  loggingIdValue: string;\n}\n\n/** Randomization units supported for allocation */\nexport enum Ruid_Type {\n  /** UNSET - Unknown type */\n  UNSET = 0,\n  /** USER - Snapchat user ID */\n  USER = 1,\n  /** DEVICE - Config device ID */\n  DEVICE = 2,\n  /** WEB_CLIENT - Web client ID */\n  WEB_CLIENT = 3,\n  /** AD_ACCOUNT - Ad account ID */\n  AD_ACCOUNT = 4,\n  /** USERNAME - Snapchat username (legacy only) */\n  USERNAME = 5,\n  /** AD_MODERATION_AD - Ad Id used by Ad Moderation backend. */\n  AD_MODERATION_AD = 6,\n  /** WEB_SNAPCHAT_USER - Snapchat user id used on web. */\n  WEB_SNAPCHAT_USER = 7,\n  /** INTERNAL - Internal test RUID, internal use only and no analysis. */\n  INTERNAL = 8,\n  /** AM_ORGANIZATION - Ads Manager organization ID */\n  AM_ORGANIZATION = 9,\n  /** AM_MEMBER - Ads Manager member ID */\n  AM_MEMBER = 10,\n  /** AM_SESSION - Ads Manager session ID */\n  AM_SESSION = 11,\n  /** AM_PROFILE - Ads Manager profile ID */\n  AM_PROFILE = 12,\n  /** AM_SNAPCHAT_USER - Snapchat user ID on Ads Manager */\n  AM_SNAPCHAT_USER = 13,\n  /** SNAPCHAT_ADVERTISING - Snapchat Advertising ID for Budget A/B */\n  SNAPCHAT_ADVERTISING = 14,\n  /** AM_CLIENT - Ads Manager client ID */\n  AM_CLIENT = 15,\n  UNRECOGNIZED = -1,\n}\n\nconst baseRuid: object = { type: 0, stringValue: \"\", loggingIdValue: \"\" };\n\nexport const Ruid = {\n  encode(message: Ruid, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n    if (message.stringValue !== \"\") {\n      writer.uint32(18).string(message.stringValue);\n    }\n    if (message.loggingIdValue !== \"\") {\n      writer.uint32(26).string(message.loggingIdValue);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Ruid {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseRuid } as Ruid;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32() as any;\n          break;\n        case 2:\n          message.stringValue = reader.string();\n          break;\n        case 3:\n          message.loggingIdValue = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Ruid>): Ruid {\n    const message = { ...baseRuid } as Ruid;\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = 0;\n    }\n    if (object.stringValue !== undefined && object.stringValue !== null) {\n      message.stringValue = object.stringValue;\n    } else {\n      message.stringValue = \"\";\n    }\n    if (object.loggingIdValue !== undefined && object.loggingIdValue !== null) {\n      message.loggingIdValue = object.loggingIdValue;\n    } else {\n      message.loggingIdValue = \"\";\n    }\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n */\nexport interface DoubleValue {\n  /** The double value. */\n  value: number;\n}\n\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n */\nexport interface FloatValue {\n  /** The float value. */\n  value: number;\n}\n\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n */\nexport interface Int64Value {\n  /** The int64 value. */\n  value: number;\n}\n\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n */\nexport interface UInt64Value {\n  /** The uint64 value. */\n  value: number;\n}\n\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n */\nexport interface Int32Value {\n  /** The int32 value. */\n  value: number;\n}\n\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n */\nexport interface UInt32Value {\n  /** The uint32 value. */\n  value: number;\n}\n\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n */\nexport interface BoolValue {\n  /** The bool value. */\n  value: boolean;\n}\n\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n */\nexport interface StringValue {\n  /** The string value. */\n  value: string;\n}\n\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n */\nexport interface BytesValue {\n  /** The bytes value. */\n  value: Uint8Array;\n}\n\nconst baseDoubleValue: object = { value: 0 };\n\nexport const DoubleValue = {\n  encode(\n    message: DoubleValue,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(9).double(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DoubleValue {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDoubleValue } as DoubleValue;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.double();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<DoubleValue>): DoubleValue {\n    const message = { ...baseDoubleValue } as DoubleValue;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseFloatValue: object = { value: 0 };\n\nexport const FloatValue = {\n  encode(\n    message: FloatValue,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(13).float(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): FloatValue {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFloatValue } as FloatValue;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.float();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<FloatValue>): FloatValue {\n    const message = { ...baseFloatValue } as FloatValue;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseInt64Value: object = { value: 0 };\n\nexport const Int64Value = {\n  encode(\n    message: Int64Value,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(8).int64(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Int64Value {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseInt64Value } as Int64Value;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = longToNumber(reader.int64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Int64Value>): Int64Value {\n    const message = { ...baseInt64Value } as Int64Value;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseUInt64Value: object = { value: 0 };\n\nexport const UInt64Value = {\n  encode(\n    message: UInt64Value,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(8).uint64(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UInt64Value {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseUInt64Value } as UInt64Value;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<UInt64Value>): UInt64Value {\n    const message = { ...baseUInt64Value } as UInt64Value;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseInt32Value: object = { value: 0 };\n\nexport const Int32Value = {\n  encode(\n    message: Int32Value,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(8).int32(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Int32Value {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseInt32Value } as Int32Value;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Int32Value>): Int32Value {\n    const message = { ...baseInt32Value } as Int32Value;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseUInt32Value: object = { value: 0 };\n\nexport const UInt32Value = {\n  encode(\n    message: UInt32Value,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(8).uint32(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UInt32Value {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseUInt32Value } as UInt32Value;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<UInt32Value>): UInt32Value {\n    const message = { ...baseUInt32Value } as UInt32Value;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseBoolValue: object = { value: false };\n\nexport const BoolValue = {\n  encode(\n    message: BoolValue,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value === true) {\n      writer.uint32(8).bool(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): BoolValue {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseBoolValue } as BoolValue;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<BoolValue>): BoolValue {\n    const message = { ...baseBoolValue } as BoolValue;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = false;\n    }\n    return message;\n  },\n};\n\nconst baseStringValue: object = { value: \"\" };\n\nexport const StringValue = {\n  encode(\n    message: StringValue,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== \"\") {\n      writer.uint32(10).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): StringValue {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStringValue } as StringValue;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<StringValue>): StringValue {\n    const message = { ...baseStringValue } as StringValue;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseBytesValue: object = {};\n\nexport const BytesValue = {\n  encode(\n    message: BytesValue,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value.length !== 0) {\n      writer.uint32(10).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): BytesValue {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseBytesValue } as BytesValue;\n    message.value = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<BytesValue>): BytesValue {\n    const message = { ...baseBytesValue } as BytesValue;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = new Uint8Array();\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"../../cdp/cof/namespace\";\nimport { BenchmarkResult } from \"../../cdp/cof/benchmark\";\nimport { Ruid } from \"../../common/ruid\";\nimport { BoolValue } from \"../../google/protobuf/wrappers\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** Indicates what was the state of the app when the config sync was triggered */\nexport enum ConfigTargetingTriggerEventType {\n  /** UNKNOWN_EVENT_TYPE - Unknown */\n  UNKNOWN_EVENT_TYPE = 0,\n  /** COLD_START - Deprecated because of simplification to FG/BG */\n  COLD_START = 1,\n  /** WARM_START - Deprecated because of simplification to FG/BG */\n  WARM_START = 2,\n  /** FOREGROUND_TRIGGER - Triggered when application is in the foreground */\n  FOREGROUND_TRIGGER = 3,\n  /** BACKGROUND_TRIGGER - Triggered when application is backgrounded */\n  BACKGROUND_TRIGGER = 4,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * Indicates what was the state of the app when the config sync happens\n * The enum is also used as a dynamic client property to populate feature signals\n */\nexport enum ConfigTargetingAppState {\n  /** UNKNOWN_APP_STATE - Unknown */\n  UNKNOWN_APP_STATE = 0,\n  /** FOREGROUND - Foreground */\n  FOREGROUND = 1,\n  /** BACKGROUND - Background */\n  BACKGROUND = 2,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * We expect this enum to be updated whenever there is a new sync instrumentation: This will help us isolate new changes on\n * server side to avoid post mortems like https://snapchat.quip.com/xGnVAcsBrOeC\n */\nexport enum ConfigTargetingInstrumentation {\n  /** DEFAULT_INSTRUMENTATION - Default */\n  DEFAULT_INSTRUMENTATION = 0,\n  /** USER_AUTHENTICATION - User logged in */\n  USER_AUTHENTICATION = 1,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * The request contains targeting signals that are not already part of the User Agent.\n * Note the user agent is passed via the standard HTTP header hence not part of the request proto.\n */\nexport interface ConfigTargetingRequest {\n  /**\n   * The previously received etag, an empty list of ConfigResult will be returned if this matches\n   * the newly computed etag.\n   */\n  configResultsEtag: string;\n  /**\n   * Caller can provide at most one field from \"namespaces\" and \"config_names\"\n   * If not empty only return the matched configs in these namespaces.\n   * If empty return all matched configs.\n   */\n  namespaces: Namespace[];\n  /**\n   * Deprecated\n   *\n   * @deprecated\n   */\n  ghostId: string;\n  /** ISO ALPHA-2 Country Code (lowercase) */\n  countryCode: string;\n  /** The width in pixel of client screen. */\n  screenWidth: number;\n  /** The height in pixel of client screen. */\n  screenHeight: number;\n  /** Current device connectivity */\n  connectivity: Connectivity | undefined;\n  /** The maximum playable video width (assumes portrait orientation) */\n  maxVideoWidthPx: number;\n  /** The maximum playable video height (assumes portrait orientation) */\n  maxVideoHeightPx: number;\n  /** Client reports results from benchmark executions. */\n  benchmarkResults: BenchmarkResult[];\n  /** If set the server will only return the config results that are new or have changed. */\n  deltaSync: boolean;\n  /**\n   * User Agent used for server to server request, which takes precedence over the User-Agent header\n   *\n   * @deprecated\n   */\n  userAgent: string;\n  /** Type of event that triggers client to sync server */\n  triggerEventType: ConfigTargetingTriggerEventType;\n  /** App state when config targeting sync happens */\n  appState: ConfigTargetingAppState;\n  /**\n   * Locale of the client.\n   *\n   * @deprecated\n   */\n  locale: string;\n  /** Need to set this field for AB service if user id is not available (before user login). */\n  deviceId: string;\n  /**\n   * Deprecated! This field won't be used! For server-initiated requests, set userId in \"x-snap-cof-principal\" header\n   *\n   * @deprecated\n   */\n  userId: string;\n  /**\n   * client ip is used for server to client ip to cof server.\n   *\n   * @deprecated\n   */\n  clientIp: string;\n  /** If true, this is a request before user login. */\n  isUnAuthorized: boolean;\n  /** App locale in client. This may be different from device locale, which will be passed from header \"Accept-Language\". */\n  appLocale: string;\n  /** Location of config targeting sync invocation. */\n  instrumentation: ConfigTargetingInstrumentation;\n  /**\n   * Timestamp in seconds from unix epoc that is the last time that this client was able to sync with the service.\n   * This is used for us to optimize delta syncing infrastructure.\n   */\n  lastSuccessfulSync: number;\n  /** This sync triggered by user logout. */\n  isLogout: boolean;\n  /** The source of app install (Android Only) */\n  packageInstaller: string;\n  /** Session ID that blizzard has when a COF sync is triggered */\n  syncTriggerBlizzardSessionId: string;\n  /** Session ID that blizzard has when a COF sync is executed */\n  syncExecutionBlizzardSessionId: string;\n  /** The delay between when the app is started and cof sync is triggered */\n  cofSyncTriggerDelayFromStartupMs: number;\n  /** The delay between when the app is started and cof sync starts to execute */\n  cofSyncExecutionDelayFromStartupMs: number;\n  /** Timestamp in seconds of the time the sync was triggered */\n  syncTriggerTime: number;\n  /** Allows client to signal what kind of media encoders/decoders are available */\n  decoderEncoderAvailability: DecoderEncoderAvailablity | undefined;\n  /** SnapKit app id from SnapKit Dev Portal */\n  snapkitAppId: string;\n  /** Lens core version which will be passed by all clients */\n  lenscoreVersion: number;\n  /**\n   * Can represent any ID such as user_id, device_id, web_client_id; When present, its value override the corresponding\n   * fields in the request\n   */\n  ruid: Ruid | undefined;\n  /**\n   * Caller can provide at most one field from \"namespaces\" and \"config_names\"\n   * If not empty only return the matched configs\n   */\n  configNames: string[];\n  /**\n   * If true response will include TEST_USER allowlisted treatments\n   * This is necessary for pre-login syncs where we do not yet know the user that will be logged in\n   * Only works on internal builds AND if user is not logged-in.\n   * See https://jira.sc-corp.net/browse/DAPSUPPORT-3363 for more context.\n   */\n  includeTestUserTreatments: boolean;\n  /** whether to log exposure logging, default is to log exposure */\n  disableExposureLogging: boolean;\n  /**\n   * Override value for the LENS_CLUSTER_ORIG_4 targeting property so that browser clients can\n   * implement their own device benchmarking for lenses.\n   */\n  lensClusterOrig4: number;\n}\n\n/** Connectivity */\nexport interface Connectivity {\n  /** Current network connection type */\n  networkType: Connectivity_NetworkType;\n  /**\n   * A network is classified as metered when the user is sensitive to heavy data usage\n   * on that connection due to monetary costs, data limitations or battery/performance issues.\n   */\n  isMetered: boolean | undefined;\n  /** Whether or not client is roaming */\n  isRoaming: boolean | undefined;\n  /** String representing what carrier is providing the device with internet. */\n  carrier: string;\n}\n\n/** NetworkType */\nexport enum Connectivity_NetworkType {\n  /** UNKNOWN_NETWORK_TYPE - Unknown */\n  UNKNOWN_NETWORK_TYPE = 0,\n  /** CELLULAR - Cellular */\n  CELLULAR = 1,\n  /** WIFI - Wifi */\n  WIFI = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport interface DecoderEncoderAvailablity {\n  /** Signals that snapchat's custom VP9 software decoder library is available on the client */\n  isSnapVp9DecoderAvailable: boolean;\n  /** Signals that snapchat's custom AV1 software decoder library is available on the client */\n  isSnapAv1DecoderAvailable: boolean;\n}\n\nconst baseConfigTargetingRequest: object = {\n  configResultsEtag: \"\",\n  namespaces: 0,\n  ghostId: \"\",\n  countryCode: \"\",\n  screenWidth: 0,\n  screenHeight: 0,\n  maxVideoWidthPx: 0,\n  maxVideoHeightPx: 0,\n  deltaSync: false,\n  userAgent: \"\",\n  triggerEventType: 0,\n  appState: 0,\n  locale: \"\",\n  deviceId: \"\",\n  userId: \"\",\n  clientIp: \"\",\n  isUnAuthorized: false,\n  appLocale: \"\",\n  instrumentation: 0,\n  lastSuccessfulSync: 0,\n  isLogout: false,\n  packageInstaller: \"\",\n  syncTriggerBlizzardSessionId: \"\",\n  syncExecutionBlizzardSessionId: \"\",\n  cofSyncTriggerDelayFromStartupMs: 0,\n  cofSyncExecutionDelayFromStartupMs: 0,\n  syncTriggerTime: 0,\n  snapkitAppId: \"\",\n  lenscoreVersion: 0,\n  configNames: \"\",\n  includeTestUserTreatments: false,\n  disableExposureLogging: false,\n  lensClusterOrig4: 0,\n};\n\nexport const ConfigTargetingRequest = {\n  encode(\n    message: ConfigTargetingRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.configResultsEtag !== \"\") {\n      writer.uint32(10).string(message.configResultsEtag);\n    }\n    writer.uint32(18).fork();\n    for (const v of message.namespaces) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.ghostId !== \"\") {\n      writer.uint32(26).string(message.ghostId);\n    }\n    if (message.countryCode !== \"\") {\n      writer.uint32(34).string(message.countryCode);\n    }\n    if (message.screenWidth !== 0) {\n      writer.uint32(40).int32(message.screenWidth);\n    }\n    if (message.screenHeight !== 0) {\n      writer.uint32(48).int32(message.screenHeight);\n    }\n    if (message.connectivity !== undefined) {\n      Connectivity.encode(\n        message.connectivity,\n        writer.uint32(58).fork()\n      ).ldelim();\n    }\n    if (message.maxVideoWidthPx !== 0) {\n      writer.uint32(64).int32(message.maxVideoWidthPx);\n    }\n    if (message.maxVideoHeightPx !== 0) {\n      writer.uint32(72).int32(message.maxVideoHeightPx);\n    }\n    for (const v of message.benchmarkResults) {\n      BenchmarkResult.encode(v!, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.deltaSync === true) {\n      writer.uint32(88).bool(message.deltaSync);\n    }\n    if (message.userAgent !== \"\") {\n      writer.uint32(98).string(message.userAgent);\n    }\n    if (message.triggerEventType !== 0) {\n      writer.uint32(104).int32(message.triggerEventType);\n    }\n    if (message.appState !== 0) {\n      writer.uint32(112).int32(message.appState);\n    }\n    if (message.locale !== \"\") {\n      writer.uint32(122).string(message.locale);\n    }\n    if (message.deviceId !== \"\") {\n      writer.uint32(130).string(message.deviceId);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(138).string(message.userId);\n    }\n    if (message.clientIp !== \"\") {\n      writer.uint32(146).string(message.clientIp);\n    }\n    if (message.isUnAuthorized === true) {\n      writer.uint32(152).bool(message.isUnAuthorized);\n    }\n    if (message.appLocale !== \"\") {\n      writer.uint32(162).string(message.appLocale);\n    }\n    if (message.instrumentation !== 0) {\n      writer.uint32(168).int32(message.instrumentation);\n    }\n    if (message.lastSuccessfulSync !== 0) {\n      writer.uint32(176).int64(message.lastSuccessfulSync);\n    }\n    if (message.isLogout === true) {\n      writer.uint32(184).bool(message.isLogout);\n    }\n    if (message.packageInstaller !== \"\") {\n      writer.uint32(194).string(message.packageInstaller);\n    }\n    if (message.syncTriggerBlizzardSessionId !== \"\") {\n      writer.uint32(202).string(message.syncTriggerBlizzardSessionId);\n    }\n    if (message.syncExecutionBlizzardSessionId !== \"\") {\n      writer.uint32(210).string(message.syncExecutionBlizzardSessionId);\n    }\n    if (message.cofSyncTriggerDelayFromStartupMs !== 0) {\n      writer.uint32(216).int32(message.cofSyncTriggerDelayFromStartupMs);\n    }\n    if (message.cofSyncExecutionDelayFromStartupMs !== 0) {\n      writer.uint32(224).int32(message.cofSyncExecutionDelayFromStartupMs);\n    }\n    if (message.syncTriggerTime !== 0) {\n      writer.uint32(232).int64(message.syncTriggerTime);\n    }\n    if (message.decoderEncoderAvailability !== undefined) {\n      DecoderEncoderAvailablity.encode(\n        message.decoderEncoderAvailability,\n        writer.uint32(242).fork()\n      ).ldelim();\n    }\n    if (message.snapkitAppId !== \"\") {\n      writer.uint32(250).string(message.snapkitAppId);\n    }\n    if (message.lenscoreVersion !== 0) {\n      writer.uint32(256).int32(message.lenscoreVersion);\n    }\n    if (message.ruid !== undefined) {\n      Ruid.encode(message.ruid, writer.uint32(266).fork()).ldelim();\n    }\n    for (const v of message.configNames) {\n      writer.uint32(274).string(v!);\n    }\n    if (message.includeTestUserTreatments === true) {\n      writer.uint32(288).bool(message.includeTestUserTreatments);\n    }\n    if (message.disableExposureLogging === true) {\n      writer.uint32(296).bool(message.disableExposureLogging);\n    }\n    if (message.lensClusterOrig4 !== 0) {\n      writer.uint32(304).int32(message.lensClusterOrig4);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ConfigTargetingRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseConfigTargetingRequest } as ConfigTargetingRequest;\n    message.namespaces = [];\n    message.benchmarkResults = [];\n    message.configNames = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResultsEtag = reader.string();\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.namespaces.push(reader.int32() as any);\n            }\n          } else {\n            message.namespaces.push(reader.int32() as any);\n          }\n          break;\n        case 3:\n          message.ghostId = reader.string();\n          break;\n        case 4:\n          message.countryCode = reader.string();\n          break;\n        case 5:\n          message.screenWidth = reader.int32();\n          break;\n        case 6:\n          message.screenHeight = reader.int32();\n          break;\n        case 7:\n          message.connectivity = Connectivity.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.maxVideoWidthPx = reader.int32();\n          break;\n        case 9:\n          message.maxVideoHeightPx = reader.int32();\n          break;\n        case 10:\n          message.benchmarkResults.push(\n            BenchmarkResult.decode(reader, reader.uint32())\n          );\n          break;\n        case 11:\n          message.deltaSync = reader.bool();\n          break;\n        case 12:\n          message.userAgent = reader.string();\n          break;\n        case 13:\n          message.triggerEventType = reader.int32() as any;\n          break;\n        case 14:\n          message.appState = reader.int32() as any;\n          break;\n        case 15:\n          message.locale = reader.string();\n          break;\n        case 16:\n          message.deviceId = reader.string();\n          break;\n        case 17:\n          message.userId = reader.string();\n          break;\n        case 18:\n          message.clientIp = reader.string();\n          break;\n        case 19:\n          message.isUnAuthorized = reader.bool();\n          break;\n        case 20:\n          message.appLocale = reader.string();\n          break;\n        case 21:\n          message.instrumentation = reader.int32() as any;\n          break;\n        case 22:\n          message.lastSuccessfulSync = longToNumber(reader.int64() as Long);\n          break;\n        case 23:\n          message.isLogout = reader.bool();\n          break;\n        case 24:\n          message.packageInstaller = reader.string();\n          break;\n        case 25:\n          message.syncTriggerBlizzardSessionId = reader.string();\n          break;\n        case 26:\n          message.syncExecutionBlizzardSessionId = reader.string();\n          break;\n        case 27:\n          message.cofSyncTriggerDelayFromStartupMs = reader.int32();\n          break;\n        case 28:\n          message.cofSyncExecutionDelayFromStartupMs = reader.int32();\n          break;\n        case 29:\n          message.syncTriggerTime = longToNumber(reader.int64() as Long);\n          break;\n        case 30:\n          message.decoderEncoderAvailability = DecoderEncoderAvailablity.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 31:\n          message.snapkitAppId = reader.string();\n          break;\n        case 32:\n          message.lenscoreVersion = reader.int32();\n          break;\n        case 33:\n          message.ruid = Ruid.decode(reader, reader.uint32());\n          break;\n        case 34:\n          message.configNames.push(reader.string());\n          break;\n        case 36:\n          message.includeTestUserTreatments = reader.bool();\n          break;\n        case 37:\n          message.disableExposureLogging = reader.bool();\n          break;\n        case 38:\n          message.lensClusterOrig4 = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ConfigTargetingRequest>\n  ): ConfigTargetingRequest {\n    const message = { ...baseConfigTargetingRequest } as ConfigTargetingRequest;\n    message.namespaces = [];\n    message.benchmarkResults = [];\n    message.configNames = [];\n    if (\n      object.configResultsEtag !== undefined &&\n      object.configResultsEtag !== null\n    ) {\n      message.configResultsEtag = object.configResultsEtag;\n    } else {\n      message.configResultsEtag = \"\";\n    }\n    if (object.namespaces !== undefined && object.namespaces !== null) {\n      for (const e of object.namespaces) {\n        message.namespaces.push(e);\n      }\n    }\n    if (object.ghostId !== undefined && object.ghostId !== null) {\n      message.ghostId = object.ghostId;\n    } else {\n      message.ghostId = \"\";\n    }\n    if (object.countryCode !== undefined && object.countryCode !== null) {\n      message.countryCode = object.countryCode;\n    } else {\n      message.countryCode = \"\";\n    }\n    if (object.screenWidth !== undefined && object.screenWidth !== null) {\n      message.screenWidth = object.screenWidth;\n    } else {\n      message.screenWidth = 0;\n    }\n    if (object.screenHeight !== undefined && object.screenHeight !== null) {\n      message.screenHeight = object.screenHeight;\n    } else {\n      message.screenHeight = 0;\n    }\n    if (object.connectivity !== undefined && object.connectivity !== null) {\n      message.connectivity = Connectivity.fromPartial(object.connectivity);\n    } else {\n      message.connectivity = undefined;\n    }\n    if (\n      object.maxVideoWidthPx !== undefined &&\n      object.maxVideoWidthPx !== null\n    ) {\n      message.maxVideoWidthPx = object.maxVideoWidthPx;\n    } else {\n      message.maxVideoWidthPx = 0;\n    }\n    if (\n      object.maxVideoHeightPx !== undefined &&\n      object.maxVideoHeightPx !== null\n    ) {\n      message.maxVideoHeightPx = object.maxVideoHeightPx;\n    } else {\n      message.maxVideoHeightPx = 0;\n    }\n    if (\n      object.benchmarkResults !== undefined &&\n      object.benchmarkResults !== null\n    ) {\n      for (const e of object.benchmarkResults) {\n        message.benchmarkResults.push(BenchmarkResult.fromPartial(e));\n      }\n    }\n    if (object.deltaSync !== undefined && object.deltaSync !== null) {\n      message.deltaSync = object.deltaSync;\n    } else {\n      message.deltaSync = false;\n    }\n    if (object.userAgent !== undefined && object.userAgent !== null) {\n      message.userAgent = object.userAgent;\n    } else {\n      message.userAgent = \"\";\n    }\n    if (\n      object.triggerEventType !== undefined &&\n      object.triggerEventType !== null\n    ) {\n      message.triggerEventType = object.triggerEventType;\n    } else {\n      message.triggerEventType = 0;\n    }\n    if (object.appState !== undefined && object.appState !== null) {\n      message.appState = object.appState;\n    } else {\n      message.appState = 0;\n    }\n    if (object.locale !== undefined && object.locale !== null) {\n      message.locale = object.locale;\n    } else {\n      message.locale = \"\";\n    }\n    if (object.deviceId !== undefined && object.deviceId !== null) {\n      message.deviceId = object.deviceId;\n    } else {\n      message.deviceId = \"\";\n    }\n    if (object.userId !== undefined && object.userId !== null) {\n      message.userId = object.userId;\n    } else {\n      message.userId = \"\";\n    }\n    if (object.clientIp !== undefined && object.clientIp !== null) {\n      message.clientIp = object.clientIp;\n    } else {\n      message.clientIp = \"\";\n    }\n    if (object.isUnAuthorized !== undefined && object.isUnAuthorized !== null) {\n      message.isUnAuthorized = object.isUnAuthorized;\n    } else {\n      message.isUnAuthorized = false;\n    }\n    if (object.appLocale !== undefined && object.appLocale !== null) {\n      message.appLocale = object.appLocale;\n    } else {\n      message.appLocale = \"\";\n    }\n    if (\n      object.instrumentation !== undefined &&\n      object.instrumentation !== null\n    ) {\n      message.instrumentation = object.instrumentation;\n    } else {\n      message.instrumentation = 0;\n    }\n    if (\n      object.lastSuccessfulSync !== undefined &&\n      object.lastSuccessfulSync !== null\n    ) {\n      message.lastSuccessfulSync = object.lastSuccessfulSync;\n    } else {\n      message.lastSuccessfulSync = 0;\n    }\n    if (object.isLogout !== undefined && object.isLogout !== null) {\n      message.isLogout = object.isLogout;\n    } else {\n      message.isLogout = false;\n    }\n    if (\n      object.packageInstaller !== undefined &&\n      object.packageInstaller !== null\n    ) {\n      message.packageInstaller = object.packageInstaller;\n    } else {\n      message.packageInstaller = \"\";\n    }\n    if (\n      object.syncTriggerBlizzardSessionId !== undefined &&\n      object.syncTriggerBlizzardSessionId !== null\n    ) {\n      message.syncTriggerBlizzardSessionId =\n        object.syncTriggerBlizzardSessionId;\n    } else {\n      message.syncTriggerBlizzardSessionId = \"\";\n    }\n    if (\n      object.syncExecutionBlizzardSessionId !== undefined &&\n      object.syncExecutionBlizzardSessionId !== null\n    ) {\n      message.syncExecutionBlizzardSessionId =\n        object.syncExecutionBlizzardSessionId;\n    } else {\n      message.syncExecutionBlizzardSessionId = \"\";\n    }\n    if (\n      object.cofSyncTriggerDelayFromStartupMs !== undefined &&\n      object.cofSyncTriggerDelayFromStartupMs !== null\n    ) {\n      message.cofSyncTriggerDelayFromStartupMs =\n        object.cofSyncTriggerDelayFromStartupMs;\n    } else {\n      message.cofSyncTriggerDelayFromStartupMs = 0;\n    }\n    if (\n      object.cofSyncExecutionDelayFromStartupMs !== undefined &&\n      object.cofSyncExecutionDelayFromStartupMs !== null\n    ) {\n      message.cofSyncExecutionDelayFromStartupMs =\n        object.cofSyncExecutionDelayFromStartupMs;\n    } else {\n      message.cofSyncExecutionDelayFromStartupMs = 0;\n    }\n    if (\n      object.syncTriggerTime !== undefined &&\n      object.syncTriggerTime !== null\n    ) {\n      message.syncTriggerTime = object.syncTriggerTime;\n    } else {\n      message.syncTriggerTime = 0;\n    }\n    if (\n      object.decoderEncoderAvailability !== undefined &&\n      object.decoderEncoderAvailability !== null\n    ) {\n      message.decoderEncoderAvailability =\n        DecoderEncoderAvailablity.fromPartial(\n          object.decoderEncoderAvailability\n        );\n    } else {\n      message.decoderEncoderAvailability = undefined;\n    }\n    if (object.snapkitAppId !== undefined && object.snapkitAppId !== null) {\n      message.snapkitAppId = object.snapkitAppId;\n    } else {\n      message.snapkitAppId = \"\";\n    }\n    if (\n      object.lenscoreVersion !== undefined &&\n      object.lenscoreVersion !== null\n    ) {\n      message.lenscoreVersion = object.lenscoreVersion;\n    } else {\n      message.lenscoreVersion = 0;\n    }\n    if (object.ruid !== undefined && object.ruid !== null) {\n      message.ruid = Ruid.fromPartial(object.ruid);\n    } else {\n      message.ruid = undefined;\n    }\n    if (object.configNames !== undefined && object.configNames !== null) {\n      for (const e of object.configNames) {\n        message.configNames.push(e);\n      }\n    }\n    if (\n      object.includeTestUserTreatments !== undefined &&\n      object.includeTestUserTreatments !== null\n    ) {\n      message.includeTestUserTreatments = object.includeTestUserTreatments;\n    } else {\n      message.includeTestUserTreatments = false;\n    }\n    if (\n      object.disableExposureLogging !== undefined &&\n      object.disableExposureLogging !== null\n    ) {\n      message.disableExposureLogging = object.disableExposureLogging;\n    } else {\n      message.disableExposureLogging = false;\n    }\n    if (\n      object.lensClusterOrig4 !== undefined &&\n      object.lensClusterOrig4 !== null\n    ) {\n      message.lensClusterOrig4 = object.lensClusterOrig4;\n    } else {\n      message.lensClusterOrig4 = 0;\n    }\n    return message;\n  },\n};\n\nconst baseConnectivity: object = { networkType: 0, carrier: \"\" };\n\nexport const Connectivity = {\n  encode(\n    message: Connectivity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.networkType !== 0) {\n      writer.uint32(8).int32(message.networkType);\n    }\n    if (message.isMetered !== undefined) {\n      BoolValue.encode(\n        { value: message.isMetered! },\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    if (message.isRoaming !== undefined) {\n      BoolValue.encode(\n        { value: message.isRoaming! },\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    if (message.carrier !== \"\") {\n      writer.uint32(34).string(message.carrier);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Connectivity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseConnectivity } as Connectivity;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.networkType = reader.int32() as any;\n          break;\n        case 2:\n          message.isMetered = BoolValue.decode(reader, reader.uint32()).value;\n          break;\n        case 3:\n          message.isRoaming = BoolValue.decode(reader, reader.uint32()).value;\n          break;\n        case 4:\n          message.carrier = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Connectivity>): Connectivity {\n    const message = { ...baseConnectivity } as Connectivity;\n    if (object.networkType !== undefined && object.networkType !== null) {\n      message.networkType = object.networkType;\n    } else {\n      message.networkType = 0;\n    }\n    if (object.isMetered !== undefined && object.isMetered !== null) {\n      message.isMetered = object.isMetered;\n    } else {\n      message.isMetered = undefined;\n    }\n    if (object.isRoaming !== undefined && object.isRoaming !== null) {\n      message.isRoaming = object.isRoaming;\n    } else {\n      message.isRoaming = undefined;\n    }\n    if (object.carrier !== undefined && object.carrier !== null) {\n      message.carrier = object.carrier;\n    } else {\n      message.carrier = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseDecoderEncoderAvailablity: object = {\n  isSnapVp9DecoderAvailable: false,\n  isSnapAv1DecoderAvailable: false,\n};\n\nexport const DecoderEncoderAvailablity = {\n  encode(\n    message: DecoderEncoderAvailablity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.isSnapVp9DecoderAvailable === true) {\n      writer.uint32(8).bool(message.isSnapVp9DecoderAvailable);\n    }\n    if (message.isSnapAv1DecoderAvailable === true) {\n      writer.uint32(16).bool(message.isSnapAv1DecoderAvailable);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): DecoderEncoderAvailablity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseDecoderEncoderAvailablity,\n    } as DecoderEncoderAvailablity;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.isSnapVp9DecoderAvailable = reader.bool();\n          break;\n        case 2:\n          message.isSnapAv1DecoderAvailable = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<DecoderEncoderAvailablity>\n  ): DecoderEncoderAvailablity {\n    const message = {\n      ...baseDecoderEncoderAvailablity,\n    } as DecoderEncoderAvailablity;\n    if (\n      object.isSnapVp9DecoderAvailable !== undefined &&\n      object.isSnapVp9DecoderAvailable !== null\n    ) {\n      message.isSnapVp9DecoderAvailable = object.isSnapVp9DecoderAvailable;\n    } else {\n      message.isSnapVp9DecoderAvailable = false;\n    }\n    if (\n      object.isSnapAv1DecoderAvailable !== undefined &&\n      object.isSnapAv1DecoderAvailable !== null\n    ) {\n      message.isSnapAv1DecoderAvailable = object.isSnapAv1DecoderAvailable;\n    } else {\n      message.isSnapAv1DecoderAvailable = false;\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := ptypes.MarshalAny(foo)\n *      ...\n *      foo := &pb.Foo{}\n *      if err := ptypes.UnmarshalAny(any, foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n */\nexport interface Any {\n  /**\n   * A URL/resource name whose content describes the type of the\n   * serialized protocol buffer message.\n   *\n   * For URLs which use the scheme `http`, `https`, or no scheme, the\n   * following restrictions and interpretations apply:\n   *\n   * * If no scheme is provided, `https` is assumed.\n   * * The last segment of the URL's path must represent the fully\n   *   qualified name of the type (as in `path/google.protobuf.Duration`).\n   *   The name should be in a canonical form (e.g., leading \".\" is\n   *   not accepted).\n   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   *   value in binary format, or produce an error.\n   * * Applications are allowed to cache lookup results based on the\n   *   URL, or have them precompiled into a binary to avoid any\n   *   lookup. Therefore, binary compatibility needs to be preserved\n   *   on changes to types. (Use versioned type names to manage\n   *   breaking changes.)\n   *\n   * Schemes other than `http`, `https` (or the empty scheme) might be\n   * used with implementation specific semantics.\n   */\n  typeUrl: string;\n  /** Must be a valid serialized protocol buffer of the above specified type. */\n  value: Uint8Array;\n}\n\nconst baseAny: object = { typeUrl: \"\" };\n\nexport const Any = {\n  encode(message: Any, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.typeUrl !== \"\") {\n      writer.uint32(10).string(message.typeUrl);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Any {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseAny } as Any;\n    message.value = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.typeUrl = reader.string();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Any>): Any {\n    const message = { ...baseAny } as Any;\n    if (object.typeUrl !== undefined && object.typeUrl !== null) {\n      message.typeUrl = object.typeUrl;\n    } else {\n      message.typeUrl = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = new Uint8Array();\n    }\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../google/protobuf/any\";\n\nexport const protobufPackage = \"snapchat.common\";\n\nexport interface MapRecord {\n  key: string;\n  value: string;\n}\n\nexport interface MapRecords {\n  records: MapRecord[];\n}\n\n/**\n * `Value` represents a dynamically typed value which can be one of int, long, float, bool,\n * string or Any which represents a serialized proto.\n */\nexport interface Value {\n  intValue: number | undefined;\n  longValue: number | undefined;\n  floatValue: number | undefined;\n  doubleValue: number | undefined;\n  boolValue: boolean | undefined;\n  stringValue: string | undefined;\n  anyValue: Any | undefined;\n  mapValue: MapRecords | undefined;\n  /**\n   * Because resolution is used so often we pack it into a long.\n   * We add this type here to help us identify when a long is a resolution.\n   */\n  intPairValue: number | undefined;\n}\n\nconst baseMapRecord: object = { key: \"\", value: \"\" };\n\nexport const MapRecord = {\n  encode(\n    message: MapRecord,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MapRecord {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMapRecord } as MapRecord;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<MapRecord>): MapRecord {\n    const message = { ...baseMapRecord } as MapRecord;\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseMapRecords: object = {};\n\nexport const MapRecords = {\n  encode(\n    message: MapRecords,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.records) {\n      MapRecord.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MapRecords {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMapRecords } as MapRecords;\n    message.records = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.records.push(MapRecord.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<MapRecords>): MapRecords {\n    const message = { ...baseMapRecords } as MapRecords;\n    message.records = [];\n    if (object.records !== undefined && object.records !== null) {\n      for (const e of object.records) {\n        message.records.push(MapRecord.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseValue: object = {};\n\nexport const Value = {\n  encode(message: Value, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.intValue !== undefined) {\n      writer.uint32(8).int32(message.intValue);\n    }\n    if (message.longValue !== undefined) {\n      writer.uint32(16).int64(message.longValue);\n    }\n    if (message.floatValue !== undefined) {\n      writer.uint32(29).float(message.floatValue);\n    }\n    if (message.doubleValue !== undefined) {\n      writer.uint32(73).double(message.doubleValue);\n    }\n    if (message.boolValue !== undefined) {\n      writer.uint32(32).bool(message.boolValue);\n    }\n    if (message.stringValue !== undefined) {\n      writer.uint32(42).string(message.stringValue);\n    }\n    if (message.anyValue !== undefined) {\n      Any.encode(message.anyValue, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.mapValue !== undefined) {\n      MapRecords.encode(message.mapValue, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.intPairValue !== undefined) {\n      writer.uint32(65).fixed64(message.intPairValue);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Value {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValue } as Value;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.intValue = reader.int32();\n          break;\n        case 2:\n          message.longValue = longToNumber(reader.int64() as Long);\n          break;\n        case 3:\n          message.floatValue = reader.float();\n          break;\n        case 9:\n          message.doubleValue = reader.double();\n          break;\n        case 4:\n          message.boolValue = reader.bool();\n          break;\n        case 5:\n          message.stringValue = reader.string();\n          break;\n        case 6:\n          message.anyValue = Any.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.mapValue = MapRecords.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.intPairValue = longToNumber(reader.fixed64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Value>): Value {\n    const message = { ...baseValue } as Value;\n    if (object.intValue !== undefined && object.intValue !== null) {\n      message.intValue = object.intValue;\n    } else {\n      message.intValue = undefined;\n    }\n    if (object.longValue !== undefined && object.longValue !== null) {\n      message.longValue = object.longValue;\n    } else {\n      message.longValue = undefined;\n    }\n    if (object.floatValue !== undefined && object.floatValue !== null) {\n      message.floatValue = object.floatValue;\n    } else {\n      message.floatValue = undefined;\n    }\n    if (object.doubleValue !== undefined && object.doubleValue !== null) {\n      message.doubleValue = object.doubleValue;\n    } else {\n      message.doubleValue = undefined;\n    }\n    if (object.boolValue !== undefined && object.boolValue !== null) {\n      message.boolValue = object.boolValue;\n    } else {\n      message.boolValue = undefined;\n    }\n    if (object.stringValue !== undefined && object.stringValue !== null) {\n      message.stringValue = object.stringValue;\n    } else {\n      message.stringValue = undefined;\n    }\n    if (object.anyValue !== undefined && object.anyValue !== null) {\n      message.anyValue = Any.fromPartial(object.anyValue);\n    } else {\n      message.anyValue = undefined;\n    }\n    if (object.mapValue !== undefined && object.mapValue !== null) {\n      message.mapValue = MapRecords.fromPartial(object.mapValue);\n    } else {\n      message.mapValue = undefined;\n    }\n    if (object.intPairValue !== undefined && object.intPairValue !== null) {\n      message.intPairValue = object.intPairValue;\n    } else {\n      message.intPairValue = undefined;\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Namespace } from \"../../cdp/cof/namespace\";\nimport { Ruid_Type } from \"../../common/ruid\";\nimport { Value } from \"../../common/value\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\nexport interface ConfigResult {\n  /** The id of the config. */\n  configId: string;\n  /**\n   * The chosen value of the config.\n   * This should be sufficient to model most use cases. But in the future if additional structured\n   * data need to be conveyed as part of the value we can add a field with type google.protobuf.Any,\n   * which the developer can decoded as arbitrary proto on the client.\n   */\n  value: Value | undefined;\n  /**\n   * The \"Partial\" targeting expression. Some nodes have been removed from the original ConfigRule targeting\n   * expression in a way that all the remaining leaf nodes only have properties that client can evaluate, and as long\n   * as this expression evaluates to true it is consistent with the server side evaluation.\n   */\n  targetingExpression: ClientTargetingExpression | undefined;\n  /** The client should fetch the config again if the TTL is exceeded. */\n  ttlSeconds: number;\n  /** The UUID bytes that identifies the config rule. */\n  configRuleUuidBytes: Uint8Array;\n  /** Priority used for client to tie-break multiple matching results for the same config. */\n  priority: number;\n  /** Namespace of the config. */\n  namespace: Namespace;\n  /** AB study name if the value is picked from an experiment. */\n  studyName: string;\n  /** AB study experiment id if the value is picked from an experiment. */\n  experimentId: number;\n  /** Indicate the entry should be deleted in a delta sync. */\n  delete: boolean;\n  /** Serving platform for this config. */\n  servePlatforms: ConfigResult_ServePlatform[];\n  /** Sequence id of this config result. */\n  sequenceId: number;\n  /** RUID type assigned to this config. */\n  ruidType: Ruid_Type;\n  /**\n   * Segment ordinal of the AB study segment, from which\n   * this config result was generated. If set, this is\n   * to be used as a secondary priority\n   */\n  segmentOrdinal: number;\n  /**\n   * Whether this ConfigResult message was generated\n   * from AB allowlists. Allowlists need to be handled with\n   * a higher priority, comparing to regular AB-generated results\n   */\n  generatedFromAbAllowlists: boolean;\n}\n\n/** The suffix of \"_PLATFORM\" is appended, due to C++ declared enums with global scope, which causes issues in Snapchat/client */\nexport enum ConfigResult_ServePlatform {\n  UNKNOWN_CONTEXT_PLATFORM = 0,\n  IOS_PLATFORM = 1,\n  ANDROID_PLATFORM = 2,\n  SERVER_PLATFORM = 3,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * Serves as a convenient bundle for a list of ConfigResults. Primarily used when sending this list of ConfigResults\n * from the platform layer into the native layer.\n */\nexport interface ConfigResultBundle {\n  /** The etag used to fetch these configs from the server */\n  etag: string;\n  /** The list of ConfigResults that match the user-specified query */\n  configResults: ConfigResult[];\n}\n\n/**\n * The targeting expression.\n * It has the same structure as TargetingExpression in\n * https://github.sc-corp.net/Snapchat/CircumstancesCMS/blob/master/circumstances-proto/src/main/proto/config.proto\n * Notable differences:\n * 1. The property is a enum, with only the kinds of signals that should be evaluated on the client side\n * 2. PredicateOperator doesn't have \"IN\". The IN predicates are expanded into a OR tree during indexing.\n * 3. The value is a multi type union as opposed to string. The value in TargetingExpression is string for the\n *    convenience of manipulation in the UI, but it's more efficient to transmit the actual types over the wire.\n */\nexport interface ClientTargetingExpression {\n  /**\n   * Parent node fields:\n   * Logical operator\n   */\n  operator: ClientTargetingExpression_Operator;\n  /** Child nodes */\n  children: ClientTargetingExpression[];\n  /**\n   * Leaf node fields:\n   * The property that needs to be evaluated.\n   */\n  property: ClientTargetingExpression_Property;\n  /** The predicate operator */\n  predicateOperator: ClientTargetingExpression_PredicateOperator;\n  /** The value of property. */\n  value: Value | undefined;\n  /** property's metadata. Doesn't have to be set */\n  propertyMetadata: ClientTargetingExpression_PropertyMetadata | undefined;\n}\n\nexport enum ClientTargetingExpression_Operator {\n  UNKNOWN_OPERATOR = 0,\n  AND = 1,\n  OR = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport enum ClientTargetingExpression_PredicateOperator {\n  UNKNOWN_PREDICATE_OPERATOR = 0,\n  EQUAL = 1,\n  NOT_EQUAL = 2,\n  GREATER_THAN_OR_EQUAL_TO = 3,\n  LESS_THAN_OR_EQUAL_TO = 4,\n  UNRECOGNIZED = -1,\n}\n\nexport enum ClientTargetingExpression_Property {\n  UNKNOWN_PROPERTY = 0,\n  /**\n   * BATTERY_LEVEL - A enum ordinal indicating the battery level is LOW/MID/HIGH.\n   * The ordinals are defined in snapchat.cdp.cof.battery_level.proto\n   */\n  BATTERY_LEVEL = 1,\n  /** IS_OFFLINE - A boolean indicating whether the device is offline. */\n  IS_OFFLINE = 2,\n  /** IS_CHARGING - A boolean indicating whether the device is charging. */\n  IS_CHARGING = 3,\n  /** BANDWIDTH - An integer representing the download bandwidth in bps. */\n  BANDWIDTH = 4,\n  /** DISK_SIZE - Disk size in mb */\n  DISK_SIZE = 5,\n  /** DISK_AVAILABLE - Disk space available in mb */\n  DISK_AVAILABLE = 6,\n  /**\n   * MEDIA_TYPE_DEPRECATED - An enum ordinal indicating the type of media being processed.\n   * The ordinals are defined in snapchat.snapdoc.MediaMetadata.MediaType.\n   *\n   * @deprecated\n   */\n  MEDIA_TYPE_DEPRECATED = 7,\n  /** IS_PUBLIC_STORY - A boolean indicating whether the story is shared publicly. */\n  IS_PUBLIC_STORY = 8,\n  /** IS_OFFICIAL_STORY - A boolean indicating whether the story is posted from offcial account and is public. */\n  IS_OFFICIAL_STORY = 9,\n  /** CAMERA_DIRECTION - An enum for camera direction */\n  CAMERA_DIRECTION = 10,\n  /** CAMERA_CONTEXT - An enum for camera context */\n  CAMERA_CONTEXT = 11,\n  /** CAMERA_API - An enum for camera API */\n  CAMERA_API = 12,\n  /** CAMERA_FLASH_STATE - An enum for camera flash state */\n  CAMERA_FLASH_STATE = 13,\n  /** SNAP_SOURCE - An enum for where the snap orginates */\n  SNAP_SOURCE = 14,\n  /** LEGACY_MUSHROOM_CONTENT_TYPE - An enum for what content type is being used */\n  LEGACY_MUSHROOM_CONTENT_TYPE = 15,\n  /** UPLOAD_BANDWIDTH - An integer representing the upload bandwidth in bps. */\n  UPLOAD_BANDWIDTH = 16,\n  /** CAMERA2_LEVEL - An enum for camera2 hardware support level. */\n  CAMERA2_LEVEL = 17,\n  /** CAMERA_NIGHT_MODE_STATE - An enum for Camera night model state. */\n  CAMERA_NIGHT_MODE_STATE = 18,\n  /** USER_LANGUAGE - The language user chooses the app to display */\n  USER_LANGUAGE = 19,\n  /** VIDEO_DURATION - The video duration in ms. */\n  VIDEO_DURATION = 20,\n  /** REALTIME_MOBILE_NETWORK_GENERATION - Mobile network generation(3G, 4G, etc) defined in snapchat.cdp.cof.mobile_network_generation.proto */\n  REALTIME_MOBILE_NETWORK_GENERATION = 21,\n  /** REALTIME_NETWORK_TYPE - Mobile networktype defined via Connectivity.NetworkType in snapchat.cdp.cof.circumstance_engine.proto */\n  REALTIME_NETWORK_TYPE = 22,\n  /** REALTIME_NETWORK_IS_METERED - A boolean for if the current network is metered. */\n  REALTIME_NETWORK_IS_METERED = 23,\n  /** REALTIME_NETWORK_IS_ROAMING - A boolean for if the current network is roaming. */\n  REALTIME_NETWORK_IS_ROAMING = 24,\n  /** CAMERA_IS_FIRST_CAPTURE - A boolean indicating whether this is the first capture after app cold start */\n  CAMERA_IS_FIRST_CAPTURE = 25,\n  /** PICTURE_MODE - A enum indicating which type of image capture this was [GPU or JPEG] */\n  PICTURE_MODE = 26,\n  /** BOLT_USE_CASE - An integer representing what BOLT usecase the caller is using. */\n  BOLT_USE_CASE = 27,\n  /** BOLT_CDN_EXPERIMENTATION_ID - An integer representing what BOLT cdn should be experimented with */\n  BOLT_CDN_EXPERIMENTATION_ID = 28,\n  /** MINS_SINCE_LAST_LENS_ACTIVATION - Num of mins since a user last activates the Lens. */\n  MINS_SINCE_LAST_LENS_ACTIVATION = 29,\n  /** MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION - Num of mins since user activated snappable lens for the last time. */\n  MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION = 30,\n  /** DAYS_SINCE_LAST_LOGIN_OR_OPEN - Integer between 0 .. N which is the number of days since the user logged in or opened the app */\n  DAYS_SINCE_LAST_LOGIN_OR_OPEN = 31,\n  /** SPECTACLES_VERSION - An enum for Spectacles version */\n  SPECTACLES_VERSION = 32,\n  /** STICKY_MAX_CONNECTION_TYPE - A client side property for evaluating the highest tier connection a client has recently used. */\n  STICKY_MAX_CONNECTION_TYPE = 33,\n  /** WITH_ANIMATED_OVERLAY - A boolean indicating whether there is animated overlay with video snap. */\n  WITH_ANIMATED_OVERLAY = 34,\n  /** ESTIMATED_DURATION_FOR_EVENT_MS - Estimated duration for a config-specific event */\n  ESTIMATED_DURATION_FOR_EVENT_MS = 35,\n  /** URL - A URL */\n  URL = 36,\n  /** MEDIA_SOURCE - content’s origin prior to being injected into the MDP stack */\n  MEDIA_SOURCE = 37,\n  /** ASSET_TYPE - how to compose an individual asset into one larger logical asset */\n  ASSET_TYPE = 38,\n  /** BOLT_IS_CONTENT_POPULAR - A boolean representing whether the content being resolved is popular or not. */\n  BOLT_IS_CONTENT_POPULAR = 39,\n  /** CAPTURE_MODE - A enum indicating which mode of capture this was [Timeline or Unknown] */\n  CAPTURE_MODE = 40,\n  /** VP9_SOFTWARE_DECODING_SUPPORTED - A boolean representing if VP9 software decoding is supported */\n  VP9_SOFTWARE_DECODING_SUPPORTED = 41,\n  /** AV1_SOFTWARE_DECODING_SUPPORTED - A boolean representing if AV1 software decoding is supported */\n  AV1_SOFTWARE_DECODING_SUPPORTED = 42,\n  /** WITH_MUSIC - A boolean to indicate whether there is music edits (e.g. music sticker). */\n  WITH_MUSIC = 43,\n  /**\n   * FEATURE_PROVIDED_SIZE - A client provided integer representing size. The units is decided by the caller.\n   * This will be evaluated using FeatureProvidedSignals.size\n   */\n  FEATURE_PROVIDED_SIZE = 44,\n  /**\n   * MEDIA_TYPE - An enum ordinal indicating the type of media being processed.\n   * The ordinals are defined in snapchat.cdp.cof.media_provided_signals.proto\n   */\n  MEDIA_TYPE = 45,\n  /** SCANNED_CATEGORY_IDS - The ids of the categories that are currently being scanned for (e.g. Amazon, Photomath, etc) */\n  SCANNED_CATEGORY_IDS = 46,\n  /**\n   * CONTENT_VIEW_SOURCE - Numerical value of ContentViewSource (Blizzard enum) which identified Opera session\n   * On the client the value is provided via FeatureProvidedSignals.OperaSignals\n   */\n  CONTENT_VIEW_SOURCE = 47,\n  /** RECIPIENTS_SUPPORT_HEVC - A boolean indicating whether a group of recipients support High Efficiency Video Encoding (HEVC) */\n  RECIPIENTS_SUPPORT_HEVC = 48,\n  /** COGNAC_APP_ID - A Cognac game/mini id that a user is playing */\n  COGNAC_APP_ID = 49,\n  /** EMAIL_VERIFIED - Whether user's email has verified */\n  EMAIL_VERIFIED = 50,\n  /** PHONE_VERIFIED - Whether user's phone number has verified */\n  PHONE_VERIFIED = 51,\n  /** NOTIFICATION_PERM_GRANTED - Whether notification permission has granted */\n  NOTIFICATION_PERM_GRANTED = 52,\n  /** CONTACT_PERM_GRANTED - Whether contact permission has granted */\n  CONTACT_PERM_GRANTED = 53,\n  /** MUTUAL_FRIENDS_COUNT - Mutual friends count */\n  MUTUAL_FRIENDS_COUNT = 54,\n  /** GROUPS_COUNT - Groups count */\n  GROUPS_COUNT = 55,\n  /** HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS - Whether user has non-team snapchat conversations */\n  HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS = 56,\n  /**\n   * PLAYBACK_ITEM_TYPE - Numerical value of PlaybackItemType (Blizzard enum) which identifies an Opera playback item type\n   * On the client the value is provided via PlaybackItemType\n   */\n  PLAYBACK_ITEM_TYPE = 57,\n  /**\n   * SUP_BOOLEAN_PROPERTY - To get the corresponding SUP property values, check on property_metadata.sup_item_id.item_id\n   * Sup boolean property\n   */\n  SUP_BOOLEAN_PROPERTY = 58,\n  /** SUP_INTEGER_PROPERTY - Sup integer property */\n  SUP_INTEGER_PROPERTY = 59,\n  /** SUP_LONG_PROPERTY - Sup long property */\n  SUP_LONG_PROPERTY = 60,\n  /** SUP_STRING_PROPERTY - Sup string property */\n  SUP_STRING_PROPERTY = 61,\n  /** SUP_DOUBLE_PROPERTY - Sup double property */\n  SUP_DOUBLE_PROPERTY = 62,\n  /** SUP_MILLIS_PROPERTY_TO_NOW - Sup long property as timestamp in millis to get time elapsed */\n  SUP_MILLIS_PROPERTY_TO_NOW = 63,\n  /** HAS_USED_SPECTACLES - Whether the user has used Spectacles (incl. Cheerios) */\n  HAS_USED_SPECTACLES = 64,\n  /**\n   * SUP_SECS_PROPERTY_TO_NOW - To get the corresponding SUP property values, check on property_metadata.sup_item_id.item_id\n   * Sup long property as timestamp in seconds to get time elapsed\n   */\n  SUP_SECS_PROPERTY_TO_NOW = 65,\n  /** BOLT_CLIENT_APP_STATE - Enum indicating client App State (Used by BOLT to create targeted network rules) */\n  BOLT_CLIENT_APP_STATE = 66,\n  /** EMAIL_SET - Whether user's email has been set (might or might not be verified) */\n  EMAIL_SET = 67,\n  /** BITMOJI_SET - Whether user's bitmoji has been set */\n  BITMOJI_SET = 68,\n  /** QUICK_TAP_CAMERA_SUPPORTED_ENABLED - Quick tap on camera is supported and enabled */\n  QUICK_TAP_CAMERA_SUPPORTED_ENABLED = 69,\n  /** HAS_ADD_FRIENDS_REQUEST - Whether user has add friends request */\n  HAS_ADD_FRIENDS_REQUEST = 70,\n  /** APP_LAUNCH_FROM_PUSH - App launched from push notification */\n  APP_LAUNCH_FROM_PUSH = 71,\n  /** APP_LAUNCH_TYPE - App launch type: cold start, warm start, registration and login */\n  APP_LAUNCH_TYPE = 72,\n  /** BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT - Billboard campaign level locally tracked impression count */\n  BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT = 73,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW - Billboard campaign level locally tracked last impression time in secs to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW = 74,\n  /** BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT - Billboard campaign level locally tracked continuous dismiss count */\n  BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT = 75,\n  /** FST_NUM_IN_APP_WARNINGS - FST number of in app warnings to show */\n  FST_NUM_IN_APP_WARNINGS = 76,\n  /** FST_SHOULD_CHANGE_PASSWORD - FST user should change password */\n  FST_SHOULD_CHANGE_PASSWORD = 77,\n  /** FST_IS_BACKGROUND_CHECK - Whether it's a background check or foreground check. Android specific */\n  FST_IS_BACKGROUND_CHECK = 78,\n  /** AUDIO_RECORD_PERM_GRANTED - Whether audio record permission has granted */\n  AUDIO_RECORD_PERM_GRANTED = 79,\n  /** MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT - Mutual Friends with birthday count */\n  MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT = 80,\n  /** BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT - Billboard campaign level locally tracked dismiss count */\n  BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT = 81,\n  /** USE_VERTICAL_NAVIGATION - A boolean to indicate whether Opera uses vertical navigation or not. */\n  USE_VERTICAL_NAVIGATION = 82,\n  /**\n   * FREEABLE_DISK_AVAILABLE - Freeable disk space available in mb. This included Content Manager freeable\n   * bytes + DISK_AVAILABLE\n   */\n  FREEABLE_DISK_AVAILABLE = 83,\n  /** MEMORIES_COUNT - Num of memories snaps user has */\n  MEMORIES_COUNT = 84,\n  /** DEVICE_MODEL - DEVICE_MODEL (variant copied from TargetingProperty.Property) */\n  DEVICE_MODEL = 85,\n  /** COUNTRY - COUNTRY (variant copied from TargetingProperty.Property) */\n  COUNTRY = 86,\n  /** OS - OS (variant copied from TargetingProperty.Property) */\n  OS = 87,\n  /** OS_VERSION - OS_VERSION (variant copied from TargetingProperty.Property) */\n  OS_VERSION = 88,\n  /** APP_VERSION - APP_VERSION (variant copied from TargetingProperty.Property) */\n  APP_VERSION = 89,\n  /** BUILD_FLAVOR - BUILD_FLAVOR (variant copied from TargetingProperty.Property) */\n  BUILD_FLAVOR = 90,\n  /** USER_ID - USER_ID (variant copied from TargetingProperty.Property) */\n  USER_ID = 91,\n  /** LOCALE - LOCALE (variant copied from TargetingProperty.Property) */\n  LOCALE = 92,\n  /** DEVICE_CLUSTER - DEVICE_CLUSTER (variant copied from TargetingProperty.Property) */\n  DEVICE_CLUSTER = 93,\n  /** DEVICE_BRAND - DEVICE_BRAND (variant copied from TargetingProperty.Property) */\n  DEVICE_BRAND = 94,\n  /** IS_EMPLOYEE - IS_EMPLOYEE (variant copied from TargetingProperty.Property) */\n  IS_EMPLOYEE = 95,\n  /** USERNAME - USERNAME (variant copied from TargetingProperty.Property) */\n  USERNAME = 96,\n  /** IS_TEST_USER - IS_TEST_USER (variant copied from TargetingProperty.Property) */\n  IS_TEST_USER = 97,\n  /** USER_PROFILE - USER_PROFILE (variant copied from TargetingProperty.Property) */\n  USER_PROFILE = 98,\n  /** SCREEN_WIDTH - SCREEN_WIDTH (variant copied from TargetingProperty.Property) */\n  SCREEN_WIDTH = 99,\n  /** SCREEN_HEIGHT - SCREEN_HEIGHT (variant copied from TargetingProperty.Property) */\n  SCREEN_HEIGHT = 100,\n  /** HEVC_SUPPORT - HEVC_SUPPORT (variant copied from TargetingProperty.Property) */\n  HEVC_SUPPORT = 101,\n  /** NETWORK_TYPE - NETWORK_TYPE (variant copied from TargetingProperty.Property) */\n  NETWORK_TYPE = 102,\n  /** MAX_VIDEO_WIDTH - MAX_VIDEO_WIDTH (variant copied from TargetingProperty.Property) */\n  MAX_VIDEO_WIDTH = 103,\n  /** MAX_VIDEO_HEIGHT - MAX_VIDEO_HEIGHT (variant copied from TargetingProperty.Property) */\n  MAX_VIDEO_HEIGHT = 104,\n  /** IS_NETWORK_METERED - IS_NETWORK_METERED (variant copied from TargetingProperty.Property) */\n  IS_NETWORK_METERED = 105,\n  /** IS_ROAMING - IS_ROAMING (variant copied from TargetingProperty.Property) */\n  IS_ROAMING = 106,\n  /** APP_ENGAGEMENT_LEVEL - APP_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  APP_ENGAGEMENT_LEVEL = 107,\n  /** COMMUNICATION_ENGAGEMENT_LEVEL - COMMUNICATION_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  COMMUNICATION_ENGAGEMENT_LEVEL = 108,\n  /** FRIEND_STORY_ENGAGEMENT_LEVEL - FRIEND_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  FRIEND_STORY_ENGAGEMENT_LEVEL = 109,\n  /** PUBLIC_USER_STORY_ENGAGEMENT_LEVEL - PUBLIC_USER_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  PUBLIC_USER_STORY_ENGAGEMENT_LEVEL = 110,\n  /** PUBLISHER_STORY_ENGAGEMENT_LEVEL - PUBLISHER_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  PUBLISHER_STORY_ENGAGEMENT_LEVEL = 111,\n  /** LENS_ENGAGEMENT_LEVEL - LENS_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  LENS_ENGAGEMENT_LEVEL = 112,\n  /** NON_FRIEND_STORY_ENGAGEMENT_LEVEL - NON_FRIEND_STORY_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  NON_FRIEND_STORY_ENGAGEMENT_LEVEL = 113,\n  /** FOLLOWER_SIZE_LEVEL - FOLLOWER_SIZE_LEVEL (variant copied from TargetingProperty.Property) */\n  FOLLOWER_SIZE_LEVEL = 114,\n  /** DAYS_SINCE_CREATION - DAYS_SINCE_CREATION (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_CREATION = 115,\n  /** USER_PERSONA - USER_PERSONA (variant copied from TargetingProperty.Property) */\n  USER_PERSONA = 116,\n  /** USER_CREATION_TIME - USER_CREATION_TIME (variant copied from TargetingProperty.Property) */\n  USER_CREATION_TIME = 117,\n  /** MOBILE_NETWORK_TYPE - MOBILE_NETWORK_TYPE (variant copied from TargetingProperty.Property) */\n  MOBILE_NETWORK_TYPE = 118,\n  /** AGGREGATED_USER_BANDWIDTH - AGGREGATED_USER_BANDWIDTH (variant copied from TargetingProperty.Property) */\n  AGGREGATED_USER_BANDWIDTH = 119,\n  /** LENS_CLUSTER_BIASED - LENS_CLUSTER_BIASED (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_BIASED = 120,\n  /** LENS_CLUSTER_LOG - LENS_CLUSTER_LOG (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_LOG = 121,\n  /** LENS_CLUSTER_ORIG - LENS_CLUSTER_ORIG (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_ORIG = 122,\n  /** LENS_CLUSTER_ORIG_4 - LENS_CLUSTER_ORIG_4 (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_ORIG_4 = 123,\n  /** LENS_CLUSTER_BIASED_LOG - LENS_CLUSTER_BIASED_LOG (variant copied from TargetingProperty.Property) */\n  LENS_CLUSTER_BIASED_LOG = 124,\n  /** APP_LOCALE - APP_LOCALE (variant copied from TargetingProperty.Property) */\n  APP_LOCALE = 125,\n  /** DEVICE_COMMON_NAME - DEVICE_COMMON_NAME (variant copied from TargetingProperty.Property) */\n  DEVICE_COMMON_NAME = 126,\n  /** USER_FRIEND_COUNT - USER_FRIEND_COUNT (variant copied from TargetingProperty.Property) */\n  USER_FRIEND_COUNT = 127,\n  /** L90_COUNTRY - L90_COUNTRY (variant copied from TargetingProperty.Property) */\n  L90_COUNTRY = 128,\n  /** STUB - STUB (variant copied from TargetingProperty.Property) */\n  STUB = 129,\n  /** IS_TRUE - IS_TRUE (variant copied from TargetingProperty.Property) */\n  IS_TRUE = 130,\n  /** STORY_POST_RATIO - STORY_POST_RATIO (variant copied from TargetingProperty.Property) */\n  STORY_POST_RATIO = 131,\n  /** GENDER - GENDER (variant copied from TargetingProperty.Property) */\n  GENDER = 132,\n  /** INFERRED_AGE_BUCKET - INFERRED_AGE_BUCKET (variant copied from TargetingProperty.Property) */\n  INFERRED_AGE_BUCKET = 133,\n  /** STORIES - STORIES (variant copied from TargetingProperty.Property) */\n  STORIES = 134,\n  /** SENDS - SENDS (variant copied from TargetingProperty.Property) */\n  SENDS = 135,\n  /** SNAP_CREATE_L7 - SNAP_CREATE_L7 (variant copied from TargetingProperty.Property) */\n  SNAP_CREATE_L7 = 136,\n  /** STORY_POST_L7 - STORY_POST_L7 (variant copied from TargetingProperty.Property) */\n  STORY_POST_L7 = 137,\n  /** COMMUNICATION_L7 - COMMUNICATION_L7 (variant copied from TargetingProperty.Property) */\n  COMMUNICATION_L7 = 138,\n  /** DF_L7 - DF_L7 (variant copied from TargetingProperty.Property) */\n  DF_L7 = 139,\n  /** APP_L7 - APP_L7 (variant copied from TargetingProperty.Property) */\n  APP_L7 = 140,\n  /** DAYS_SINCE_CREATION_BUCKET - DAYS_SINCE_CREATION_BUCKET (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_CREATION_BUCKET = 141,\n  /** BIDIRECTIONAL_FRIEND_STATUS - BIDIRECTIONAL_FRIEND_STATUS (variant copied from TargetingProperty.Property) */\n  BIDIRECTIONAL_FRIEND_STATUS = 142,\n  /** STORY_POST_PREDICTION - STORY_POST_PREDICTION (variant copied from TargetingProperty.Property) */\n  STORY_POST_PREDICTION = 143,\n  /** APP_OPENS - APP_OPENS (variant copied from TargetingProperty.Property) */\n  APP_OPENS = 144,\n  /** LENS_SWIPES - LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  LENS_SWIPES = 145,\n  /** LENS_SNAPS - LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  LENS_SNAPS = 146,\n  /** LENS_OPS - LENS_OPS (variant copied from TargetingProperty.Property) */\n  LENS_OPS = 147,\n  /** W1_APP_OPENS - W1_APP_OPENS (variant copied from TargetingProperty.Property) */\n  W1_APP_OPENS = 148,\n  /** W1_LENS_SWIPES - W1_LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  W1_LENS_SWIPES = 149,\n  /** W1_LENS_SNAPS - W1_LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  W1_LENS_SNAPS = 150,\n  /** W1_LENS_OPS - W1_LENS_OPS (variant copied from TargetingProperty.Property) */\n  W1_LENS_OPS = 151,\n  /** W2_APP_OPENS - W2_APP_OPENS (variant copied from TargetingProperty.Property) */\n  W2_APP_OPENS = 152,\n  /** W2_LENS_SWIPES - W2_LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  W2_LENS_SWIPES = 153,\n  /** W2_LENS_SNAPS - W2_LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  W2_LENS_SNAPS = 154,\n  /** W2_LENS_OPS - W2_LENS_OPS (variant copied from TargetingProperty.Property) */\n  W2_LENS_OPS = 155,\n  /** W34_APP_OPENS - W34_APP_OPENS (variant copied from TargetingProperty.Property) */\n  W34_APP_OPENS = 156,\n  /** W34_LENS_SWIPES - W34_LENS_SWIPES (variant copied from TargetingProperty.Property) */\n  W34_LENS_SWIPES = 157,\n  /** W34_LENS_SNAPS - W34_LENS_SNAPS (variant copied from TargetingProperty.Property) */\n  W34_LENS_SNAPS = 158,\n  /** W34_LENS_OPS - W34_LENS_OPS (variant copied from TargetingProperty.Property) */\n  W34_LENS_OPS = 159,\n  /** LENS_SWIPES_PREDICTION - LENS_SWIPES_PREDICTION (variant copied from TargetingProperty.Property) */\n  LENS_SWIPES_PREDICTION = 160,\n  /** REGISTRATION_COUNTRY - REGISTRATION_COUNTRY (variant copied from TargetingProperty.Property) */\n  REGISTRATION_COUNTRY = 161,\n  /** IP_ASN - IP_ASN (variant copied from TargetingProperty.Property) */\n  IP_ASN = 162,\n  /** IP_REGION - IP_REGION (variant copied from TargetingProperty.Property) */\n  IP_REGION = 163,\n  /** IP_CITY - IP_CITY (variant copied from TargetingProperty.Property) */\n  IP_CITY = 164,\n  /** HAS_USER_ID - HAS_USER_ID (variant copied from TargetingProperty.Property) */\n  HAS_USER_ID = 165,\n  /** HAS_BITMOJI - HAS_BITMOJI (variant copied from TargetingProperty.Property) */\n  HAS_BITMOJI = 166,\n  /** NUM_APP_OPENS_LAST_8_DAYS - NUM_APP_OPENS_LAST_8_DAYS (variant copied from TargetingProperty.Property) */\n  NUM_APP_OPENS_LAST_8_DAYS = 167,\n  /** NUM_FEATURE_STORY_VIEW_DAYS_L7 - NUM_FEATURE_STORY_VIEW_DAYS_L7 (variant copied from TargetingProperty.Property) */\n  NUM_FEATURE_STORY_VIEW_DAYS_L7 = 168,\n  /** NUM_FEATURE_STORY_SYNC_DAYS_L7 - NUM_FEATURE_STORY_SYNC_DAYS_L7 (variant copied from TargetingProperty.Property) */\n  NUM_FEATURE_STORY_SYNC_DAYS_L7 = 169,\n  /** HEXAGON_NN_SUPPORTED_VERSION - HEXAGON_NN_SUPPORTED_VERSION (variant copied from TargetingProperty.Property) */\n  HEXAGON_NN_SUPPORTED_VERSION = 170,\n  /** NETWORK_QUALITY - NETWORK_QUALITY (variant copied from TargetingProperty.Property) */\n  NETWORK_QUALITY = 171,\n  /** DEVICE_MEMORY_MB - DEVICE_MEMORY_MB (variant copied from TargetingProperty.Property) */\n  DEVICE_MEMORY_MB = 172,\n  /** DEVICE_GL_VERSION - DEVICE_GL_VERSION (variant copied from TargetingProperty.Property) */\n  DEVICE_GL_VERSION = 173,\n  /** SNAP_PRO_STATUS - SNAP_PRO_STATUS (variant copied from TargetingProperty.Property) */\n  SNAP_PRO_STATUS = 174,\n  /** DEVICE_VP9_DECODING_SUPPORT - DEVICE_VP9_DECODING_SUPPORT (variant copied from TargetingProperty.Property) */\n  DEVICE_VP9_DECODING_SUPPORT = 175,\n  /** AVG_FRIEND_STORY_VIEW_COUNT_L7 - AVG_FRIEND_STORY_VIEW_COUNT_L7 (variant copied from TargetingProperty.Property) */\n  AVG_FRIEND_STORY_VIEW_COUNT_L7 = 176,\n  /** GAME_JOIN_TIME - GAME_JOIN_TIME (variant copied from TargetingProperty.Property) */\n  GAME_JOIN_TIME = 177,\n  /** GAME_LAST_ACTIVE_TIME - GAME_LAST_ACTIVE_TIME (variant copied from TargetingProperty.Property) */\n  GAME_LAST_ACTIVE_TIME = 178,\n  /** DAYS_SINCE_FIRST_GAME_ACTIVITY - DAYS_SINCE_FIRST_GAME_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_FIRST_GAME_ACTIVITY = 179,\n  /** DAYS_SINCE_LAST_GAME_ACTIVITY - DAYS_SINCE_LAST_GAME_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_LAST_GAME_ACTIVITY = 180,\n  /** PF_PAGE_SESSIONS_WITH_LONG_IMP - PF_PAGE_SESSIONS_WITH_LONG_IMP (variant copied from TargetingProperty.Property) */\n  PF_PAGE_SESSIONS_WITH_LONG_IMP = 181,\n  /** WIRELESS_CARRIER - WIRELESS_CARRIER (variant copied from TargetingProperty.Property) */\n  WIRELESS_CARRIER = 182,\n  /** MINIS_JOIN_TIME - MINIS_JOIN_TIME (variant copied from TargetingProperty.Property) */\n  MINIS_JOIN_TIME = 183,\n  /** MINIS_LAST_ACTIVE_TIME - MINIS_LAST_ACTIVE_TIME (variant copied from TargetingProperty.Property) */\n  MINIS_LAST_ACTIVE_TIME = 184,\n  /** DAYS_SINCE_FIRST_MINIS_ACTIVITY - DAYS_SINCE_FIRST_MINIS_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_FIRST_MINIS_ACTIVITY = 185,\n  /** DAYS_SINCE_LAST_MINIS_ACTIVITY - DAYS_SINCE_LAST_MINIS_ACTIVITY (variant copied from TargetingProperty.Property) */\n  DAYS_SINCE_LAST_MINIS_ACTIVITY = 186,\n  /** DEVICE_AV1_DECODING_SUPPORT - DEVICE_AV1_DECODING_SUPPORT (variant copied from TargetingProperty.Property) */\n  DEVICE_AV1_DECODING_SUPPORT = 187,\n  /** APP_PACKAGE_INSTALLER - APP_PACKAGE_INSTALLER (variant copied from TargetingProperty.Property) */\n  APP_PACKAGE_INSTALLER = 188,\n  /** STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL - STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL (variant copied from TargetingProperty.Property) */\n  STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL = 189,\n  /** REPORTED_AGE - REPORTED_AGE (variant copied from TargetingProperty.Property) */\n  REPORTED_AGE = 190,\n  /** ANDROID_MOBILE_SERVICES_PROVIDER - ANDROID_MOBILE_SERVICES_PROVIDER (variant copied from TargetingProperty.Property) */\n  ANDROID_MOBILE_SERVICES_PROVIDER = 191,\n  /** IS_ACQUIRED_USER - IS_ACQUIRED_USER (variant copied from TargetingProperty.Property) */\n  IS_ACQUIRED_USER = 192,\n  /** YDPI - YDPI (variant copied from TargetingProperty.Property) */\n  YDPI = 193,\n  /** BIDIRECTIONAL_FRIEND_STATUS_VELLUM - BIDIRECTIONAL_FRIEND_STATUS_VELLUM (variant copied from TargetingProperty.Property) */\n  BIDIRECTIONAL_FRIEND_STATUS_VELLUM = 194,\n  /** ORIGIN - ORIGIN (variant copied from TargetingProperty.Property) */\n  ORIGIN = 195,\n  /** LENSCORE_VERSION - LENSCORE_VERSION (variant copied from TargetingProperty.Property) */\n  LENSCORE_VERSION = 196,\n  /** SNAPKIT_APP_ID - SNAPKIT_APP_ID (variant copied from TargetingProperty.Property) */\n  SNAPKIT_APP_ID = 197,\n  /** GPU - GPU (variant copied from TargetingProperty.Property) */\n  GPU = 198,\n  /** CHIPSET_NAME - CHIPSET_NAME (variant copied from TargetingProperty.Property) */\n  CHIPSET_NAME = 199,\n  /** CHIPSET_VERSION - CHIPSET_VERSION (variant copied from TargetingProperty.Property) */\n  CHIPSET_VERSION = 200,\n  /** HAS_ZERO_IDFA - HAS_ZERO_IDFA (variant copied from TargetingProperty.Property) */\n  HAS_ZERO_IDFA = 201,\n  /** LIMIT_AD_TRACKING - LIMIT_AD_TRACKING (variant copied from TargetingProperty.Property) */\n  LIMIT_AD_TRACKING = 202,\n  /** ATT_AUTH_STATUS - ATT_AUTH_STATUS (variant copied from TargetingProperty.Property) */\n  ATT_AUTH_STATUS = 203,\n  /** CAMERA2_FRONT_SS_GAIN_OVER_TPA - CAMERA2_FRONT_SS_GAIN_OVER_TPA (variant copied from TargetingProperty.Property) */\n  CAMERA2_FRONT_SS_GAIN_OVER_TPA = 204,\n  /** ATTACHMENT_TOOL_V2 - ATTACHMENT_TOOL_V2 (variant copied from TargetingProperty.Property) */\n  ATTACHMENT_TOOL_V2 = 205,\n  /** USER_PERSONA_V3 - USER_PERSONA_V3 (variant copied from TargetingProperty.Property) */\n  USER_PERSONA_V3 = 206,\n  /** SNAPS_SEND_WITH_HEVC - SNAPS_SEND_WITH_HEVC (variant copied from TargetingProperty.Property) */\n  SNAPS_SEND_WITH_HEVC = 207,\n  /** SNAPS_SEND_WITHOUT_HEVC - SNAPS_SEND_WITHOUT_HEVC (variant copied from TargetingProperty.Property) */\n  SNAPS_SEND_WITHOUT_HEVC = 208,\n  /** CAMERA2_NATIVE_CRASH_OVER_CAMERA1 - CAMERA2_NATIVE_CRASH_OVER_CAMERA1 (variant copied from TargetingProperty.Property) */\n  CAMERA2_NATIVE_CRASH_OVER_CAMERA1 = 209,\n  /** CAMERA2_G2S_LATENCY_OVER_CAMERA1 - CAMERA2_G2S_LATENCY_OVER_CAMERA1 (variant copied from TargetingProperty.Property) */\n  CAMERA2_G2S_LATENCY_OVER_CAMERA1 = 210,\n  /** IS_INTERNAL - IS_INTERNAL (variant copied from TargetingProperty.Property) */\n  IS_INTERNAL = 211,\n  /** IS_WEB - IS_WEB (variant copied from TargetingProperty.Property) */\n  IS_WEB = 212,\n  /** APP_OPEN_TO_MAP - APP_OPEN_TO_MAP (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_MAP = 213,\n  /** APP_OPEN_TO_FRIENDSFEED - APP_OPEN_TO_FRIENDSFEED (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_FRIENDSFEED = 214,\n  /** APP_OPEN_TO_LENSES - APP_OPEN_TO_LENSES (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_LENSES = 215,\n  /** APP_OPEN_TO_MEMORIES - APP_OPEN_TO_MEMORIES (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_MEMORIES = 216,\n  /** APP_OPEN_TO_COMMUNITY - APP_OPEN_TO_COMMUNITY (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_COMMUNITY = 217,\n  /** APP_OPEN_TO_SPOTLIGHT - APP_OPEN_TO_SPOTLIGHT (variant copied from TargetingProperty.Property) */\n  APP_OPEN_TO_SPOTLIGHT = 218,\n  /** IS_IMPACTED_BY_PINC_893 - IS_IMPACTED_BY_PINC_893 (variant copied from TargetingProperty.Property) */\n  IS_IMPACTED_BY_PINC_893 = 219,\n  /** DAYS_BEFORE_BIRTHDAY - DAYS_BEFORE_BIRTHDAY (variant copied from TargetingProperty.Property) */\n  DAYS_BEFORE_BIRTHDAY = 220,\n  /** HAS_BIPA - HAS_BIPA (variant copied from TargetingProperty.Property) */\n  HAS_BIPA = 221,\n  /** SPOTLIGHT_STORY_ENGAGEMENT_STATUS - SPOTLIGHT_STORY_ENGAGEMENT_STATUS (variant copied from TargetingProperty.Property) */\n  SPOTLIGHT_STORY_ENGAGEMENT_STATUS = 222,\n  /** INCLUSION_PANEL_MEMBER - INCLUSION_PANEL_MEMBER (variant copied from TargetingProperty.Property) */\n  INCLUSION_PANEL_MEMBER = 223,\n  /** HEVC_HW_DECODER - HEVC_HW_DECODER (variant copied from TargetingProperty.Property) */\n  HEVC_HW_DECODER = 224,\n  /** HEVC_SW_DECODER - HEVC_SW_DECODER (variant copied from TargetingProperty.Property) */\n  HEVC_SW_DECODER = 225,\n  /**\n   * HASH_MURMUR3_128_MOD_100 - Value of a Murmur3 hash of one of the hash_signals fields modulo 100\n   * PropertyMetadata.signal_to_hash determines which field should be hashed\n   */\n  HASH_MURMUR3_128_MOD_100 = 226,\n  /** HAS_ACTIVE_SNAPCHAT_PLUS - Whether user has active Snapchat+ subscription in Atlas's UserData plus_subscription_info property */\n  HAS_ACTIVE_SNAPCHAT_PLUS = 227,\n  /** SNAP_KIT_OAUTH_ID - OAuth Client ID identifying the source third party application for Snap Kit content */\n  SNAP_KIT_OAUTH_ID = 228,\n  /** ORGANIZATION_TYPE - Organization type of advertiser purchasing ads */\n  ORGANIZATION_TYPE = 229,\n  /**\n   * CHUNK_UPLOAD_SUPPORT_REQUIRED - Client provided boolean that represent whether the config\n   * needs to support uploading in a chunked/streaming manner\n   */\n  CHUNK_UPLOAD_SUPPORT_REQUIRED = 230,\n  /** CLOUDFRONT_POP - The last known CloudFront Point of Presence used */\n  CLOUDFRONT_POP = 231,\n  /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW - Billboard campaign level locally tracked first impresstion time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 232,\n  /** BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT - Billboard campaign level locally tracked click count */\n  BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT = 233,\n  /** BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT - Billboard campaign level locally tracked interaction count */\n  BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT = 234,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW - Billboard campaign level locally tracked last interaction time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW = 235,\n  /** FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH - Lock screen widgets billboard - app open via push notification */\n  FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH = 236,\n  /** WEB_SCREEN_WIDTH - Web browser screen width in CSS pixels */\n  WEB_SCREEN_WIDTH = 237,\n  /** WEB_SCREEN_HEIGHT - Web browser screen height in CSS pixels */\n  WEB_SCREEN_HEIGHT = 238,\n  /** SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED - iOS 16 lock screen widgets enabled */\n  SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED = 239,\n  /** SNAP_PRIVACY - Atlas enum property that indicates a user's snap privacy settings (Friends vs. Everyone) */\n  SNAP_PRIVACY = 240,\n  /** ADS_INTERFACES_IS_NEW_ORGANIZATION - Is a new organization in ads interfaces UI */\n  ADS_INTERFACES_IS_NEW_ORGANIZATION = 241,\n  /** SERVER_ONLY - if true only server callers can get the config */\n  SERVER_ONLY = 242,\n  /** GHE_ORGANIZATION - The Github Enterprise organization */\n  GHE_ORGANIZATION = 243,\n  /** GHE_REPOSITORY - The Github Enterprise Repository, which is contained by a GHE organization */\n  GHE_REPOSITORY = 244,\n  /** GHE_USER_EMAIL - In the context of Machamp, the user identifier (email) */\n  GHE_USER_EMAIL = 245,\n  /** BUILD_DEFINITION_ID - In the context of Machamp, the build definition identifier is a UUID hash of the GHE organization and and repository. */\n  BUILD_DEFINITION_ID = 246,\n  /** BUILD_DEFINITION_NAME - In the context of Machamp, the build definition name is name of the build from the build.yaml */\n  BUILD_DEFINITION_NAME = 247,\n  /** LCA_PRINCIPAL - LCA Principal of the service calling Circumstance Engine */\n  LCA_PRINCIPAL = 248,\n  /**\n   * MEDIA_PERFORMANCE_CLASS - A performance class defines a set of device capabilities by Android\n   * e.g. 30, 31, See https://android-developers.googleblog.com/2022/03/using-performance-class-to-optimize.html\n   */\n  MEDIA_PERFORMANCE_CLASS = 249,\n  /** COMMUNITY_COUNT - Number of Communities user is in */\n  COMMUNITY_COUNT = 250,\n  UNRECOGNIZED = -1,\n}\n\nexport interface ClientTargetingExpression_PropertyMetadata {\n  /** Sup property's item id */\n  itemId: number;\n  /** Which field of feature_provided_signals.hash_signals to hash */\n  signalToHash: ClientTargetingExpression_PropertyMetadata_SignalToHash;\n  /**\n   * Namespace string, supplied by the AB service to included\n   * in HASH_MURMUR3_128_MOD_100 evaluation\n   */\n  abNamespaceForHashing: string;\n  /**\n   * Seed string, supplied by the AB service to included\n   * in HASH_MURMUR3_128_MOD_100 evaluation\n   */\n  abSeedForHashing: string;\n}\n\n/**\n * Which field of feature_provided_signals.hash_signals to hash\n * To be used by the HASH_MURMUR3_128_MOD_100 property only\n */\nexport enum ClientTargetingExpression_PropertyMetadata_SignalToHash {\n  /** UNKNOWN_SIGNAL_TO_HASH - Unset variant */\n  UNKNOWN_SIGNAL_TO_HASH = 0,\n  /**\n   * HASH_SEED_AND_USER_ID - Indicates that seed+user_id string should be hashed\n   * (namespace is supplied by the server, user_id - by the client)\n   */\n  HASH_SEED_AND_USER_ID = 1,\n  /**\n   * HASH_USER_ID_AND_NAMESPACE - Indicates that used_id+namespace string should be hashed\n   * (seed is supplied by the server, user_id - by the client)\n   */\n  HASH_USER_ID_AND_NAMESPACE = 2,\n  UNRECOGNIZED = -1,\n}\n\nconst baseConfigResult: object = {\n  configId: \"\",\n  ttlSeconds: 0,\n  priority: 0,\n  namespace: 0,\n  studyName: \"\",\n  experimentId: 0,\n  delete: false,\n  servePlatforms: 0,\n  sequenceId: 0,\n  ruidType: 0,\n  segmentOrdinal: 0,\n  generatedFromAbAllowlists: false,\n};\n\nexport const ConfigResult = {\n  encode(\n    message: ConfigResult,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.configId !== \"\") {\n      writer.uint32(10).string(message.configId);\n    }\n    if (message.value !== undefined) {\n      Value.encode(message.value, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.targetingExpression !== undefined) {\n      ClientTargetingExpression.encode(\n        message.targetingExpression,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    if (message.ttlSeconds !== 0) {\n      writer.uint32(32).int64(message.ttlSeconds);\n    }\n    if (message.configRuleUuidBytes.length !== 0) {\n      writer.uint32(42).bytes(message.configRuleUuidBytes);\n    }\n    if (message.priority !== 0) {\n      writer.uint32(48).int32(message.priority);\n    }\n    if (message.namespace !== 0) {\n      writer.uint32(56).int32(message.namespace);\n    }\n    if (message.studyName !== \"\") {\n      writer.uint32(66).string(message.studyName);\n    }\n    if (message.experimentId !== 0) {\n      writer.uint32(72).int32(message.experimentId);\n    }\n    if (message.delete === true) {\n      writer.uint32(80).bool(message.delete);\n    }\n    writer.uint32(90).fork();\n    for (const v of message.servePlatforms) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.sequenceId !== 0) {\n      writer.uint32(96).int32(message.sequenceId);\n    }\n    if (message.ruidType !== 0) {\n      writer.uint32(104).int32(message.ruidType);\n    }\n    if (message.segmentOrdinal !== 0) {\n      writer.uint32(112).int32(message.segmentOrdinal);\n    }\n    if (message.generatedFromAbAllowlists === true) {\n      writer.uint32(120).bool(message.generatedFromAbAllowlists);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseConfigResult } as ConfigResult;\n    message.servePlatforms = [];\n    message.configRuleUuidBytes = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configId = reader.string();\n          break;\n        case 2:\n          message.value = Value.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.targetingExpression = ClientTargetingExpression.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 4:\n          message.ttlSeconds = longToNumber(reader.int64() as Long);\n          break;\n        case 5:\n          message.configRuleUuidBytes = reader.bytes();\n          break;\n        case 6:\n          message.priority = reader.int32();\n          break;\n        case 7:\n          message.namespace = reader.int32() as any;\n          break;\n        case 8:\n          message.studyName = reader.string();\n          break;\n        case 9:\n          message.experimentId = reader.int32();\n          break;\n        case 10:\n          message.delete = reader.bool();\n          break;\n        case 11:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.servePlatforms.push(reader.int32() as any);\n            }\n          } else {\n            message.servePlatforms.push(reader.int32() as any);\n          }\n          break;\n        case 12:\n          message.sequenceId = reader.int32();\n          break;\n        case 13:\n          message.ruidType = reader.int32() as any;\n          break;\n        case 14:\n          message.segmentOrdinal = reader.int32();\n          break;\n        case 15:\n          message.generatedFromAbAllowlists = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ConfigResult>): ConfigResult {\n    const message = { ...baseConfigResult } as ConfigResult;\n    message.servePlatforms = [];\n    if (object.configId !== undefined && object.configId !== null) {\n      message.configId = object.configId;\n    } else {\n      message.configId = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = Value.fromPartial(object.value);\n    } else {\n      message.value = undefined;\n    }\n    if (\n      object.targetingExpression !== undefined &&\n      object.targetingExpression !== null\n    ) {\n      message.targetingExpression = ClientTargetingExpression.fromPartial(\n        object.targetingExpression\n      );\n    } else {\n      message.targetingExpression = undefined;\n    }\n    if (object.ttlSeconds !== undefined && object.ttlSeconds !== null) {\n      message.ttlSeconds = object.ttlSeconds;\n    } else {\n      message.ttlSeconds = 0;\n    }\n    if (\n      object.configRuleUuidBytes !== undefined &&\n      object.configRuleUuidBytes !== null\n    ) {\n      message.configRuleUuidBytes = object.configRuleUuidBytes;\n    } else {\n      message.configRuleUuidBytes = new Uint8Array();\n    }\n    if (object.priority !== undefined && object.priority !== null) {\n      message.priority = object.priority;\n    } else {\n      message.priority = 0;\n    }\n    if (object.namespace !== undefined && object.namespace !== null) {\n      message.namespace = object.namespace;\n    } else {\n      message.namespace = 0;\n    }\n    if (object.studyName !== undefined && object.studyName !== null) {\n      message.studyName = object.studyName;\n    } else {\n      message.studyName = \"\";\n    }\n    if (object.experimentId !== undefined && object.experimentId !== null) {\n      message.experimentId = object.experimentId;\n    } else {\n      message.experimentId = 0;\n    }\n    if (object.delete !== undefined && object.delete !== null) {\n      message.delete = object.delete;\n    } else {\n      message.delete = false;\n    }\n    if (object.servePlatforms !== undefined && object.servePlatforms !== null) {\n      for (const e of object.servePlatforms) {\n        message.servePlatforms.push(e);\n      }\n    }\n    if (object.sequenceId !== undefined && object.sequenceId !== null) {\n      message.sequenceId = object.sequenceId;\n    } else {\n      message.sequenceId = 0;\n    }\n    if (object.ruidType !== undefined && object.ruidType !== null) {\n      message.ruidType = object.ruidType;\n    } else {\n      message.ruidType = 0;\n    }\n    if (object.segmentOrdinal !== undefined && object.segmentOrdinal !== null) {\n      message.segmentOrdinal = object.segmentOrdinal;\n    } else {\n      message.segmentOrdinal = 0;\n    }\n    if (\n      object.generatedFromAbAllowlists !== undefined &&\n      object.generatedFromAbAllowlists !== null\n    ) {\n      message.generatedFromAbAllowlists = object.generatedFromAbAllowlists;\n    } else {\n      message.generatedFromAbAllowlists = false;\n    }\n    return message;\n  },\n};\n\nconst baseConfigResultBundle: object = { etag: \"\" };\n\nexport const ConfigResultBundle = {\n  encode(\n    message: ConfigResultBundle,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.etag !== \"\") {\n      writer.uint32(10).string(message.etag);\n    }\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ConfigResultBundle {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseConfigResultBundle } as ConfigResultBundle;\n    message.configResults = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.etag = reader.string();\n          break;\n        case 2:\n          message.configResults.push(\n            ConfigResult.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ConfigResultBundle>): ConfigResultBundle {\n    const message = { ...baseConfigResultBundle } as ConfigResultBundle;\n    message.configResults = [];\n    if (object.etag !== undefined && object.etag !== null) {\n      message.etag = object.etag;\n    } else {\n      message.etag = \"\";\n    }\n    if (object.configResults !== undefined && object.configResults !== null) {\n      for (const e of object.configResults) {\n        message.configResults.push(ConfigResult.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseClientTargetingExpression: object = {\n  operator: 0,\n  property: 0,\n  predicateOperator: 0,\n};\n\nexport const ClientTargetingExpression = {\n  encode(\n    message: ClientTargetingExpression,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.operator !== 0) {\n      writer.uint32(8).int32(message.operator);\n    }\n    for (const v of message.children) {\n      ClientTargetingExpression.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.property !== 0) {\n      writer.uint32(24).int32(message.property);\n    }\n    if (message.predicateOperator !== 0) {\n      writer.uint32(32).int32(message.predicateOperator);\n    }\n    if (message.value !== undefined) {\n      Value.encode(message.value, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.propertyMetadata !== undefined) {\n      ClientTargetingExpression_PropertyMetadata.encode(\n        message.propertyMetadata,\n        writer.uint32(50).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ClientTargetingExpression {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseClientTargetingExpression,\n    } as ClientTargetingExpression;\n    message.children = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.operator = reader.int32() as any;\n          break;\n        case 2:\n          message.children.push(\n            ClientTargetingExpression.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.property = reader.int32() as any;\n          break;\n        case 4:\n          message.predicateOperator = reader.int32() as any;\n          break;\n        case 5:\n          message.value = Value.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.propertyMetadata =\n            ClientTargetingExpression_PropertyMetadata.decode(\n              reader,\n              reader.uint32()\n            );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ClientTargetingExpression>\n  ): ClientTargetingExpression {\n    const message = {\n      ...baseClientTargetingExpression,\n    } as ClientTargetingExpression;\n    message.children = [];\n    if (object.operator !== undefined && object.operator !== null) {\n      message.operator = object.operator;\n    } else {\n      message.operator = 0;\n    }\n    if (object.children !== undefined && object.children !== null) {\n      for (const e of object.children) {\n        message.children.push(ClientTargetingExpression.fromPartial(e));\n      }\n    }\n    if (object.property !== undefined && object.property !== null) {\n      message.property = object.property;\n    } else {\n      message.property = 0;\n    }\n    if (\n      object.predicateOperator !== undefined &&\n      object.predicateOperator !== null\n    ) {\n      message.predicateOperator = object.predicateOperator;\n    } else {\n      message.predicateOperator = 0;\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = Value.fromPartial(object.value);\n    } else {\n      message.value = undefined;\n    }\n    if (\n      object.propertyMetadata !== undefined &&\n      object.propertyMetadata !== null\n    ) {\n      message.propertyMetadata =\n        ClientTargetingExpression_PropertyMetadata.fromPartial(\n          object.propertyMetadata\n        );\n    } else {\n      message.propertyMetadata = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseClientTargetingExpression_PropertyMetadata: object = {\n  itemId: 0,\n  signalToHash: 0,\n  abNamespaceForHashing: \"\",\n  abSeedForHashing: \"\",\n};\n\nexport const ClientTargetingExpression_PropertyMetadata = {\n  encode(\n    message: ClientTargetingExpression_PropertyMetadata,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.itemId !== 0) {\n      writer.uint32(8).int32(message.itemId);\n    }\n    if (message.signalToHash !== 0) {\n      writer.uint32(16).int32(message.signalToHash);\n    }\n    if (message.abNamespaceForHashing !== \"\") {\n      writer.uint32(26).string(message.abNamespaceForHashing);\n    }\n    if (message.abSeedForHashing !== \"\") {\n      writer.uint32(34).string(message.abSeedForHashing);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ClientTargetingExpression_PropertyMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseClientTargetingExpression_PropertyMetadata,\n    } as ClientTargetingExpression_PropertyMetadata;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.itemId = reader.int32();\n          break;\n        case 2:\n          message.signalToHash = reader.int32() as any;\n          break;\n        case 3:\n          message.abNamespaceForHashing = reader.string();\n          break;\n        case 4:\n          message.abSeedForHashing = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ClientTargetingExpression_PropertyMetadata>\n  ): ClientTargetingExpression_PropertyMetadata {\n    const message = {\n      ...baseClientTargetingExpression_PropertyMetadata,\n    } as ClientTargetingExpression_PropertyMetadata;\n    if (object.itemId !== undefined && object.itemId !== null) {\n      message.itemId = object.itemId;\n    } else {\n      message.itemId = 0;\n    }\n    if (object.signalToHash !== undefined && object.signalToHash !== null) {\n      message.signalToHash = object.signalToHash;\n    } else {\n      message.signalToHash = 0;\n    }\n    if (\n      object.abNamespaceForHashing !== undefined &&\n      object.abNamespaceForHashing !== null\n    ) {\n      message.abNamespaceForHashing = object.abNamespaceForHashing;\n    } else {\n      message.abNamespaceForHashing = \"\";\n    }\n    if (\n      object.abSeedForHashing !== undefined &&\n      object.abSeedForHashing !== null\n    ) {\n      message.abSeedForHashing = object.abSeedForHashing;\n    } else {\n      message.abSeedForHashing = \"\";\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { ConfigResult } from \"../../cdp/cof/config_result\";\nimport { BenchmarkRequest } from \"../../cdp/cof/benchmark\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** ConfigTargetingResponseDebugData contains debug information for the ConfigTargetingResponse */\nexport interface ConfigTargetingResponseDebugData {\n  /** input used to calculate ab_result_checksum */\n  abResultChecksumInput: string;\n}\n\nexport interface ConfigTargetingResponse {\n  /**\n   * A list of configs.  For the configs that have a fully evaluated targeting expression there\n   * will be only one config per id.\n   * For the configs that rely on client side evaluation there can be multiple per id.\n   */\n  configResults: ConfigResult[];\n  /** The etag for caching the config results when it's not changed. */\n  configResultsEtag: string;\n  /** Benchmarks a client is requested to execute. */\n  benchmarkRequest: BenchmarkRequest | undefined;\n  /**\n   * Indicates the result is the full snapshot even though a delta sync is requested\n   * The client should delete any config rules not in the response from the DB.\n   */\n  fullResults: boolean;\n  /**\n   * The checksum calculated for ab related configs.\n   * If the checksum is < 0 clients should not use AB data\n   * If the checksum is == 0 clients should not perform a checksum on the result\n   * If the checksum is > 0 clients should perform a checksum on the result and only use\n   *   the resulting AB data if the checksum matches\n   */\n  abResultChecksum: number;\n  /** ip_based_country_code used for AllUpdates Annihilation. */\n  iso3166Alpha2CountryCodeFromRequestIp: string;\n  /** debug data is only available for internal traffic and enabled per request */\n  debugData: ConfigTargetingResponseDebugData | undefined;\n}\n\nconst baseConfigTargetingResponseDebugData: object = {\n  abResultChecksumInput: \"\",\n};\n\nexport const ConfigTargetingResponseDebugData = {\n  encode(\n    message: ConfigTargetingResponseDebugData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.abResultChecksumInput !== \"\") {\n      writer.uint32(10).string(message.abResultChecksumInput);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ConfigTargetingResponseDebugData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseConfigTargetingResponseDebugData,\n    } as ConfigTargetingResponseDebugData;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abResultChecksumInput = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ConfigTargetingResponseDebugData>\n  ): ConfigTargetingResponseDebugData {\n    const message = {\n      ...baseConfigTargetingResponseDebugData,\n    } as ConfigTargetingResponseDebugData;\n    if (\n      object.abResultChecksumInput !== undefined &&\n      object.abResultChecksumInput !== null\n    ) {\n      message.abResultChecksumInput = object.abResultChecksumInput;\n    } else {\n      message.abResultChecksumInput = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseConfigTargetingResponse: object = {\n  configResultsEtag: \"\",\n  fullResults: false,\n  abResultChecksum: 0,\n  iso3166Alpha2CountryCodeFromRequestIp: \"\",\n};\n\nexport const ConfigTargetingResponse = {\n  encode(\n    message: ConfigTargetingResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.configResults) {\n      ConfigResult.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.configResultsEtag !== \"\") {\n      writer.uint32(18).string(message.configResultsEtag);\n    }\n    if (message.benchmarkRequest !== undefined) {\n      BenchmarkRequest.encode(\n        message.benchmarkRequest,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    if (message.fullResults === true) {\n      writer.uint32(32).bool(message.fullResults);\n    }\n    if (message.abResultChecksum !== 0) {\n      writer.uint32(40).int32(message.abResultChecksum);\n    }\n    if (message.iso3166Alpha2CountryCodeFromRequestIp !== \"\") {\n      writer.uint32(50).string(message.iso3166Alpha2CountryCodeFromRequestIp);\n    }\n    if (message.debugData !== undefined) {\n      ConfigTargetingResponseDebugData.encode(\n        message.debugData,\n        writer.uint32(58).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ConfigTargetingResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseConfigTargetingResponse,\n    } as ConfigTargetingResponse;\n    message.configResults = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configResults.push(\n            ConfigResult.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.configResultsEtag = reader.string();\n          break;\n        case 3:\n          message.benchmarkRequest = BenchmarkRequest.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 4:\n          message.fullResults = reader.bool();\n          break;\n        case 5:\n          message.abResultChecksum = reader.int32();\n          break;\n        case 6:\n          message.iso3166Alpha2CountryCodeFromRequestIp = reader.string();\n          break;\n        case 7:\n          message.debugData = ConfigTargetingResponseDebugData.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ConfigTargetingResponse>\n  ): ConfigTargetingResponse {\n    const message = {\n      ...baseConfigTargetingResponse,\n    } as ConfigTargetingResponse;\n    message.configResults = [];\n    if (object.configResults !== undefined && object.configResults !== null) {\n      for (const e of object.configResults) {\n        message.configResults.push(ConfigResult.fromPartial(e));\n      }\n    }\n    if (\n      object.configResultsEtag !== undefined &&\n      object.configResultsEtag !== null\n    ) {\n      message.configResultsEtag = object.configResultsEtag;\n    } else {\n      message.configResultsEtag = \"\";\n    }\n    if (\n      object.benchmarkRequest !== undefined &&\n      object.benchmarkRequest !== null\n    ) {\n      message.benchmarkRequest = BenchmarkRequest.fromPartial(\n        object.benchmarkRequest\n      );\n    } else {\n      message.benchmarkRequest = undefined;\n    }\n    if (object.fullResults !== undefined && object.fullResults !== null) {\n      message.fullResults = object.fullResults;\n    } else {\n      message.fullResults = false;\n    }\n    if (\n      object.abResultChecksum !== undefined &&\n      object.abResultChecksum !== null\n    ) {\n      message.abResultChecksum = object.abResultChecksum;\n    } else {\n      message.abResultChecksum = 0;\n    }\n    if (\n      object.iso3166Alpha2CountryCodeFromRequestIp !== undefined &&\n      object.iso3166Alpha2CountryCodeFromRequestIp !== null\n    ) {\n      message.iso3166Alpha2CountryCodeFromRequestIp =\n        object.iso3166Alpha2CountryCodeFromRequestIp;\n    } else {\n      message.iso3166Alpha2CountryCodeFromRequestIp = \"\";\n    }\n    if (object.debugData !== undefined && object.debugData !== null) {\n      message.debugData = ConfigTargetingResponseDebugData.fromPartial(\n        object.debugData\n      );\n    } else {\n      message.debugData = undefined;\n    }\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** Namespace for grouping COF entities. */\nexport enum Namespace {\n  DEFAULT = 0,\n  CAMERA = 1,\n  COF = 2,\n  MDP = 3,\n  MONETIZATION = 4,\n  LEGACY_AB = 5,\n  /** AB_STUDY_VERSION - The value of a AB config is study version. */\n  AB_STUDY_VERSION = 6,\n  CAMERA_PLATFORM = 7,\n  PLATFORM_UI = 8,\n  PLATFORM_CORE = 9,\n  MONETIZATION_UI = 10,\n  MONETIZATION_RANKING = 11,\n  USERS_AND_FRIENDS_UI = 12,\n  USERS_AND_FRIENDS_CORE = 13,\n  USERS_AND_FRIENDS_RANKING = 14,\n  MESSAGING_UI = 15,\n  MESSAGING_CORE = 16,\n  /** @deprecated */\n  STORIES_UI = 17,\n  STORIES_CORE = 18,\n  STORIES_RANKING = 19,\n  DISCOVER_UI = 20,\n  DISCOVER_CORE = 21,\n  DISCOVER_RANKING = 22,\n  PREMIUM_CONTENT_UI = 23,\n  PREMIUM_CONTENT_CORE = 24,\n  PREMIUM_CONTENT_RANKING = 25,\n  COMMUNITY_UI = 26,\n  COMMUNITY_CORE = 27,\n  COMMUNITY_RANKING = 28,\n  CAMERA_UI = 29,\n  CREATIVE_TOOLS_UI = 30,\n  CREATIVE_TOOLS_CORE = 31,\n  CAMERA_PLATFORM_UI = 32,\n  CAMERA_PLATFORM_RANKING = 33,\n  PERCEPTION_UI = 34,\n  PERCEPTION_CORE = 35,\n  PERCEPTION_RANKING = 36,\n  MEDIA_UI = 37,\n  MEMORIES_UI = 38,\n  MEMORIES_CORE = 39,\n  MAP_UI = 40,\n  MAP_CORE = 41,\n  SEARCH_UI = 42,\n  SEARCH_CORE = 43,\n  SEARCH_RANKING = 44,\n  COGNAC_UI = 45,\n  COGNAC_CORE = 46,\n  BITMOJI_UI = 47,\n  BITMOJI_CORE = 48,\n  SPECTACLES_UI = 49,\n  SPECTACLES_CORE = 50,\n  SNAP_KIT_UI = 51,\n  SNAP_KIT_CORE = 52,\n  SNAP_PRO_UI = 53,\n  SNAP_PRO_CORE = 54,\n  NGS_UI = 55,\n  CAMEOS_UI = 56,\n  CAMEOS_CORE = 57,\n  CAMEOS_RANKING = 58,\n  BLIZZARD_CLIENT = 59,\n  BLIZZARD_BACKEND = 60,\n  AB_SEGMENT = 61,\n  CONFIG_ROLLOUT = 62,\n  COMMERCE_BACKEND = 63,\n  LENS_CORE = 64,\n  CAMERA_KIT_CORE = 65,\n  MDP_CONTENT_MANAGER = 66,\n  REQUEST_DOMAIN_ROUTING = 67,\n  CDN_ROUTING = 68,\n  GRAPHENE_SAMPLING = 69,\n  WEB_STORY_CORE = 70,\n  WEB_STORY_UI = 71,\n  CLIENT_SWITCHBOARD = 72,\n  /** MCS - Messaging core service, aka Arroyo.  See go/mcs-quick-exps */\n  MCS = 73,\n  SHARING_UI = 74,\n  SHARING_CORE = 75,\n  SHARING_RANKING = 76,\n  MDP_PLAYBACK = 77,\n  CAMERA_BUSINESS = 78,\n  ADDLIVE = 79,\n  /** AD_KIT_CORE - Ad Kit Core */\n  AD_KIT_CORE = 80,\n  ADDLIVE_UI = 81,\n  ADDLIVE_CORE = 82,\n  ADDLIVE_RANKING = 83,\n  STORY_STUDIO_LITE_UI = 84,\n  STORY_STUDIO_LITE_CORE = 85,\n  COMMERCE_UI = 86,\n  COMMERCE_CORE = 87,\n  COMMERCE_RANKING = 88,\n  STORIES_UX = 89,\n  /** CONTEXT_UI - Context / Interactions */\n  CONTEXT_UI = 90,\n  CONTEXT_CORE = 91,\n  LENS_TARGETING = 92,\n  SPOTLIGHT_RANKING = 93,\n  SPOTLIGHT_CORE = 94,\n  SPOTLIGHT_UI = 95,\n  ACTIVATION_CORE = 96,\n  FRIENDING = 97,\n  /** SAFETY - Platform Integrity Engineering */\n  SAFETY = 98,\n  /** LOGIN - Login Processing */\n  LOGIN = 99,\n  MYLENSES_WEB_CORE = 100,\n  SECURITY = 101,\n  AB_CONSOLE = 102,\n  AD_MODERATION = 103,\n  CONTENT_LIFT_MEASUREMENT = 104,\n  CONTEXT_BACKEND = 105,\n  GAMES_FEED_CORE = 106,\n  RECIPIENT_DEVICE_CAPABILITIES = 107,\n  /** ADS_GATEWAY_CORE - Ads Manager */\n  ADS_GATEWAY_CORE = 108,\n  ADS_INTERFACES_UI = 109,\n  ADS_MANAGER_UI = 110,\n  BUSINESS_MANAGER_UI = 111,\n  PROFILE_MANAGER_UI = 112,\n  /** NOTIFICATION - Notification */\n  NOTIFICATION = 113,\n  /** BILLBOARD - Billboard */\n  BILLBOARD = 114,\n  LENS_DELIVERY_CORE = 115,\n  /** TIER_0_LAUNCH - Namespace for major launches */\n  TIER_0_LAUNCH = 116,\n  /** FRIENDING_REG - Namespace for friending suggestion in registration */\n  FRIENDING_REG = 117,\n  /** CAMERA_KIT_WEB_CORE - Namespace for @snapchat/camera-kit npm package */\n  CAMERA_KIT_WEB_CORE = 118,\n  MDP_OPERA_CORE = 119,\n  SHARED_WEB_UI = 120,\n  /** CODELABS_SANDBOX - Sandbox namespace for A/B Codelabs. */\n  CODELABS_SANDBOX = 121,\n  FRIENDING_QA_RANKING = 122,\n  FRIENDING_REG_RANKING = 123,\n  SEARCH_CSL = 124,\n  WEB3 = 125,\n  PLUS_CORE = 126,\n  WEB_STORYTELLER_UI = 127,\n  PLATFORM_SERVICES = 128,\n  WEB_ACCOUNTS = 129,\n  SHOPKIT_WEB = 130,\n  SNAPGRAPH_MODSERVER = 131,\n  /** MUSIC - MUSIC is not a valid namespace name due to a conflict with another Enum. Use SOUNDS instead. */\n  MUSIC = 132,\n  SOUNDS = 133,\n  MACHAMP = 134,\n  PIE_AUTOBOT = 135,\n  NOTIFICATION_RANKING = 136,\n  UNRECOGNIZED = -1,\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","import {\n  ClientTargetingExpression,\n  ClientTargetingExpression_Operator,\n  ClientTargetingExpression_PredicateOperator,\n  ClientTargetingExpression_Property,\n  ConfigResult,\n} from \"../generated/cdp/cof/config_result\";\nimport { isDefaultTargetingExpression } from \"./util\";\n\nexport type TargetingPropertyValueProvider = () => number | boolean | string;\n\n/**\n * Map for developer-provided callbacks on how to retrieve values for client targeting properties.\n */\nconst targetingPropertyValueProviders: Map<\n  ClientTargetingExpression_Property,\n  TargetingPropertyValueProvider\n> = new Map();\n\n/**\n * Registers providers for targeting property values. These providers will be used when evaluating config rules\n * using client-side targeting expressions.\n */\nexport function registerPropertyValueProvider(\n  targetingProperty: ClientTargetingExpression_Property,\n  provider: TargetingPropertyValueProvider\n): void {\n  targetingPropertyValueProviders.set(targetingProperty, provider);\n}\n\n/**\n * A ConfigResult-like object used to wrap ConfigResult proto objects or CofConfig objects that the React hooks\n * in this SDK use. Makes use of Typescript duck-typing to allow extra fields not present on the object.\n */\nexport type ConfigResultWrapper = Pick<\n  ConfigResult,\n  \"configId\" | \"priority\"\n> & { targetingExpression?: ClientTargetingExpression };\n\n/**\n * Takes a list of config rules and returns the highest priority one that matches the configId and that has a\n * satisfied targeting expression. If a provided config rule does not have a targeting expression, that means that\n * the targeting expression was evaluated server-side and already deemed to be satisfied. If no config rules\n * have targeting expressions that are satisfied or no config rule with the config name was returned, undefined is\n * returned.\n * @param configResults - List of ConfigResult-like objects (only configId and targetingExpression must be present)\n * @param configName\n */\nexport function getEvaluatedCofConfig(\n  configResults: ConfigResultWrapper[],\n  configName: string\n): ConfigResultWrapper | undefined {\n  const configRulesForConfigId = configResults.filter(\n    (configRule) => configRule.configId === configName\n  );\n  const noExpressionConfigRules = configRulesForConfigId.filter(\n    (configRule) =>\n      // Depending on the language for the generated proto code, targetingExpression may either be undefined or the\n      // default proto message.\n      !configRule.targetingExpression ||\n      (configRule.targetingExpression &&\n        isDefaultTargetingExpression(configRule.targetingExpression))\n  );\n  const clientTargetingExpressionConfigRules = configRulesForConfigId.filter(\n    (configRule) =>\n      configRule.targetingExpression &&\n      !isDefaultTargetingExpression(configRule.targetingExpression)\n  );\n\n  const satisfiedClientConfigs = clientTargetingExpressionConfigRules.filter(\n    (configRule) =>\n      isTargetingExpressionSatisfied(\n        configRule.targetingExpression as ClientTargetingExpression\n      )\n  );\n\n  const sortedConfigs = [\n    ...satisfiedClientConfigs,\n    ...noExpressionConfigRules,\n  ].sort((a, b) => {\n    return b.priority - a.priority;\n  });\n\n  return sortedConfigs.length ? sortedConfigs[0] : undefined;\n}\n\nfunction isTargetingExpressionSatisfied(\n  targetingExpression: ClientTargetingExpression\n): boolean {\n  if (targetingExpression.children.length > 0) {\n    if (\n      targetingExpression.operator === ClientTargetingExpression_Operator.AND\n    ) {\n      return targetingExpression.children.every((childExpression) =>\n        isTargetingExpressionSatisfied(childExpression)\n      );\n    } else if (\n      targetingExpression.operator === ClientTargetingExpression_Operator.OR\n    ) {\n      return targetingExpression.children.some((childExpression) =>\n        isTargetingExpressionSatisfied(childExpression)\n      );\n    } else {\n      return false;\n    }\n  }\n  return evaluateLeafNode(targetingExpression);\n}\n\nfunction evaluateLeafNode(leaf: ClientTargetingExpression): boolean {\n  // If it's not actually a leaf node for whatever reason, consider the evaluation result to be false.\n  if (\n    !leaf.property ||\n    !leaf.value ||\n    !leaf.predicateOperator ||\n    leaf.children.length > 0\n  ) {\n    return false;\n  }\n\n  const propertyValueProvider = targetingPropertyValueProviders.get(\n    leaf.property\n  );\n\n  if (!propertyValueProvider) {\n    return false;\n  }\n\n  const propertyValue = propertyValueProvider();\n\n  const comparisonValue =\n    leaf.value.boolValue ??\n    leaf.value.doubleValue ??\n    leaf.value.floatValue ??\n    leaf.value.intPairValue ??\n    leaf.value.intValue ??\n    leaf.value.longValue ??\n    leaf.value.stringValue;\n\n  // >= or <= operators can only operate on numbers (or proto enums)\n  if (\n    leaf.predicateOperator ===\n      ClientTargetingExpression_PredicateOperator.GREATER_THAN_OR_EQUAL_TO ||\n    leaf.predicateOperator ===\n      ClientTargetingExpression_PredicateOperator.LESS_THAN_OR_EQUAL_TO\n  ) {\n    if (typeof comparisonValue !== \"number\") {\n      return false;\n    }\n\n    if (typeof propertyValue !== \"number\") {\n      return false;\n    }\n\n    if (\n      leaf.predicateOperator ===\n      ClientTargetingExpression_PredicateOperator.LESS_THAN_OR_EQUAL_TO\n    ) {\n      return propertyValue <= comparisonValue;\n    } else {\n      return propertyValue >= comparisonValue;\n    }\n  }\n\n  if (\n    leaf.predicateOperator ===\n    ClientTargetingExpression_PredicateOperator.NOT_EQUAL\n  ) {\n    return propertyValue !== comparisonValue;\n  }\n\n  if (\n    leaf.predicateOperator === ClientTargetingExpression_PredicateOperator.EQUAL\n  ) {\n    return propertyValue === comparisonValue;\n  }\n\n  return false;\n}\n","(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(3);\nfunction isBrowserHeaders(arg) {\n    return typeof arg === \"object\" && typeof arg.headersMap === \"object\" && typeof arg.forEach === \"function\";\n}\nvar BrowserHeaders = (function () {\n    function BrowserHeaders(init, options) {\n        if (init === void 0) { init = {}; }\n        if (options === void 0) { options = { splitValues: false }; }\n        var _this = this;\n        this.headersMap = {};\n        if (init) {\n            if (typeof Headers !== \"undefined\" && init instanceof Headers) {\n                var keys = util_1.getHeaderKeys(init);\n                keys.forEach(function (key) {\n                    var values = util_1.getHeaderValues(init, key);\n                    values.forEach(function (value) {\n                        if (options.splitValues) {\n                            _this.append(key, util_1.splitHeaderValue(value));\n                        }\n                        else {\n                            _this.append(key, value);\n                        }\n                    });\n                });\n            }\n            else if (isBrowserHeaders(init)) {\n                init.forEach(function (key, values) {\n                    _this.append(key, values);\n                });\n            }\n            else if (typeof Map !== \"undefined\" && init instanceof Map) {\n                var asMap = init;\n                asMap.forEach(function (value, key) {\n                    _this.append(key, value);\n                });\n            }\n            else if (typeof init === \"string\") {\n                this.appendFromString(init);\n            }\n            else if (typeof init === \"object\") {\n                Object.getOwnPropertyNames(init).forEach(function (key) {\n                    var asObject = init;\n                    var values = asObject[key];\n                    if (Array.isArray(values)) {\n                        values.forEach(function (value) {\n                            _this.append(key, value);\n                        });\n                    }\n                    else {\n                        _this.append(key, values);\n                    }\n                });\n            }\n        }\n    }\n    BrowserHeaders.prototype.appendFromString = function (str) {\n        var pairs = str.split(\"\\r\\n\");\n        for (var i = 0; i < pairs.length; i++) {\n            var p = pairs[i];\n            var index = p.indexOf(\":\");\n            if (index > 0) {\n                var key = p.substring(0, index).trim();\n                var value = p.substring(index + 1).trim();\n                this.append(key, value);\n            }\n        }\n    };\n    BrowserHeaders.prototype.delete = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (value === undefined) {\n            delete this.headersMap[normalizedKey];\n        }\n        else {\n            var existing = this.headersMap[normalizedKey];\n            if (existing) {\n                var index = existing.indexOf(value);\n                if (index >= 0) {\n                    existing.splice(index, 1);\n                }\n                if (existing.length === 0) {\n                    delete this.headersMap[normalizedKey];\n                }\n            }\n        }\n    };\n    BrowserHeaders.prototype.append = function (key, value) {\n        var _this = this;\n        var normalizedKey = util_1.normalizeName(key);\n        if (!Array.isArray(this.headersMap[normalizedKey])) {\n            this.headersMap[normalizedKey] = [];\n        }\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayValue) {\n                _this.headersMap[normalizedKey].push(util_1.normalizeValue(arrayValue));\n            });\n        }\n        else {\n            this.headersMap[normalizedKey].push(util_1.normalizeValue(value));\n        }\n    };\n    BrowserHeaders.prototype.set = function (key, value) {\n        var normalizedKey = util_1.normalizeName(key);\n        if (Array.isArray(value)) {\n            var normalized_1 = [];\n            value.forEach(function (arrayValue) {\n                normalized_1.push(util_1.normalizeValue(arrayValue));\n            });\n            this.headersMap[normalizedKey] = normalized_1;\n        }\n        else {\n            this.headersMap[normalizedKey] = [util_1.normalizeValue(value)];\n        }\n    };\n    BrowserHeaders.prototype.has = function (key, value) {\n        var keyArray = this.headersMap[util_1.normalizeName(key)];\n        var keyExists = Array.isArray(keyArray);\n        if (!keyExists) {\n            return false;\n        }\n        if (value !== undefined) {\n            var normalizedValue = util_1.normalizeValue(value);\n            return keyArray.indexOf(normalizedValue) >= 0;\n        }\n        else {\n            return true;\n        }\n    };\n    BrowserHeaders.prototype.get = function (key) {\n        var values = this.headersMap[util_1.normalizeName(key)];\n        if (values !== undefined) {\n            return values.concat();\n        }\n        return [];\n    };\n    BrowserHeaders.prototype.forEach = function (callback) {\n        var _this = this;\n        Object.getOwnPropertyNames(this.headersMap)\n            .forEach(function (key) {\n            callback(key, _this.headersMap[key]);\n        }, this);\n    };\n    BrowserHeaders.prototype.toHeaders = function () {\n        if (typeof Headers !== \"undefined\") {\n            var headers_1 = new Headers();\n            this.forEach(function (key, values) {\n                values.forEach(function (value) {\n                    headers_1.append(key, value);\n                });\n            });\n            return headers_1;\n        }\n        else {\n            throw new Error(\"Headers class is not defined\");\n        }\n    };\n    return BrowserHeaders;\n}());\nexports.BrowserHeaders = BrowserHeaders;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserHeaders_1 = __webpack_require__(0);\nexports.BrowserHeaders = BrowserHeaders_1.BrowserHeaders;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction iterateHeaders(headers, callback) {\n    var iterator = headers[Symbol.iterator]();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value[0]);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeaders = iterateHeaders;\nfunction iterateHeadersKeys(headers, callback) {\n    var iterator = headers.keys();\n    var entry = iterator.next();\n    while (!entry.done) {\n        callback(entry.value);\n        entry = iterator.next();\n    }\n}\nexports.iterateHeadersKeys = iterateHeadersKeys;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterateHeaders_1 = __webpack_require__(2);\nfunction normalizeName(name) {\n    if (typeof name !== \"string\") {\n        name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError(\"Invalid character in header field name\");\n    }\n    return name.toLowerCase();\n}\nexports.normalizeName = normalizeName;\nfunction normalizeValue(value) {\n    if (typeof value !== \"string\") {\n        value = String(value);\n    }\n    return value;\n}\nexports.normalizeValue = normalizeValue;\nfunction getHeaderValues(headersAsNative, key) {\n    var headers = toWindowHeaders(headersAsNative);\n    if (headers instanceof Headers && headers.getAll) {\n        return headers.getAll(key);\n    }\n    var getValue = headers.get(key);\n    if (getValue && typeof getValue === \"string\") {\n        return [getValue];\n    }\n    return getValue;\n}\nexports.getHeaderValues = getHeaderValues;\nfunction toWindowHeaders(headersAsNative) {\n    return headersAsNative;\n}\nfunction getHeaderKeys(headersAsNative) {\n    var headers = toWindowHeaders(headersAsNative);\n    var asMap = {};\n    var keys = [];\n    if (headers.keys) {\n        iterateHeaders_1.iterateHeadersKeys(headers, function (key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else if (headers.forEach) {\n        headers.forEach(function (_, key) {\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    else {\n        iterateHeaders_1.iterateHeaders(headers, function (entry) {\n            var key = entry[0];\n            if (!asMap[key]) {\n                asMap[key] = true;\n                keys.push(key);\n            }\n        });\n    }\n    return keys;\n}\nexports.getHeaderKeys = getHeaderKeys;\nfunction splitHeaderValue(str) {\n    var values = [];\n    var commaSpaceValues = str.split(\", \");\n    commaSpaceValues.forEach(function (commaSpaceValue) {\n        commaSpaceValue.split(\",\").forEach(function (commaValue) {\n            values.push(commaValue);\n        });\n    });\n    return values;\n}\nexports.splitHeaderValue = splitHeaderValue;\n\n\n/***/ })\n/******/ ])));","// NOTE: GrpcWebImpl below is generated by ts-proto, extracted and put here for bundle size optimization purposes.\n// By default, ts-proto creates a GrpcWebImpl instance and a service client implementation for each service module.\n\n/* eslint-disable */\n\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport { BrowserHeaders } from \"browser-headers\";\n\ninterface UnaryMethodDefinitionishR\n  extends grpc.UnaryMethodDefinition<any, any> {\n  requestStream: any;\n  responseStream: any;\n}\n\nexport interface Metadata {\n  [key: string]: string;\n}\n\nexport type UnaryMethodDefinitionish = UnaryMethodDefinitionishR;\n\ninterface Rpc {\n  unary<T extends UnaryMethodDefinitionish>(\n    methodDesc: T,\n    request: any,\n    metadata: Metadata | undefined\n  ): Promise<any>;\n}\n\nexport class GrpcWebImpl {\n  constructor(\n    private host: string,\n    private options: {\n      transport?: grpc.TransportFactory;\n      debug?: boolean;\n      metadata?: Metadata;\n    }\n  ) {}\n\n  unary<T extends UnaryMethodDefinitionish>(\n    methodDesc: T,\n    _request: any,\n    metadata: Metadata | undefined\n  ): Promise<any> {\n    const request = { ..._request, ...methodDesc.requestType };\n    const maybeCombinedMetadata =\n      metadata && this.options.metadata\n        ? new BrowserHeaders({\n            ...this.options?.metadata,\n            ...metadata,\n          })\n        : metadata || this.options.metadata;\n    return new Promise((resolve, reject) => {\n      grpc.unary(methodDesc, {\n        request,\n        host: this.host,\n        metadata: maybeCombinedMetadata,\n        transport: this.options.transport,\n        debug: this.options.debug,\n        onEnd: function (response) {\n          if (response.status === grpc.Code.OK) {\n            resolve(response.message);\n          } else {\n            const err = new Error(response.statusMessage) as any;\n            err.code = response.status;\n            err.metadata = response.trailers;\n            reject(err);\n          }\n        },\n      });\n    });\n  }\n}\n","import { ClientTargetingExpression_Property } from \"../generated/cdp/cof/config_result\";\nimport { registerPropertyValueProvider } from \"../targeting_evaluation/evaluator\";\nimport { GrpcWebImpl, Metadata } from \"./grpcWeb\";\n\n// key to store library context on window object\nconst CONTEXT_KEY = Symbol(\"context key\");\n\ndeclare global {\n  interface Window {\n    [CONTEXT_KEY]: ConfigsClientContext | undefined;\n  }\n}\n\n/**\n * Configs client settings object.\n */\nexport interface ConfigsClientSettings {\n  // A server that hosts Cirumstances Engine:\n  // https://switchboard.sc-corp.net/#/services/cof-engine\n  // and A/B Exposure service:\n  // https://switchboard.sc-corp.net/#/services/exposure-service\n  host: string;\n\n  // common headers to add to each gRPC call\n  metadata?: Metadata;\n}\n\n/**\n * Context object that is created as result of initConfigsClient() call.\n */\nexport interface ConfigsClientContext {\n  // settigns passed to initConfigsClient()\n  settings: ConfigsClientSettings;\n\n  // gRPC web client\n  rpc: GrpcWebImpl;\n}\n\n// default settings\nconst DEFAULT_SETTINGS: ConfigsClientSettings = {\n  host: \"https://aws.api.snapchat.com\",\n};\n\n// store settings on a global object to avoid issues,\n// when for some reason this modules is loaded more than once\nif (typeof window !== \"undefined\") {\n  Object.defineProperty(window, CONTEXT_KEY, {\n    enumerable: false,\n    writable: true,\n  });\n}\n\n/**\n * Stores settings in globally.\n * @internal\n */\nexport function setContext(settings: ConfigsClientContext): void {\n  if (typeof window !== \"undefined\") {\n    window[CONTEXT_KEY] = settings;\n  }\n}\n\n/**\n * Reads previously stored settings.\n */\nfunction getContext(): ConfigsClientContext | undefined {\n  if (typeof window !== \"undefined\") {\n    return window[CONTEXT_KEY];\n  }\n}\n\n/**\n * Returns settings object previously initialized with initConfigsClient().\n * @internal\n */\nexport function getContextValidated(): ConfigsClientContext {\n  const context = getContext();\n  if (!context) {\n    throw new Error(\"initConfigsClient() has to be called on app startup\");\n  }\n  return context;\n}\n\n/**\n * Initializes COF configs client.\n * The function has to be called once on app startup.\n */\nexport function initConfigsClient(\n  settings: ConfigsClientSettings = DEFAULT_SETTINGS\n): void {\n  const existingContext = getContext();\n  if (existingContext) {\n    // there is a chance that bundlers include initConfigsClient() into different chunks,\n    // we are good if the same settigs object is passed,\n    // otherwise throw an error;\n    // JSON.stringify approach is simple and good to catch exactly that issue:\n    // the same settings objects are created in the same way in different chunks\n    if (JSON.stringify(settings) !== JSON.stringify(existingContext.settings)) {\n      throw new Error(\"initConfigsClient() has already been called\");\n    }\n  } else {\n    setContext({\n      settings,\n      rpc: new GrpcWebImpl(settings.host, { metadata: settings.metadata }),\n    });\n\n    // Add default providers for browser height and width. Can be overrided by re-registering these properties.\n    registerPropertyValueProvider(\n      ClientTargetingExpression_Property.WEB_SCREEN_HEIGHT,\n      () => window.innerHeight\n    );\n    registerPropertyValueProvider(\n      ClientTargetingExpression_Property.WEB_SCREEN_WIDTH,\n      () => window.innerWidth\n    );\n  }\n}\n","import type { BenchmarkRequest } from \"../generated/cdp/cof/benchmark\";\nimport { BenchmarkName } from \"../generated/cdp/cof/benchmark_name\";\nimport {\n  ConfigTargetingRequest,\n  DeepPartial,\n} from \"../generated/cdp/cof/config_request\";\nimport { ConfigTargetingResponse } from \"../generated/cdp/cof/config_response\";\nimport type {\n  ClientTargetingExpression,\n  ConfigResult,\n} from \"../generated/cdp/cof/config_result\";\nimport {\n  ClientTargetingExpression_Operator as ClientTargetingExpressionOperator,\n  ClientTargetingExpression_PredicateOperator as ClientTargetingExpressionPredicateOperator,\n  ClientTargetingExpression_Property as ClientTargetingExpressionProperty,\n  ConfigResult_ServePlatform as ConfigResultServePlatform,\n} from \"../generated/cdp/cof/config_result\";\nimport { Namespace } from \"../generated/cdp/cof/namespace\";\nimport { Ruid_Type as RuidType } from \"../generated/common/ruid\";\nimport type { Value } from \"../generated/common/value\";\nimport type { UnaryMethodDefinitionish, Metadata } from \"./grpcWeb\";\nimport { getContextValidated } from \"./initConfigsClient\";\n\nexport {\n  ConfigTargetingRequest,\n  ConfigTargetingResponse,\n  Namespace,\n  RuidType,\n  ConfigResult,\n  BenchmarkRequest,\n  BenchmarkName,\n  Value,\n  ClientTargetingExpression,\n  ClientTargetingExpressionOperator,\n  ClientTargetingExpressionProperty,\n  ClientTargetingExpressionPredicateOperator,\n  ConfigResultServePlatform,\n};\n\nexport const CircumstancesServiceTargetingQueryDesc: UnaryMethodDefinitionish =\n  {\n    methodName: \"targetingQuery\",\n    service: {\n      serviceName: \"snapchat.cdp.cof.CircumstancesService\",\n    },\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n      serializeBinary() {\n        return ConfigTargetingRequest.encode(this).finish();\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any,\n    responseType: {\n      deserializeBinary(data: Uint8Array) {\n        return {\n          ...ConfigTargetingResponse.decode(data),\n          toObject() {\n            return this;\n          },\n        };\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any,\n  };\n\n/**\n * Fetches COF configs.\n * Wrapper around https://github.sc-corp.net/Snapchat/pb_schema/blob/507ec1a8029de217836e29778ddd95ab8b5b8de4/proto/cdp/cof/circumstance_service.proto#L18\n **/\nexport function targetingQuery(\n  request: DeepPartial<ConfigTargetingRequest>,\n  metadata?: Metadata\n): Promise<ConfigTargetingResponse> {\n  const { rpc } = getContextValidated();\n  return rpc.unary(\n    CircumstancesServiceTargetingQueryDesc,\n    ConfigTargetingRequest.fromPartial(request),\n    metadata\n  );\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.ab.common\";\n\nexport interface Guid {\n  /** The numeric value of the guid. */\n  value: number;\n}\n\nconst baseGuid: object = { value: 0 };\n\nexport const Guid = {\n  encode(message: Guid, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(8).uint64(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Guid {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGuid } as Guid;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Guid>): Guid {\n    const message = { ...baseGuid } as Guid;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"snapchat.cdp.cof\";\n\n/** Steps for AB process. */\nexport enum AbStep {\n  USER_WHITELISTED = 0,\n  USER_GROUP_WHITELISTED = 1,\n  FILTER_CONDITIONS = 2,\n  SLICE_RANGE = 3,\n  TRAFFIC_ALLOCATED = 4,\n  UNRECOGNIZED = -1,\n}\n\n/** Steps for COF process. */\nexport enum CofStep {\n  VALIDATE_REQUEST = 0,\n  REQUEST_ATLAS = 1,\n  BUILD_TARGETING_INFO = 2,\n  QUERY_INDEX = 3,\n  REQUEST_AB = 4,\n  UNRECOGNIZED = -1,\n}\n\nexport interface AbStepInfo {\n  abStep: AbStep;\n  info: string;\n}\n\nexport interface CofStepInfo {\n  cofStep: CofStep;\n  info: string;\n}\n\nexport interface DebugTrace {\n  /** The last reached COF step if the requested config is not returned. */\n  lastCofStep: CofStepInfo | undefined;\n  /** The last reached AB step if the requested config is not returned from AB. */\n  lastAbStep: AbStepInfo | undefined;\n  /**\n   * Budget group ID that the user is assigned to.\n   * This field will be populated if a Budget A/B is retrieved and the user has a classical BGID.\n   * Some users fall into superposition BGID and do not have classical BGID.\n   */\n  budgetGroupId: number;\n}\n\nconst baseAbStepInfo: object = { abStep: 0, info: \"\" };\n\nexport const AbStepInfo = {\n  encode(\n    message: AbStepInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.abStep !== 0) {\n      writer.uint32(8).int32(message.abStep);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(18).string(message.info);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): AbStepInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseAbStepInfo } as AbStepInfo;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abStep = reader.int32() as any;\n          break;\n        case 2:\n          message.info = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<AbStepInfo>): AbStepInfo {\n    const message = { ...baseAbStepInfo } as AbStepInfo;\n    if (object.abStep !== undefined && object.abStep !== null) {\n      message.abStep = object.abStep;\n    } else {\n      message.abStep = 0;\n    }\n    if (object.info !== undefined && object.info !== null) {\n      message.info = object.info;\n    } else {\n      message.info = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseCofStepInfo: object = { cofStep: 0, info: \"\" };\n\nexport const CofStepInfo = {\n  encode(\n    message: CofStepInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.cofStep !== 0) {\n      writer.uint32(8).int32(message.cofStep);\n    }\n    if (message.info !== \"\") {\n      writer.uint32(18).string(message.info);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): CofStepInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseCofStepInfo } as CofStepInfo;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.cofStep = reader.int32() as any;\n          break;\n        case 2:\n          message.info = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<CofStepInfo>): CofStepInfo {\n    const message = { ...baseCofStepInfo } as CofStepInfo;\n    if (object.cofStep !== undefined && object.cofStep !== null) {\n      message.cofStep = object.cofStep;\n    } else {\n      message.cofStep = 0;\n    }\n    if (object.info !== undefined && object.info !== null) {\n      message.info = object.info;\n    } else {\n      message.info = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseDebugTrace: object = { budgetGroupId: 0 };\n\nexport const DebugTrace = {\n  encode(\n    message: DebugTrace,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.lastCofStep !== undefined) {\n      CofStepInfo.encode(\n        message.lastCofStep,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    if (message.lastAbStep !== undefined) {\n      AbStepInfo.encode(message.lastAbStep, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.budgetGroupId !== 0) {\n      writer.uint32(24).uint32(message.budgetGroupId);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DebugTrace {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDebugTrace } as DebugTrace;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.lastCofStep = CofStepInfo.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.lastAbStep = AbStepInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.budgetGroupId = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<DebugTrace>): DebugTrace {\n    const message = { ...baseDebugTrace } as DebugTrace;\n    if (object.lastCofStep !== undefined && object.lastCofStep !== null) {\n      message.lastCofStep = CofStepInfo.fromPartial(object.lastCofStep);\n    } else {\n      message.lastCofStep = undefined;\n    }\n    if (object.lastAbStep !== undefined && object.lastAbStep !== null) {\n      message.lastAbStep = AbStepInfo.fromPartial(object.lastAbStep);\n    } else {\n      message.lastAbStep = undefined;\n    }\n    if (object.budgetGroupId !== undefined && object.budgetGroupId !== null) {\n      message.budgetGroupId = object.budgetGroupId;\n    } else {\n      message.budgetGroupId = 0;\n    }\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n */\nexport interface FileDescriptorSet {\n  file: FileDescriptorProto[];\n}\n\n/** Describes a complete .proto file. */\nexport interface FileDescriptorProto {\n  /** file name, relative to root of source tree */\n  name: string;\n  /** e.g. \"foo\", \"foo.bar\", etc. */\n  package: string;\n  /** Names of files imported by this file. */\n  dependency: string[];\n  /** Indexes of the public imported files in the dependency list above. */\n  publicDependency: number[];\n  /**\n   * Indexes of the weak imported files in the dependency list.\n   * For Google-internal migration only. Do not use.\n   */\n  weakDependency: number[];\n  /** All top-level definitions in this file. */\n  messageType: DescriptorProto[];\n  enumType: EnumDescriptorProto[];\n  service: ServiceDescriptorProto[];\n  extension: FieldDescriptorProto[];\n  options: FileOptions | undefined;\n  /**\n   * This field contains optional information about the original source code.\n   * You may safely remove this entire field without harming runtime\n   * functionality of the descriptors -- the information is needed only by\n   * development tools.\n   */\n  sourceCodeInfo: SourceCodeInfo | undefined;\n  /**\n   * The syntax of the proto file.\n   * The supported values are \"proto2\" and \"proto3\".\n   */\n  syntax: string;\n}\n\n/** Describes a message type. */\nexport interface DescriptorProto {\n  name: string;\n  field: FieldDescriptorProto[];\n  extension: FieldDescriptorProto[];\n  nestedType: DescriptorProto[];\n  enumType: EnumDescriptorProto[];\n  extensionRange: DescriptorProto_ExtensionRange[];\n  oneofDecl: OneofDescriptorProto[];\n  options: MessageOptions | undefined;\n  reservedRange: DescriptorProto_ReservedRange[];\n  /**\n   * Reserved field names, which may not be used by fields in the same message.\n   * A given name may only be reserved once.\n   */\n  reservedName: string[];\n}\n\nexport interface DescriptorProto_ExtensionRange {\n  /** Inclusive. */\n  start: number;\n  /** Exclusive. */\n  end: number;\n  options: ExtensionRangeOptions | undefined;\n}\n\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n */\nexport interface DescriptorProto_ReservedRange {\n  /** Inclusive. */\n  start: number;\n  /** Exclusive. */\n  end: number;\n}\n\nexport interface ExtensionRangeOptions {\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\n/** Describes a field within a message. */\nexport interface FieldDescriptorProto {\n  name: string;\n  number: number;\n  label: FieldDescriptorProto_Label;\n  /**\n   * If type_name is set, this need not be set.  If both this and type_name\n   * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n   */\n  type: FieldDescriptorProto_Type;\n  /**\n   * For message and enum types, this is the name of the type.  If the name\n   * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n   * rules are used to find the type (i.e. first the nested types within this\n   * message are searched, then within the parent, on up to the root\n   * namespace).\n   */\n  typeName: string;\n  /**\n   * For extensions, this is the name of the type being extended.  It is\n   * resolved in the same manner as type_name.\n   */\n  extendee: string;\n  /**\n   * For numeric types, contains the original text representation of the value.\n   * For booleans, \"true\" or \"false\".\n   * For strings, contains the default text contents (not escaped in any way).\n   * For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n   * TODO(kenton):  Base-64 encode?\n   */\n  defaultValue: string;\n  /**\n   * If set, gives the index of a oneof in the containing type's oneof_decl\n   * list.  This field is a member of that oneof.\n   */\n  oneofIndex: number;\n  /**\n   * JSON name of this field. The value is set by protocol compiler. If the\n   * user has set a \"json_name\" option on this field, that option's value\n   * will be used. Otherwise, it's deduced from the field's name by converting\n   * it to camelCase.\n   */\n  jsonName: string;\n  options: FieldOptions | undefined;\n  /**\n   * If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n   * tracks presence regardless of field type.\n   *\n   * When proto3_optional is true, this field must be belong to a oneof to\n   * signal to old proto3 clients that presence is tracked for this field. This\n   * oneof is known as a \"synthetic\" oneof, and this field must be its sole\n   * member (each proto3 optional field gets its own synthetic oneof). Synthetic\n   * oneofs exist in the descriptor only, and do not generate any API. Synthetic\n   * oneofs must be ordered after all \"real\" oneofs.\n   *\n   * For message fields, proto3_optional doesn't create any semantic change,\n   * since non-repeated message fields always track presence. However it still\n   * indicates the semantic detail of whether the user wrote \"optional\" or not.\n   * This can be useful for round-tripping the .proto file. For consistency we\n   * give message fields a synthetic oneof also, even though it is not required\n   * to track presence. This is especially important because the parser can't\n   * tell if a field is a message or an enum, so it must always create a\n   * synthetic oneof.\n   *\n   * Proto2 optional fields do not set this flag, because they already indicate\n   * optional with `LABEL_OPTIONAL`.\n   */\n  proto3Optional: boolean;\n}\n\nexport enum FieldDescriptorProto_Type {\n  /**\n   * TYPE_DOUBLE - 0 is reserved for errors.\n   * Order is weird for historical reasons.\n   */\n  TYPE_DOUBLE = 1,\n  TYPE_FLOAT = 2,\n  /**\n   * TYPE_INT64 - Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n   * negative values are likely.\n   */\n  TYPE_INT64 = 3,\n  TYPE_UINT64 = 4,\n  /**\n   * TYPE_INT32 - Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n   * negative values are likely.\n   */\n  TYPE_INT32 = 5,\n  TYPE_FIXED64 = 6,\n  TYPE_FIXED32 = 7,\n  TYPE_BOOL = 8,\n  TYPE_STRING = 9,\n  /**\n   * TYPE_GROUP - Tag-delimited aggregate.\n   * Group type is deprecated and not supported in proto3. However, Proto3\n   * implementations should still be able to parse the group wire format and\n   * treat group fields as unknown fields.\n   */\n  TYPE_GROUP = 10,\n  /** TYPE_MESSAGE - Length-delimited aggregate. */\n  TYPE_MESSAGE = 11,\n  /** TYPE_BYTES - New in version 2. */\n  TYPE_BYTES = 12,\n  TYPE_UINT32 = 13,\n  TYPE_ENUM = 14,\n  TYPE_SFIXED32 = 15,\n  TYPE_SFIXED64 = 16,\n  /** TYPE_SINT32 - Uses ZigZag encoding. */\n  TYPE_SINT32 = 17,\n  /** TYPE_SINT64 - Uses ZigZag encoding. */\n  TYPE_SINT64 = 18,\n  UNRECOGNIZED = -1,\n}\n\nexport enum FieldDescriptorProto_Label {\n  /** LABEL_OPTIONAL - 0 is reserved for errors */\n  LABEL_OPTIONAL = 1,\n  LABEL_REQUIRED = 2,\n  LABEL_REPEATED = 3,\n  UNRECOGNIZED = -1,\n}\n\n/** Describes a oneof. */\nexport interface OneofDescriptorProto {\n  name: string;\n  options: OneofOptions | undefined;\n}\n\n/** Describes an enum type. */\nexport interface EnumDescriptorProto {\n  name: string;\n  value: EnumValueDescriptorProto[];\n  options: EnumOptions | undefined;\n  /**\n   * Range of reserved numeric values. Reserved numeric values may not be used\n   * by enum values in the same enum declaration. Reserved ranges may not\n   * overlap.\n   */\n  reservedRange: EnumDescriptorProto_EnumReservedRange[];\n  /**\n   * Reserved enum value names, which may not be reused. A given name may only\n   * be reserved once.\n   */\n  reservedName: string[];\n}\n\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n */\nexport interface EnumDescriptorProto_EnumReservedRange {\n  /** Inclusive. */\n  start: number;\n  /** Inclusive. */\n  end: number;\n}\n\n/** Describes a value within an enum. */\nexport interface EnumValueDescriptorProto {\n  name: string;\n  number: number;\n  options: EnumValueOptions | undefined;\n}\n\n/** Describes a service. */\nexport interface ServiceDescriptorProto {\n  name: string;\n  method: MethodDescriptorProto[];\n  options: ServiceOptions | undefined;\n}\n\n/** Describes a method of a service. */\nexport interface MethodDescriptorProto {\n  name: string;\n  /**\n   * Input and output type names.  These are resolved in the same way as\n   * FieldDescriptorProto.type_name, but must refer to a message type.\n   */\n  inputType: string;\n  outputType: string;\n  options: MethodOptions | undefined;\n  /** Identifies if client streams multiple client messages */\n  clientStreaming: boolean;\n  /** Identifies if server streams multiple server messages */\n  serverStreaming: boolean;\n}\n\nexport interface FileOptions {\n  /**\n   * Sets the Java package where classes generated from this .proto will be\n   * placed.  By default, the proto package is used, but this is often\n   * inappropriate because proto packages do not normally start with backwards\n   * domain names.\n   */\n  javaPackage: string;\n  /**\n   * If set, all the classes from the .proto file are wrapped in a single\n   * outer class with the given name.  This applies to both Proto1\n   * (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n   * a .proto always translates to a single class, but you may want to\n   * explicitly choose the class name).\n   */\n  javaOuterClassname: string;\n  /**\n   * If set true, then the Java code generator will generate a separate .java\n   * file for each top-level message, enum, and service defined in the .proto\n   * file.  Thus, these types will *not* be nested inside the outer class\n   * named by java_outer_classname.  However, the outer class will still be\n   * generated to contain the file's getDescriptor() method as well as any\n   * top-level extensions defined in the file.\n   */\n  javaMultipleFiles: boolean;\n  /**\n   * This option does nothing.\n   *\n   * @deprecated\n   */\n  javaGenerateEqualsAndHash: boolean;\n  /**\n   * If set true, then the Java2 code generator will generate code that\n   * throws an exception whenever an attempt is made to assign a non-UTF-8\n   * byte sequence to a string field.\n   * Message reflection will do the same.\n   * However, an extension field still accepts non-UTF-8 byte sequences.\n   * This option has no effect on when used with the lite runtime.\n   */\n  javaStringCheckUtf8: boolean;\n  optimizeFor: FileOptions_OptimizeMode;\n  /**\n   * Sets the Go package where structs generated from this .proto will be\n   * placed. If omitted, the Go package will be derived from the following:\n   *   - The basename of the package import path, if provided.\n   *   - Otherwise, the package statement in the .proto file, if present.\n   *   - Otherwise, the basename of the .proto file, without extension.\n   */\n  goPackage: string;\n  /**\n   * Should generic services be generated in each language?  \"Generic\" services\n   * are not specific to any particular RPC system.  They are generated by the\n   * main code generators in each language (without additional plugins).\n   * Generic services were the only kind of service generation supported by\n   * early versions of google.protobuf.\n   *\n   * Generic services are now considered deprecated in favor of using plugins\n   * that generate code specific to your particular RPC system.  Therefore,\n   * these default to false.  Old code which depends on generic services should\n   * explicitly set them to true.\n   */\n  ccGenericServices: boolean;\n  javaGenericServices: boolean;\n  pyGenericServices: boolean;\n  phpGenericServices: boolean;\n  /**\n   * Is this file deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for everything in the file, or it will be completely ignored; in the very\n   * least, this is a formalization for deprecating files.\n   */\n  deprecated: boolean;\n  /**\n   * Enables the use of arenas for the proto messages in this file. This applies\n   * only to generated classes for C++.\n   */\n  ccEnableArenas: boolean;\n  /**\n   * Sets the objective c class prefix which is prepended to all objective c\n   * generated classes from this .proto. There is no default.\n   */\n  objcClassPrefix: string;\n  /** Namespace for generated classes; defaults to the package. */\n  csharpNamespace: string;\n  /**\n   * By default Swift generators will take the proto package and CamelCase it\n   * replacing '.' with underscore and use that to prefix the types/symbols\n   * defined. When this options is provided, they will use this value instead\n   * to prefix the types/symbols defined.\n   */\n  swiftPrefix: string;\n  /**\n   * Sets the php class prefix which is prepended to all php generated classes\n   * from this .proto. Default is empty.\n   */\n  phpClassPrefix: string;\n  /**\n   * Use this option to change the namespace of php generated classes. Default\n   * is empty. When this option is empty, the package name will be used for\n   * determining the namespace.\n   */\n  phpNamespace: string;\n  /**\n   * Use this option to change the namespace of php generated metadata classes.\n   * Default is empty. When this option is empty, the proto file name will be\n   * used for determining the namespace.\n   */\n  phpMetadataNamespace: string;\n  /**\n   * Use this option to change the package of ruby generated classes. Default\n   * is empty. When this option is not set, the package name will be used for\n   * determining the ruby package.\n   */\n  rubyPackage: string;\n  /**\n   * The parser stores options it doesn't recognize here.\n   * See the documentation for the \"Options\" section above.\n   */\n  uninterpretedOption: UninterpretedOption[];\n}\n\n/** Generated classes can be optimized for speed or code size. */\nexport enum FileOptions_OptimizeMode {\n  /** SPEED - Generate complete code for parsing, serialization, */\n  SPEED = 1,\n  /** CODE_SIZE - etc. */\n  CODE_SIZE = 2,\n  /** LITE_RUNTIME - Generate code using MessageLite and the lite runtime. */\n  LITE_RUNTIME = 3,\n  UNRECOGNIZED = -1,\n}\n\nexport interface MessageOptions {\n  /**\n   * Set true to use the old proto1 MessageSet wire format for extensions.\n   * This is provided for backwards-compatibility with the MessageSet wire\n   * format.  You should not use this for any other reason:  It's less\n   * efficient, has fewer features, and is more complicated.\n   *\n   * The message must be defined exactly as follows:\n   *   message Foo {\n   *     option message_set_wire_format = true;\n   *     extensions 4 to max;\n   *   }\n   * Note that the message cannot have any defined fields; MessageSets only\n   * have extensions.\n   *\n   * All extensions of your type must be singular messages; e.g. they cannot\n   * be int32s, enums, or repeated messages.\n   *\n   * Because this is an option, the above two restrictions are not enforced by\n   * the protocol compiler.\n   */\n  messageSetWireFormat: boolean;\n  /**\n   * Disables the generation of the standard \"descriptor()\" accessor, which can\n   * conflict with a field of the same name.  This is meant to make migration\n   * from proto1 easier; new code should avoid fields named \"descriptor\".\n   */\n  noStandardDescriptorAccessor: boolean;\n  /**\n   * Is this message deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the message, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating messages.\n   */\n  deprecated: boolean;\n  /**\n   * Whether the message is an automatically generated map entry type for the\n   * maps field.\n   *\n   * For maps fields:\n   *     map<KeyType, ValueType> map_field = 1;\n   * The parsed descriptor looks like:\n   *     message MapFieldEntry {\n   *         option map_entry = true;\n   *         optional KeyType key = 1;\n   *         optional ValueType value = 2;\n   *     }\n   *     repeated MapFieldEntry map_field = 1;\n   *\n   * Implementations may choose not to generate the map_entry=true message, but\n   * use a native map in the target language to hold the keys and values.\n   * The reflection APIs in such implementations still need to work as\n   * if the field is a repeated message field.\n   *\n   * NOTE: Do not set the option in .proto files. Always use the maps syntax\n   * instead. The option should only be implicitly set by the proto compiler\n   * parser.\n   */\n  mapEntry: boolean;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface FieldOptions {\n  /**\n   * The ctype option instructs the C++ code generator to use a different\n   * representation of the field than it normally would.  See the specific\n   * options below.  This option is not yet implemented in the open source\n   * release -- sorry, we'll try to include it in a future version!\n   */\n  ctype: FieldOptions_CType;\n  /**\n   * The packed option can be enabled for repeated primitive fields to enable\n   * a more efficient representation on the wire. Rather than repeatedly\n   * writing the tag and type for each element, the entire array is encoded as\n   * a single length-delimited blob. In proto3, only explicit setting it to\n   * false will avoid using packed encoding.\n   */\n  packed: boolean;\n  /**\n   * The jstype option determines the JavaScript type used for values of the\n   * field.  The option is permitted only for 64 bit integral and fixed types\n   * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n   * is represented as JavaScript string, which avoids loss of precision that\n   * can happen when a large value is converted to a floating point JavaScript.\n   * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n   * use the JavaScript \"number\" type.  The behavior of the default option\n   * JS_NORMAL is implementation dependent.\n   *\n   * This option is an enum to permit additional types to be added, e.g.\n   * goog.math.Integer.\n   */\n  jstype: FieldOptions_JSType;\n  /**\n   * Should this field be parsed lazily?  Lazy applies only to message-type\n   * fields.  It means that when the outer message is initially parsed, the\n   * inner message's contents will not be parsed but instead stored in encoded\n   * form.  The inner message will actually be parsed when it is first accessed.\n   *\n   * This is only a hint.  Implementations are free to choose whether to use\n   * eager or lazy parsing regardless of the value of this option.  However,\n   * setting this option true suggests that the protocol author believes that\n   * using lazy parsing on this field is worth the additional bookkeeping\n   * overhead typically needed to implement it.\n   *\n   * This option does not affect the public interface of any generated code;\n   * all method signatures remain the same.  Furthermore, thread-safety of the\n   * interface is not affected by this option; const methods remain safe to\n   * call from multiple threads concurrently, while non-const methods continue\n   * to require exclusive access.\n   *\n   *\n   * Note that implementations may choose not to check required fields within\n   * a lazy sub-message.  That is, calling IsInitialized() on the outer message\n   * may return true even if the inner message has missing required fields.\n   * This is necessary because otherwise the inner message would have to be\n   * parsed in order to perform the check, defeating the purpose of lazy\n   * parsing.  An implementation which chooses not to check required fields\n   * must be consistent about it.  That is, for any particular sub-message, the\n   * implementation must either *always* check its required fields, or *never*\n   * check its required fields, regardless of whether or not the message has\n   * been parsed.\n   */\n  lazy: boolean;\n  /**\n   * Is this field deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for accessors, or it will be completely ignored; in the very least, this\n   * is a formalization for deprecating fields.\n   */\n  deprecated: boolean;\n  /** For Google-internal migration only. Do not use. */\n  weak: boolean;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport enum FieldOptions_CType {\n  /** STRING - Default mode. */\n  STRING = 0,\n  CORD = 1,\n  STRING_PIECE = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport enum FieldOptions_JSType {\n  /** JS_NORMAL - Use the default type. */\n  JS_NORMAL = 0,\n  /** JS_STRING - Use JavaScript strings. */\n  JS_STRING = 1,\n  /** JS_NUMBER - Use JavaScript numbers. */\n  JS_NUMBER = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport interface OneofOptions {\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface EnumOptions {\n  /**\n   * Set this option to true to allow mapping different tag names to the same\n   * value.\n   */\n  allowAlias: boolean;\n  /**\n   * Is this enum deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the enum, or it will be completely ignored; in the very least, this\n   * is a formalization for deprecating enums.\n   */\n  deprecated: boolean;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface EnumValueOptions {\n  /**\n   * Is this enum value deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the enum value, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating enum values.\n   */\n  deprecated: boolean;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface ServiceOptions {\n  /**\n   * Is this service deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the service, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating services.\n   */\n  deprecated: boolean;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface MethodOptions {\n  /**\n   * Is this method deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the method, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating methods.\n   */\n  deprecated: boolean;\n  idempotencyLevel: MethodOptions_IdempotencyLevel;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n */\nexport enum MethodOptions_IdempotencyLevel {\n  IDEMPOTENCY_UNKNOWN = 0,\n  /** NO_SIDE_EFFECTS - implies idempotent */\n  NO_SIDE_EFFECTS = 1,\n  /** IDEMPOTENT - idempotent, but may have side effects */\n  IDEMPOTENT = 2,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore,\n * options protos in descriptor objects (e.g. returned by Descriptor::options(),\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n */\nexport interface UninterpretedOption {\n  name: UninterpretedOption_NamePart[];\n  /**\n   * The value of the uninterpreted option, in whatever type the tokenizer\n   * identified it as during parsing. Exactly one of these should be set.\n   */\n  identifierValue: string;\n  positiveIntValue: number;\n  negativeIntValue: number;\n  doubleValue: number;\n  stringValue: Uint8Array;\n  aggregateValue: string;\n}\n\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n * \"foo.(bar.baz).qux\".\n */\nexport interface UninterpretedOption_NamePart {\n  namePart: string;\n  isExtension: boolean;\n}\n\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n */\nexport interface SourceCodeInfo {\n  /**\n   * A Location identifies a piece of source code in a .proto file which\n   * corresponds to a particular definition.  This information is intended\n   * to be useful to IDEs, code indexers, documentation generators, and similar\n   * tools.\n   *\n   * For example, say we have a file like:\n   *   message Foo {\n   *     optional string foo = 1;\n   *   }\n   * Let's look at just the field definition:\n   *   optional string foo = 1;\n   *   ^       ^^     ^^  ^  ^^^\n   *   a       bc     de  f  ghi\n   * We have the following locations:\n   *   span   path               represents\n   *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n   *\n   * Notes:\n   * - A location may refer to a repeated field itself (i.e. not to any\n   *   particular index within it).  This is used whenever a set of elements are\n   *   logically enclosed in a single code segment.  For example, an entire\n   *   extend block (possibly containing multiple extension definitions) will\n   *   have an outer location whose path refers to the \"extensions\" repeated\n   *   field without an index.\n   * - Multiple locations may have the same path.  This happens when a single\n   *   logical declaration is spread out across multiple places.  The most\n   *   obvious example is the \"extend\" block again -- there may be multiple\n   *   extend blocks in the same scope, each of which will have the same path.\n   * - A location's span is not always a subset of its parent's span.  For\n   *   example, the \"extendee\" of an extension declaration appears at the\n   *   beginning of the \"extend\" block and is shared by all extensions within\n   *   the block.\n   * - Just because a location's span is a subset of some other location's span\n   *   does not mean that it is a descendant.  For example, a \"group\" defines\n   *   both a type and a field in a single declaration.  Thus, the locations\n   *   corresponding to the type and field and their components will overlap.\n   * - Code which tries to interpret locations should probably be designed to\n   *   ignore those that it doesn't understand, as more types of locations could\n   *   be recorded in the future.\n   */\n  location: SourceCodeInfo_Location[];\n}\n\nexport interface SourceCodeInfo_Location {\n  /**\n   * Identifies which part of the FileDescriptorProto was defined at this\n   * location.\n   *\n   * Each element is a field number or an index.  They form a path from\n   * the root FileDescriptorProto to the place where the definition.  For\n   * example, this path:\n   *   [ 4, 3, 2, 7, 1 ]\n   * refers to:\n   *   file.message_type(3)  // 4, 3\n   *       .field(7)         // 2, 7\n   *       .name()           // 1\n   * This is because FileDescriptorProto.message_type has field number 4:\n   *   repeated DescriptorProto message_type = 4;\n   * and DescriptorProto.field has field number 2:\n   *   repeated FieldDescriptorProto field = 2;\n   * and FieldDescriptorProto.name has field number 1:\n   *   optional string name = 1;\n   *\n   * Thus, the above path gives the location of a field name.  If we removed\n   * the last element:\n   *   [ 4, 3, 2, 7 ]\n   * this path refers to the whole field declaration (from the beginning\n   * of the label to the terminating semicolon).\n   */\n  path: number[];\n  /**\n   * Always has exactly three or four elements: start line, start column,\n   * end line (optional, otherwise assumed same as start line), end column.\n   * These are packed into a single field for efficiency.  Note that line\n   * and column numbers are zero-based -- typically you will want to add\n   * 1 to each before displaying to a user.\n   */\n  span: number[];\n  /**\n   * If this SourceCodeInfo represents a complete declaration, these are any\n   * comments appearing before and after the declaration which appear to be\n   * attached to the declaration.\n   *\n   * A series of line comments appearing on consecutive lines, with no other\n   * tokens appearing on those lines, will be treated as a single comment.\n   *\n   * leading_detached_comments will keep paragraphs of comments that appear\n   * before (but not connected to) the current element. Each paragraph,\n   * separated by empty lines, will be one comment element in the repeated\n   * field.\n   *\n   * Only the comment content is provided; comment markers (e.g. //) are\n   * stripped out.  For block comments, leading whitespace and an asterisk\n   * will be stripped from the beginning of each line other than the first.\n   * Newlines are included in the output.\n   *\n   * Examples:\n   *\n   *   optional int32 foo = 1;  // Comment attached to foo.\n   *   // Comment attached to bar.\n   *   optional int32 bar = 2;\n   *\n   *   optional string baz = 3;\n   *   // Comment attached to baz.\n   *   // Another line attached to baz.\n   *\n   *   // Comment attached to qux.\n   *   //\n   *   // Another line attached to qux.\n   *   optional double qux = 4;\n   *\n   *   // Detached comment for corge. This is not leading or trailing comments\n   *   // to qux or corge because there are blank lines separating it from\n   *   // both.\n   *\n   *   // Detached comment for corge paragraph 2.\n   *\n   *   optional string corge = 5;\n   *   /* Block comment attached\n   *    * to corge.  Leading asterisks\n   *    * will be removed. * /\n   *   /* Block comment attached to\n   *    * grault. * /\n   *   optional int32 grault = 6;\n   *\n   *   // ignored detached comments.\n   */\n  leadingComments: string;\n  trailingComments: string;\n  leadingDetachedComments: string[];\n}\n\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file, but may contain references to different source .proto files.\n */\nexport interface GeneratedCodeInfo {\n  /**\n   * An Annotation connects some span of text in generated code to an element\n   * of its generating .proto file.\n   */\n  annotation: GeneratedCodeInfo_Annotation[];\n}\n\nexport interface GeneratedCodeInfo_Annotation {\n  /**\n   * Identifies the element in the original source .proto file. This field\n   * is formatted the same as SourceCodeInfo.Location.path.\n   */\n  path: number[];\n  /** Identifies the filesystem path to the original source .proto. */\n  sourceFile: string;\n  /**\n   * Identifies the starting offset in bytes in the generated code\n   * that relates to the identified object.\n   */\n  begin: number;\n  /**\n   * Identifies the ending offset in bytes in the generated code that\n   * relates to the identified offset. The end offset should be one past\n   * the last relevant byte (so the length of the text = end - begin).\n   */\n  end: number;\n}\n\nconst baseFileDescriptorSet: object = {};\n\nexport const FileDescriptorSet = {\n  encode(\n    message: FileDescriptorSet,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.file) {\n      FileDescriptorProto.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): FileDescriptorSet {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFileDescriptorSet } as FileDescriptorSet;\n    message.file = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.file.push(\n            FileDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<FileDescriptorSet>): FileDescriptorSet {\n    const message = { ...baseFileDescriptorSet } as FileDescriptorSet;\n    message.file = [];\n    if (object.file !== undefined && object.file !== null) {\n      for (const e of object.file) {\n        message.file.push(FileDescriptorProto.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseFileDescriptorProto: object = {\n  name: \"\",\n  package: \"\",\n  dependency: \"\",\n  publicDependency: 0,\n  weakDependency: 0,\n  syntax: \"\",\n};\n\nexport const FileDescriptorProto = {\n  encode(\n    message: FileDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.package !== \"\") {\n      writer.uint32(18).string(message.package);\n    }\n    for (const v of message.dependency) {\n      writer.uint32(26).string(v!);\n    }\n    writer.uint32(82).fork();\n    for (const v of message.publicDependency) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    writer.uint32(90).fork();\n    for (const v of message.weakDependency) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    for (const v of message.messageType) {\n      DescriptorProto.encode(v!, writer.uint32(34).fork()).ldelim();\n    }\n    for (const v of message.enumType) {\n      EnumDescriptorProto.encode(v!, writer.uint32(42).fork()).ldelim();\n    }\n    for (const v of message.service) {\n      ServiceDescriptorProto.encode(v!, writer.uint32(50).fork()).ldelim();\n    }\n    for (const v of message.extension) {\n      FieldDescriptorProto.encode(v!, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.options !== undefined) {\n      FileOptions.encode(message.options, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.sourceCodeInfo !== undefined) {\n      SourceCodeInfo.encode(\n        message.sourceCodeInfo,\n        writer.uint32(74).fork()\n      ).ldelim();\n    }\n    if (message.syntax !== \"\") {\n      writer.uint32(98).string(message.syntax);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): FileDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFileDescriptorProto } as FileDescriptorProto;\n    message.dependency = [];\n    message.publicDependency = [];\n    message.weakDependency = [];\n    message.messageType = [];\n    message.enumType = [];\n    message.service = [];\n    message.extension = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.package = reader.string();\n          break;\n        case 3:\n          message.dependency.push(reader.string());\n          break;\n        case 10:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.publicDependency.push(reader.int32());\n            }\n          } else {\n            message.publicDependency.push(reader.int32());\n          }\n          break;\n        case 11:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.weakDependency.push(reader.int32());\n            }\n          } else {\n            message.weakDependency.push(reader.int32());\n          }\n          break;\n        case 4:\n          message.messageType.push(\n            DescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 5:\n          message.enumType.push(\n            EnumDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 6:\n          message.service.push(\n            ServiceDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 7:\n          message.extension.push(\n            FieldDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 8:\n          message.options = FileOptions.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.sourceCodeInfo = SourceCodeInfo.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 12:\n          message.syntax = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<FileDescriptorProto>): FileDescriptorProto {\n    const message = { ...baseFileDescriptorProto } as FileDescriptorProto;\n    message.dependency = [];\n    message.publicDependency = [];\n    message.weakDependency = [];\n    message.messageType = [];\n    message.enumType = [];\n    message.service = [];\n    message.extension = [];\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.package !== undefined && object.package !== null) {\n      message.package = object.package;\n    } else {\n      message.package = \"\";\n    }\n    if (object.dependency !== undefined && object.dependency !== null) {\n      for (const e of object.dependency) {\n        message.dependency.push(e);\n      }\n    }\n    if (\n      object.publicDependency !== undefined &&\n      object.publicDependency !== null\n    ) {\n      for (const e of object.publicDependency) {\n        message.publicDependency.push(e);\n      }\n    }\n    if (object.weakDependency !== undefined && object.weakDependency !== null) {\n      for (const e of object.weakDependency) {\n        message.weakDependency.push(e);\n      }\n    }\n    if (object.messageType !== undefined && object.messageType !== null) {\n      for (const e of object.messageType) {\n        message.messageType.push(DescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.enumType !== undefined && object.enumType !== null) {\n      for (const e of object.enumType) {\n        message.enumType.push(EnumDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.service !== undefined && object.service !== null) {\n      for (const e of object.service) {\n        message.service.push(ServiceDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.extension !== undefined && object.extension !== null) {\n      for (const e of object.extension) {\n        message.extension.push(FieldDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = FileOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    if (object.sourceCodeInfo !== undefined && object.sourceCodeInfo !== null) {\n      message.sourceCodeInfo = SourceCodeInfo.fromPartial(\n        object.sourceCodeInfo\n      );\n    } else {\n      message.sourceCodeInfo = undefined;\n    }\n    if (object.syntax !== undefined && object.syntax !== null) {\n      message.syntax = object.syntax;\n    } else {\n      message.syntax = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseDescriptorProto: object = { name: \"\", reservedName: \"\" };\n\nexport const DescriptorProto = {\n  encode(\n    message: DescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    for (const v of message.field) {\n      FieldDescriptorProto.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.extension) {\n      FieldDescriptorProto.encode(v!, writer.uint32(50).fork()).ldelim();\n    }\n    for (const v of message.nestedType) {\n      DescriptorProto.encode(v!, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.enumType) {\n      EnumDescriptorProto.encode(v!, writer.uint32(34).fork()).ldelim();\n    }\n    for (const v of message.extensionRange) {\n      DescriptorProto_ExtensionRange.encode(\n        v!,\n        writer.uint32(42).fork()\n      ).ldelim();\n    }\n    for (const v of message.oneofDecl) {\n      OneofDescriptorProto.encode(v!, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.options !== undefined) {\n      MessageOptions.encode(message.options, writer.uint32(58).fork()).ldelim();\n    }\n    for (const v of message.reservedRange) {\n      DescriptorProto_ReservedRange.encode(\n        v!,\n        writer.uint32(74).fork()\n      ).ldelim();\n    }\n    for (const v of message.reservedName) {\n      writer.uint32(82).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDescriptorProto } as DescriptorProto;\n    message.field = [];\n    message.extension = [];\n    message.nestedType = [];\n    message.enumType = [];\n    message.extensionRange = [];\n    message.oneofDecl = [];\n    message.reservedRange = [];\n    message.reservedName = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.field.push(\n            FieldDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 6:\n          message.extension.push(\n            FieldDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.nestedType.push(\n            DescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 4:\n          message.enumType.push(\n            EnumDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 5:\n          message.extensionRange.push(\n            DescriptorProto_ExtensionRange.decode(reader, reader.uint32())\n          );\n          break;\n        case 8:\n          message.oneofDecl.push(\n            OneofDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 7:\n          message.options = MessageOptions.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.reservedRange.push(\n            DescriptorProto_ReservedRange.decode(reader, reader.uint32())\n          );\n          break;\n        case 10:\n          message.reservedName.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<DescriptorProto>): DescriptorProto {\n    const message = { ...baseDescriptorProto } as DescriptorProto;\n    message.field = [];\n    message.extension = [];\n    message.nestedType = [];\n    message.enumType = [];\n    message.extensionRange = [];\n    message.oneofDecl = [];\n    message.reservedRange = [];\n    message.reservedName = [];\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.field !== undefined && object.field !== null) {\n      for (const e of object.field) {\n        message.field.push(FieldDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.extension !== undefined && object.extension !== null) {\n      for (const e of object.extension) {\n        message.extension.push(FieldDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.nestedType !== undefined && object.nestedType !== null) {\n      for (const e of object.nestedType) {\n        message.nestedType.push(DescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.enumType !== undefined && object.enumType !== null) {\n      for (const e of object.enumType) {\n        message.enumType.push(EnumDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.extensionRange !== undefined && object.extensionRange !== null) {\n      for (const e of object.extensionRange) {\n        message.extensionRange.push(\n          DescriptorProto_ExtensionRange.fromPartial(e)\n        );\n      }\n    }\n    if (object.oneofDecl !== undefined && object.oneofDecl !== null) {\n      for (const e of object.oneofDecl) {\n        message.oneofDecl.push(OneofDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = MessageOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    if (object.reservedRange !== undefined && object.reservedRange !== null) {\n      for (const e of object.reservedRange) {\n        message.reservedRange.push(\n          DescriptorProto_ReservedRange.fromPartial(e)\n        );\n      }\n    }\n    if (object.reservedName !== undefined && object.reservedName !== null) {\n      for (const e of object.reservedName) {\n        message.reservedName.push(e);\n      }\n    }\n    return message;\n  },\n};\n\nconst baseDescriptorProto_ExtensionRange: object = { start: 0, end: 0 };\n\nexport const DescriptorProto_ExtensionRange = {\n  encode(\n    message: DescriptorProto_ExtensionRange,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.start !== 0) {\n      writer.uint32(8).int32(message.start);\n    }\n    if (message.end !== 0) {\n      writer.uint32(16).int32(message.end);\n    }\n    if (message.options !== undefined) {\n      ExtensionRangeOptions.encode(\n        message.options,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): DescriptorProto_ExtensionRange {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseDescriptorProto_ExtensionRange,\n    } as DescriptorProto_ExtensionRange;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.start = reader.int32();\n          break;\n        case 2:\n          message.end = reader.int32();\n          break;\n        case 3:\n          message.options = ExtensionRangeOptions.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<DescriptorProto_ExtensionRange>\n  ): DescriptorProto_ExtensionRange {\n    const message = {\n      ...baseDescriptorProto_ExtensionRange,\n    } as DescriptorProto_ExtensionRange;\n    if (object.start !== undefined && object.start !== null) {\n      message.start = object.start;\n    } else {\n      message.start = 0;\n    }\n    if (object.end !== undefined && object.end !== null) {\n      message.end = object.end;\n    } else {\n      message.end = 0;\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = ExtensionRangeOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseDescriptorProto_ReservedRange: object = { start: 0, end: 0 };\n\nexport const DescriptorProto_ReservedRange = {\n  encode(\n    message: DescriptorProto_ReservedRange,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.start !== 0) {\n      writer.uint32(8).int32(message.start);\n    }\n    if (message.end !== 0) {\n      writer.uint32(16).int32(message.end);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): DescriptorProto_ReservedRange {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseDescriptorProto_ReservedRange,\n    } as DescriptorProto_ReservedRange;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.start = reader.int32();\n          break;\n        case 2:\n          message.end = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<DescriptorProto_ReservedRange>\n  ): DescriptorProto_ReservedRange {\n    const message = {\n      ...baseDescriptorProto_ReservedRange,\n    } as DescriptorProto_ReservedRange;\n    if (object.start !== undefined && object.start !== null) {\n      message.start = object.start;\n    } else {\n      message.start = 0;\n    }\n    if (object.end !== undefined && object.end !== null) {\n      message.end = object.end;\n    } else {\n      message.end = 0;\n    }\n    return message;\n  },\n};\n\nconst baseExtensionRangeOptions: object = {};\n\nexport const ExtensionRangeOptions = {\n  encode(\n    message: ExtensionRangeOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ExtensionRangeOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseExtensionRangeOptions } as ExtensionRangeOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ExtensionRangeOptions>\n  ): ExtensionRangeOptions {\n    const message = { ...baseExtensionRangeOptions } as ExtensionRangeOptions;\n    message.uninterpretedOption = [];\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseFieldDescriptorProto: object = {\n  name: \"\",\n  number: 0,\n  label: 1,\n  type: 1,\n  typeName: \"\",\n  extendee: \"\",\n  defaultValue: \"\",\n  oneofIndex: 0,\n  jsonName: \"\",\n  proto3Optional: false,\n};\n\nexport const FieldDescriptorProto = {\n  encode(\n    message: FieldDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.number !== 0) {\n      writer.uint32(24).int32(message.number);\n    }\n    if (message.label !== 1) {\n      writer.uint32(32).int32(message.label);\n    }\n    if (message.type !== 1) {\n      writer.uint32(40).int32(message.type);\n    }\n    if (message.typeName !== \"\") {\n      writer.uint32(50).string(message.typeName);\n    }\n    if (message.extendee !== \"\") {\n      writer.uint32(18).string(message.extendee);\n    }\n    if (message.defaultValue !== \"\") {\n      writer.uint32(58).string(message.defaultValue);\n    }\n    if (message.oneofIndex !== 0) {\n      writer.uint32(72).int32(message.oneofIndex);\n    }\n    if (message.jsonName !== \"\") {\n      writer.uint32(82).string(message.jsonName);\n    }\n    if (message.options !== undefined) {\n      FieldOptions.encode(message.options, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.proto3Optional === true) {\n      writer.uint32(136).bool(message.proto3Optional);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): FieldDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFieldDescriptorProto } as FieldDescriptorProto;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 3:\n          message.number = reader.int32();\n          break;\n        case 4:\n          message.label = reader.int32() as any;\n          break;\n        case 5:\n          message.type = reader.int32() as any;\n          break;\n        case 6:\n          message.typeName = reader.string();\n          break;\n        case 2:\n          message.extendee = reader.string();\n          break;\n        case 7:\n          message.defaultValue = reader.string();\n          break;\n        case 9:\n          message.oneofIndex = reader.int32();\n          break;\n        case 10:\n          message.jsonName = reader.string();\n          break;\n        case 8:\n          message.options = FieldOptions.decode(reader, reader.uint32());\n          break;\n        case 17:\n          message.proto3Optional = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<FieldDescriptorProto>): FieldDescriptorProto {\n    const message = { ...baseFieldDescriptorProto } as FieldDescriptorProto;\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.number !== undefined && object.number !== null) {\n      message.number = object.number;\n    } else {\n      message.number = 0;\n    }\n    if (object.label !== undefined && object.label !== null) {\n      message.label = object.label;\n    } else {\n      message.label = 1;\n    }\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = 1;\n    }\n    if (object.typeName !== undefined && object.typeName !== null) {\n      message.typeName = object.typeName;\n    } else {\n      message.typeName = \"\";\n    }\n    if (object.extendee !== undefined && object.extendee !== null) {\n      message.extendee = object.extendee;\n    } else {\n      message.extendee = \"\";\n    }\n    if (object.defaultValue !== undefined && object.defaultValue !== null) {\n      message.defaultValue = object.defaultValue;\n    } else {\n      message.defaultValue = \"\";\n    }\n    if (object.oneofIndex !== undefined && object.oneofIndex !== null) {\n      message.oneofIndex = object.oneofIndex;\n    } else {\n      message.oneofIndex = 0;\n    }\n    if (object.jsonName !== undefined && object.jsonName !== null) {\n      message.jsonName = object.jsonName;\n    } else {\n      message.jsonName = \"\";\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = FieldOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    if (object.proto3Optional !== undefined && object.proto3Optional !== null) {\n      message.proto3Optional = object.proto3Optional;\n    } else {\n      message.proto3Optional = false;\n    }\n    return message;\n  },\n};\n\nconst baseOneofDescriptorProto: object = { name: \"\" };\n\nexport const OneofDescriptorProto = {\n  encode(\n    message: OneofDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.options !== undefined) {\n      OneofOptions.encode(message.options, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): OneofDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseOneofDescriptorProto } as OneofDescriptorProto;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.options = OneofOptions.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<OneofDescriptorProto>): OneofDescriptorProto {\n    const message = { ...baseOneofDescriptorProto } as OneofDescriptorProto;\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = OneofOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseEnumDescriptorProto: object = { name: \"\", reservedName: \"\" };\n\nexport const EnumDescriptorProto = {\n  encode(\n    message: EnumDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    for (const v of message.value) {\n      EnumValueDescriptorProto.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.options !== undefined) {\n      EnumOptions.encode(message.options, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.reservedRange) {\n      EnumDescriptorProto_EnumReservedRange.encode(\n        v!,\n        writer.uint32(34).fork()\n      ).ldelim();\n    }\n    for (const v of message.reservedName) {\n      writer.uint32(42).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): EnumDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseEnumDescriptorProto } as EnumDescriptorProto;\n    message.value = [];\n    message.reservedRange = [];\n    message.reservedName = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.value.push(\n            EnumValueDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.options = EnumOptions.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.reservedRange.push(\n            EnumDescriptorProto_EnumReservedRange.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        case 5:\n          message.reservedName.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<EnumDescriptorProto>): EnumDescriptorProto {\n    const message = { ...baseEnumDescriptorProto } as EnumDescriptorProto;\n    message.value = [];\n    message.reservedRange = [];\n    message.reservedName = [];\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      for (const e of object.value) {\n        message.value.push(EnumValueDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = EnumOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    if (object.reservedRange !== undefined && object.reservedRange !== null) {\n      for (const e of object.reservedRange) {\n        message.reservedRange.push(\n          EnumDescriptorProto_EnumReservedRange.fromPartial(e)\n        );\n      }\n    }\n    if (object.reservedName !== undefined && object.reservedName !== null) {\n      for (const e of object.reservedName) {\n        message.reservedName.push(e);\n      }\n    }\n    return message;\n  },\n};\n\nconst baseEnumDescriptorProto_EnumReservedRange: object = { start: 0, end: 0 };\n\nexport const EnumDescriptorProto_EnumReservedRange = {\n  encode(\n    message: EnumDescriptorProto_EnumReservedRange,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.start !== 0) {\n      writer.uint32(8).int32(message.start);\n    }\n    if (message.end !== 0) {\n      writer.uint32(16).int32(message.end);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): EnumDescriptorProto_EnumReservedRange {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseEnumDescriptorProto_EnumReservedRange,\n    } as EnumDescriptorProto_EnumReservedRange;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.start = reader.int32();\n          break;\n        case 2:\n          message.end = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<EnumDescriptorProto_EnumReservedRange>\n  ): EnumDescriptorProto_EnumReservedRange {\n    const message = {\n      ...baseEnumDescriptorProto_EnumReservedRange,\n    } as EnumDescriptorProto_EnumReservedRange;\n    if (object.start !== undefined && object.start !== null) {\n      message.start = object.start;\n    } else {\n      message.start = 0;\n    }\n    if (object.end !== undefined && object.end !== null) {\n      message.end = object.end;\n    } else {\n      message.end = 0;\n    }\n    return message;\n  },\n};\n\nconst baseEnumValueDescriptorProto: object = { name: \"\", number: 0 };\n\nexport const EnumValueDescriptorProto = {\n  encode(\n    message: EnumValueDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.number !== 0) {\n      writer.uint32(16).int32(message.number);\n    }\n    if (message.options !== undefined) {\n      EnumValueOptions.encode(\n        message.options,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): EnumValueDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseEnumValueDescriptorProto,\n    } as EnumValueDescriptorProto;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.number = reader.int32();\n          break;\n        case 3:\n          message.options = EnumValueOptions.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<EnumValueDescriptorProto>\n  ): EnumValueDescriptorProto {\n    const message = {\n      ...baseEnumValueDescriptorProto,\n    } as EnumValueDescriptorProto;\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.number !== undefined && object.number !== null) {\n      message.number = object.number;\n    } else {\n      message.number = 0;\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = EnumValueOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseServiceDescriptorProto: object = { name: \"\" };\n\nexport const ServiceDescriptorProto = {\n  encode(\n    message: ServiceDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    for (const v of message.method) {\n      MethodDescriptorProto.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.options !== undefined) {\n      ServiceOptions.encode(message.options, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ServiceDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseServiceDescriptorProto } as ServiceDescriptorProto;\n    message.method = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.method.push(\n            MethodDescriptorProto.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.options = ServiceOptions.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ServiceDescriptorProto>\n  ): ServiceDescriptorProto {\n    const message = { ...baseServiceDescriptorProto } as ServiceDescriptorProto;\n    message.method = [];\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.method !== undefined && object.method !== null) {\n      for (const e of object.method) {\n        message.method.push(MethodDescriptorProto.fromPartial(e));\n      }\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = ServiceOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseMethodDescriptorProto: object = {\n  name: \"\",\n  inputType: \"\",\n  outputType: \"\",\n  clientStreaming: false,\n  serverStreaming: false,\n};\n\nexport const MethodDescriptorProto = {\n  encode(\n    message: MethodDescriptorProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.inputType !== \"\") {\n      writer.uint32(18).string(message.inputType);\n    }\n    if (message.outputType !== \"\") {\n      writer.uint32(26).string(message.outputType);\n    }\n    if (message.options !== undefined) {\n      MethodOptions.encode(message.options, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.clientStreaming === true) {\n      writer.uint32(40).bool(message.clientStreaming);\n    }\n    if (message.serverStreaming === true) {\n      writer.uint32(48).bool(message.serverStreaming);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MethodDescriptorProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMethodDescriptorProto } as MethodDescriptorProto;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.inputType = reader.string();\n          break;\n        case 3:\n          message.outputType = reader.string();\n          break;\n        case 4:\n          message.options = MethodOptions.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.clientStreaming = reader.bool();\n          break;\n        case 6:\n          message.serverStreaming = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<MethodDescriptorProto>\n  ): MethodDescriptorProto {\n    const message = { ...baseMethodDescriptorProto } as MethodDescriptorProto;\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.inputType !== undefined && object.inputType !== null) {\n      message.inputType = object.inputType;\n    } else {\n      message.inputType = \"\";\n    }\n    if (object.outputType !== undefined && object.outputType !== null) {\n      message.outputType = object.outputType;\n    } else {\n      message.outputType = \"\";\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = MethodOptions.fromPartial(object.options);\n    } else {\n      message.options = undefined;\n    }\n    if (\n      object.clientStreaming !== undefined &&\n      object.clientStreaming !== null\n    ) {\n      message.clientStreaming = object.clientStreaming;\n    } else {\n      message.clientStreaming = false;\n    }\n    if (\n      object.serverStreaming !== undefined &&\n      object.serverStreaming !== null\n    ) {\n      message.serverStreaming = object.serverStreaming;\n    } else {\n      message.serverStreaming = false;\n    }\n    return message;\n  },\n};\n\nconst baseFileOptions: object = {\n  javaPackage: \"\",\n  javaOuterClassname: \"\",\n  javaMultipleFiles: false,\n  javaGenerateEqualsAndHash: false,\n  javaStringCheckUtf8: false,\n  optimizeFor: 1,\n  goPackage: \"\",\n  ccGenericServices: false,\n  javaGenericServices: false,\n  pyGenericServices: false,\n  phpGenericServices: false,\n  deprecated: false,\n  ccEnableArenas: false,\n  objcClassPrefix: \"\",\n  csharpNamespace: \"\",\n  swiftPrefix: \"\",\n  phpClassPrefix: \"\",\n  phpNamespace: \"\",\n  phpMetadataNamespace: \"\",\n  rubyPackage: \"\",\n};\n\nexport const FileOptions = {\n  encode(\n    message: FileOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.javaPackage !== \"\") {\n      writer.uint32(10).string(message.javaPackage);\n    }\n    if (message.javaOuterClassname !== \"\") {\n      writer.uint32(66).string(message.javaOuterClassname);\n    }\n    if (message.javaMultipleFiles === true) {\n      writer.uint32(80).bool(message.javaMultipleFiles);\n    }\n    if (message.javaGenerateEqualsAndHash === true) {\n      writer.uint32(160).bool(message.javaGenerateEqualsAndHash);\n    }\n    if (message.javaStringCheckUtf8 === true) {\n      writer.uint32(216).bool(message.javaStringCheckUtf8);\n    }\n    if (message.optimizeFor !== 1) {\n      writer.uint32(72).int32(message.optimizeFor);\n    }\n    if (message.goPackage !== \"\") {\n      writer.uint32(90).string(message.goPackage);\n    }\n    if (message.ccGenericServices === true) {\n      writer.uint32(128).bool(message.ccGenericServices);\n    }\n    if (message.javaGenericServices === true) {\n      writer.uint32(136).bool(message.javaGenericServices);\n    }\n    if (message.pyGenericServices === true) {\n      writer.uint32(144).bool(message.pyGenericServices);\n    }\n    if (message.phpGenericServices === true) {\n      writer.uint32(336).bool(message.phpGenericServices);\n    }\n    if (message.deprecated === true) {\n      writer.uint32(184).bool(message.deprecated);\n    }\n    if (message.ccEnableArenas === true) {\n      writer.uint32(248).bool(message.ccEnableArenas);\n    }\n    if (message.objcClassPrefix !== \"\") {\n      writer.uint32(290).string(message.objcClassPrefix);\n    }\n    if (message.csharpNamespace !== \"\") {\n      writer.uint32(298).string(message.csharpNamespace);\n    }\n    if (message.swiftPrefix !== \"\") {\n      writer.uint32(314).string(message.swiftPrefix);\n    }\n    if (message.phpClassPrefix !== \"\") {\n      writer.uint32(322).string(message.phpClassPrefix);\n    }\n    if (message.phpNamespace !== \"\") {\n      writer.uint32(330).string(message.phpNamespace);\n    }\n    if (message.phpMetadataNamespace !== \"\") {\n      writer.uint32(354).string(message.phpMetadataNamespace);\n    }\n    if (message.rubyPackage !== \"\") {\n      writer.uint32(362).string(message.rubyPackage);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): FileOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFileOptions } as FileOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.javaPackage = reader.string();\n          break;\n        case 8:\n          message.javaOuterClassname = reader.string();\n          break;\n        case 10:\n          message.javaMultipleFiles = reader.bool();\n          break;\n        case 20:\n          message.javaGenerateEqualsAndHash = reader.bool();\n          break;\n        case 27:\n          message.javaStringCheckUtf8 = reader.bool();\n          break;\n        case 9:\n          message.optimizeFor = reader.int32() as any;\n          break;\n        case 11:\n          message.goPackage = reader.string();\n          break;\n        case 16:\n          message.ccGenericServices = reader.bool();\n          break;\n        case 17:\n          message.javaGenericServices = reader.bool();\n          break;\n        case 18:\n          message.pyGenericServices = reader.bool();\n          break;\n        case 42:\n          message.phpGenericServices = reader.bool();\n          break;\n        case 23:\n          message.deprecated = reader.bool();\n          break;\n        case 31:\n          message.ccEnableArenas = reader.bool();\n          break;\n        case 36:\n          message.objcClassPrefix = reader.string();\n          break;\n        case 37:\n          message.csharpNamespace = reader.string();\n          break;\n        case 39:\n          message.swiftPrefix = reader.string();\n          break;\n        case 40:\n          message.phpClassPrefix = reader.string();\n          break;\n        case 41:\n          message.phpNamespace = reader.string();\n          break;\n        case 44:\n          message.phpMetadataNamespace = reader.string();\n          break;\n        case 45:\n          message.rubyPackage = reader.string();\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<FileOptions>): FileOptions {\n    const message = { ...baseFileOptions } as FileOptions;\n    message.uninterpretedOption = [];\n    if (object.javaPackage !== undefined && object.javaPackage !== null) {\n      message.javaPackage = object.javaPackage;\n    } else {\n      message.javaPackage = \"\";\n    }\n    if (\n      object.javaOuterClassname !== undefined &&\n      object.javaOuterClassname !== null\n    ) {\n      message.javaOuterClassname = object.javaOuterClassname;\n    } else {\n      message.javaOuterClassname = \"\";\n    }\n    if (\n      object.javaMultipleFiles !== undefined &&\n      object.javaMultipleFiles !== null\n    ) {\n      message.javaMultipleFiles = object.javaMultipleFiles;\n    } else {\n      message.javaMultipleFiles = false;\n    }\n    if (\n      object.javaGenerateEqualsAndHash !== undefined &&\n      object.javaGenerateEqualsAndHash !== null\n    ) {\n      message.javaGenerateEqualsAndHash = object.javaGenerateEqualsAndHash;\n    } else {\n      message.javaGenerateEqualsAndHash = false;\n    }\n    if (\n      object.javaStringCheckUtf8 !== undefined &&\n      object.javaStringCheckUtf8 !== null\n    ) {\n      message.javaStringCheckUtf8 = object.javaStringCheckUtf8;\n    } else {\n      message.javaStringCheckUtf8 = false;\n    }\n    if (object.optimizeFor !== undefined && object.optimizeFor !== null) {\n      message.optimizeFor = object.optimizeFor;\n    } else {\n      message.optimizeFor = 1;\n    }\n    if (object.goPackage !== undefined && object.goPackage !== null) {\n      message.goPackage = object.goPackage;\n    } else {\n      message.goPackage = \"\";\n    }\n    if (\n      object.ccGenericServices !== undefined &&\n      object.ccGenericServices !== null\n    ) {\n      message.ccGenericServices = object.ccGenericServices;\n    } else {\n      message.ccGenericServices = false;\n    }\n    if (\n      object.javaGenericServices !== undefined &&\n      object.javaGenericServices !== null\n    ) {\n      message.javaGenericServices = object.javaGenericServices;\n    } else {\n      message.javaGenericServices = false;\n    }\n    if (\n      object.pyGenericServices !== undefined &&\n      object.pyGenericServices !== null\n    ) {\n      message.pyGenericServices = object.pyGenericServices;\n    } else {\n      message.pyGenericServices = false;\n    }\n    if (\n      object.phpGenericServices !== undefined &&\n      object.phpGenericServices !== null\n    ) {\n      message.phpGenericServices = object.phpGenericServices;\n    } else {\n      message.phpGenericServices = false;\n    }\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (object.ccEnableArenas !== undefined && object.ccEnableArenas !== null) {\n      message.ccEnableArenas = object.ccEnableArenas;\n    } else {\n      message.ccEnableArenas = false;\n    }\n    if (\n      object.objcClassPrefix !== undefined &&\n      object.objcClassPrefix !== null\n    ) {\n      message.objcClassPrefix = object.objcClassPrefix;\n    } else {\n      message.objcClassPrefix = \"\";\n    }\n    if (\n      object.csharpNamespace !== undefined &&\n      object.csharpNamespace !== null\n    ) {\n      message.csharpNamespace = object.csharpNamespace;\n    } else {\n      message.csharpNamespace = \"\";\n    }\n    if (object.swiftPrefix !== undefined && object.swiftPrefix !== null) {\n      message.swiftPrefix = object.swiftPrefix;\n    } else {\n      message.swiftPrefix = \"\";\n    }\n    if (object.phpClassPrefix !== undefined && object.phpClassPrefix !== null) {\n      message.phpClassPrefix = object.phpClassPrefix;\n    } else {\n      message.phpClassPrefix = \"\";\n    }\n    if (object.phpNamespace !== undefined && object.phpNamespace !== null) {\n      message.phpNamespace = object.phpNamespace;\n    } else {\n      message.phpNamespace = \"\";\n    }\n    if (\n      object.phpMetadataNamespace !== undefined &&\n      object.phpMetadataNamespace !== null\n    ) {\n      message.phpMetadataNamespace = object.phpMetadataNamespace;\n    } else {\n      message.phpMetadataNamespace = \"\";\n    }\n    if (object.rubyPackage !== undefined && object.rubyPackage !== null) {\n      message.rubyPackage = object.rubyPackage;\n    } else {\n      message.rubyPackage = \"\";\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseMessageOptions: object = {\n  messageSetWireFormat: false,\n  noStandardDescriptorAccessor: false,\n  deprecated: false,\n  mapEntry: false,\n};\n\nexport const MessageOptions = {\n  encode(\n    message: MessageOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.messageSetWireFormat === true) {\n      writer.uint32(8).bool(message.messageSetWireFormat);\n    }\n    if (message.noStandardDescriptorAccessor === true) {\n      writer.uint32(16).bool(message.noStandardDescriptorAccessor);\n    }\n    if (message.deprecated === true) {\n      writer.uint32(24).bool(message.deprecated);\n    }\n    if (message.mapEntry === true) {\n      writer.uint32(56).bool(message.mapEntry);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MessageOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMessageOptions } as MessageOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.messageSetWireFormat = reader.bool();\n          break;\n        case 2:\n          message.noStandardDescriptorAccessor = reader.bool();\n          break;\n        case 3:\n          message.deprecated = reader.bool();\n          break;\n        case 7:\n          message.mapEntry = reader.bool();\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<MessageOptions>): MessageOptions {\n    const message = { ...baseMessageOptions } as MessageOptions;\n    message.uninterpretedOption = [];\n    if (\n      object.messageSetWireFormat !== undefined &&\n      object.messageSetWireFormat !== null\n    ) {\n      message.messageSetWireFormat = object.messageSetWireFormat;\n    } else {\n      message.messageSetWireFormat = false;\n    }\n    if (\n      object.noStandardDescriptorAccessor !== undefined &&\n      object.noStandardDescriptorAccessor !== null\n    ) {\n      message.noStandardDescriptorAccessor =\n        object.noStandardDescriptorAccessor;\n    } else {\n      message.noStandardDescriptorAccessor = false;\n    }\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (object.mapEntry !== undefined && object.mapEntry !== null) {\n      message.mapEntry = object.mapEntry;\n    } else {\n      message.mapEntry = false;\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseFieldOptions: object = {\n  ctype: 0,\n  packed: false,\n  jstype: 0,\n  lazy: false,\n  deprecated: false,\n  weak: false,\n};\n\nexport const FieldOptions = {\n  encode(\n    message: FieldOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.ctype !== 0) {\n      writer.uint32(8).int32(message.ctype);\n    }\n    if (message.packed === true) {\n      writer.uint32(16).bool(message.packed);\n    }\n    if (message.jstype !== 0) {\n      writer.uint32(48).int32(message.jstype);\n    }\n    if (message.lazy === true) {\n      writer.uint32(40).bool(message.lazy);\n    }\n    if (message.deprecated === true) {\n      writer.uint32(24).bool(message.deprecated);\n    }\n    if (message.weak === true) {\n      writer.uint32(80).bool(message.weak);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): FieldOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFieldOptions } as FieldOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ctype = reader.int32() as any;\n          break;\n        case 2:\n          message.packed = reader.bool();\n          break;\n        case 6:\n          message.jstype = reader.int32() as any;\n          break;\n        case 5:\n          message.lazy = reader.bool();\n          break;\n        case 3:\n          message.deprecated = reader.bool();\n          break;\n        case 10:\n          message.weak = reader.bool();\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<FieldOptions>): FieldOptions {\n    const message = { ...baseFieldOptions } as FieldOptions;\n    message.uninterpretedOption = [];\n    if (object.ctype !== undefined && object.ctype !== null) {\n      message.ctype = object.ctype;\n    } else {\n      message.ctype = 0;\n    }\n    if (object.packed !== undefined && object.packed !== null) {\n      message.packed = object.packed;\n    } else {\n      message.packed = false;\n    }\n    if (object.jstype !== undefined && object.jstype !== null) {\n      message.jstype = object.jstype;\n    } else {\n      message.jstype = 0;\n    }\n    if (object.lazy !== undefined && object.lazy !== null) {\n      message.lazy = object.lazy;\n    } else {\n      message.lazy = false;\n    }\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (object.weak !== undefined && object.weak !== null) {\n      message.weak = object.weak;\n    } else {\n      message.weak = false;\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseOneofOptions: object = {};\n\nexport const OneofOptions = {\n  encode(\n    message: OneofOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): OneofOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseOneofOptions } as OneofOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<OneofOptions>): OneofOptions {\n    const message = { ...baseOneofOptions } as OneofOptions;\n    message.uninterpretedOption = [];\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseEnumOptions: object = { allowAlias: false, deprecated: false };\n\nexport const EnumOptions = {\n  encode(\n    message: EnumOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.allowAlias === true) {\n      writer.uint32(16).bool(message.allowAlias);\n    }\n    if (message.deprecated === true) {\n      writer.uint32(24).bool(message.deprecated);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): EnumOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseEnumOptions } as EnumOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.allowAlias = reader.bool();\n          break;\n        case 3:\n          message.deprecated = reader.bool();\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<EnumOptions>): EnumOptions {\n    const message = { ...baseEnumOptions } as EnumOptions;\n    message.uninterpretedOption = [];\n    if (object.allowAlias !== undefined && object.allowAlias !== null) {\n      message.allowAlias = object.allowAlias;\n    } else {\n      message.allowAlias = false;\n    }\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseEnumValueOptions: object = { deprecated: false };\n\nexport const EnumValueOptions = {\n  encode(\n    message: EnumValueOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.deprecated === true) {\n      writer.uint32(8).bool(message.deprecated);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): EnumValueOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseEnumValueOptions } as EnumValueOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.deprecated = reader.bool();\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<EnumValueOptions>): EnumValueOptions {\n    const message = { ...baseEnumValueOptions } as EnumValueOptions;\n    message.uninterpretedOption = [];\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseServiceOptions: object = { deprecated: false };\n\nexport const ServiceOptions = {\n  encode(\n    message: ServiceOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.deprecated === true) {\n      writer.uint32(264).bool(message.deprecated);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ServiceOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseServiceOptions } as ServiceOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 33:\n          message.deprecated = reader.bool();\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ServiceOptions>): ServiceOptions {\n    const message = { ...baseServiceOptions } as ServiceOptions;\n    message.uninterpretedOption = [];\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseMethodOptions: object = { deprecated: false, idempotencyLevel: 0 };\n\nexport const MethodOptions = {\n  encode(\n    message: MethodOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.deprecated === true) {\n      writer.uint32(264).bool(message.deprecated);\n    }\n    if (message.idempotencyLevel !== 0) {\n      writer.uint32(272).int32(message.idempotencyLevel);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MethodOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMethodOptions } as MethodOptions;\n    message.uninterpretedOption = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 33:\n          message.deprecated = reader.bool();\n          break;\n        case 34:\n          message.idempotencyLevel = reader.int32() as any;\n          break;\n        case 999:\n          message.uninterpretedOption.push(\n            UninterpretedOption.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<MethodOptions>): MethodOptions {\n    const message = { ...baseMethodOptions } as MethodOptions;\n    message.uninterpretedOption = [];\n    if (object.deprecated !== undefined && object.deprecated !== null) {\n      message.deprecated = object.deprecated;\n    } else {\n      message.deprecated = false;\n    }\n    if (\n      object.idempotencyLevel !== undefined &&\n      object.idempotencyLevel !== null\n    ) {\n      message.idempotencyLevel = object.idempotencyLevel;\n    } else {\n      message.idempotencyLevel = 0;\n    }\n    if (\n      object.uninterpretedOption !== undefined &&\n      object.uninterpretedOption !== null\n    ) {\n      for (const e of object.uninterpretedOption) {\n        message.uninterpretedOption.push(UninterpretedOption.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseUninterpretedOption: object = {\n  identifierValue: \"\",\n  positiveIntValue: 0,\n  negativeIntValue: 0,\n  doubleValue: 0,\n  aggregateValue: \"\",\n};\n\nexport const UninterpretedOption = {\n  encode(\n    message: UninterpretedOption,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.name) {\n      UninterpretedOption_NamePart.encode(\n        v!,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    if (message.identifierValue !== \"\") {\n      writer.uint32(26).string(message.identifierValue);\n    }\n    if (message.positiveIntValue !== 0) {\n      writer.uint32(32).uint64(message.positiveIntValue);\n    }\n    if (message.negativeIntValue !== 0) {\n      writer.uint32(40).int64(message.negativeIntValue);\n    }\n    if (message.doubleValue !== 0) {\n      writer.uint32(49).double(message.doubleValue);\n    }\n    if (message.stringValue.length !== 0) {\n      writer.uint32(58).bytes(message.stringValue);\n    }\n    if (message.aggregateValue !== \"\") {\n      writer.uint32(66).string(message.aggregateValue);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UninterpretedOption {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseUninterpretedOption } as UninterpretedOption;\n    message.name = [];\n    message.stringValue = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.name.push(\n            UninterpretedOption_NamePart.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.identifierValue = reader.string();\n          break;\n        case 4:\n          message.positiveIntValue = longToNumber(reader.uint64() as Long);\n          break;\n        case 5:\n          message.negativeIntValue = longToNumber(reader.int64() as Long);\n          break;\n        case 6:\n          message.doubleValue = reader.double();\n          break;\n        case 7:\n          message.stringValue = reader.bytes();\n          break;\n        case 8:\n          message.aggregateValue = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<UninterpretedOption>): UninterpretedOption {\n    const message = { ...baseUninterpretedOption } as UninterpretedOption;\n    message.name = [];\n    if (object.name !== undefined && object.name !== null) {\n      for (const e of object.name) {\n        message.name.push(UninterpretedOption_NamePart.fromPartial(e));\n      }\n    }\n    if (\n      object.identifierValue !== undefined &&\n      object.identifierValue !== null\n    ) {\n      message.identifierValue = object.identifierValue;\n    } else {\n      message.identifierValue = \"\";\n    }\n    if (\n      object.positiveIntValue !== undefined &&\n      object.positiveIntValue !== null\n    ) {\n      message.positiveIntValue = object.positiveIntValue;\n    } else {\n      message.positiveIntValue = 0;\n    }\n    if (\n      object.negativeIntValue !== undefined &&\n      object.negativeIntValue !== null\n    ) {\n      message.negativeIntValue = object.negativeIntValue;\n    } else {\n      message.negativeIntValue = 0;\n    }\n    if (object.doubleValue !== undefined && object.doubleValue !== null) {\n      message.doubleValue = object.doubleValue;\n    } else {\n      message.doubleValue = 0;\n    }\n    if (object.stringValue !== undefined && object.stringValue !== null) {\n      message.stringValue = object.stringValue;\n    } else {\n      message.stringValue = new Uint8Array();\n    }\n    if (object.aggregateValue !== undefined && object.aggregateValue !== null) {\n      message.aggregateValue = object.aggregateValue;\n    } else {\n      message.aggregateValue = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseUninterpretedOption_NamePart: object = {\n  namePart: \"\",\n  isExtension: false,\n};\n\nexport const UninterpretedOption_NamePart = {\n  encode(\n    message: UninterpretedOption_NamePart,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.namePart !== \"\") {\n      writer.uint32(10).string(message.namePart);\n    }\n    if (message.isExtension === true) {\n      writer.uint32(16).bool(message.isExtension);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UninterpretedOption_NamePart {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUninterpretedOption_NamePart,\n    } as UninterpretedOption_NamePart;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.namePart = reader.string();\n          break;\n        case 2:\n          message.isExtension = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<UninterpretedOption_NamePart>\n  ): UninterpretedOption_NamePart {\n    const message = {\n      ...baseUninterpretedOption_NamePart,\n    } as UninterpretedOption_NamePart;\n    if (object.namePart !== undefined && object.namePart !== null) {\n      message.namePart = object.namePart;\n    } else {\n      message.namePart = \"\";\n    }\n    if (object.isExtension !== undefined && object.isExtension !== null) {\n      message.isExtension = object.isExtension;\n    } else {\n      message.isExtension = false;\n    }\n    return message;\n  },\n};\n\nconst baseSourceCodeInfo: object = {};\n\nexport const SourceCodeInfo = {\n  encode(\n    message: SourceCodeInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.location) {\n      SourceCodeInfo_Location.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): SourceCodeInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseSourceCodeInfo } as SourceCodeInfo;\n    message.location = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.location.push(\n            SourceCodeInfo_Location.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<SourceCodeInfo>): SourceCodeInfo {\n    const message = { ...baseSourceCodeInfo } as SourceCodeInfo;\n    message.location = [];\n    if (object.location !== undefined && object.location !== null) {\n      for (const e of object.location) {\n        message.location.push(SourceCodeInfo_Location.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseSourceCodeInfo_Location: object = {\n  path: 0,\n  span: 0,\n  leadingComments: \"\",\n  trailingComments: \"\",\n  leadingDetachedComments: \"\",\n};\n\nexport const SourceCodeInfo_Location = {\n  encode(\n    message: SourceCodeInfo_Location,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    writer.uint32(10).fork();\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    writer.uint32(18).fork();\n    for (const v of message.span) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.leadingComments !== \"\") {\n      writer.uint32(26).string(message.leadingComments);\n    }\n    if (message.trailingComments !== \"\") {\n      writer.uint32(34).string(message.trailingComments);\n    }\n    for (const v of message.leadingDetachedComments) {\n      writer.uint32(50).string(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): SourceCodeInfo_Location {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseSourceCodeInfo_Location,\n    } as SourceCodeInfo_Location;\n    message.path = [];\n    message.span = [];\n    message.leadingDetachedComments = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n          } else {\n            message.path.push(reader.int32());\n          }\n          break;\n        case 2:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.span.push(reader.int32());\n            }\n          } else {\n            message.span.push(reader.int32());\n          }\n          break;\n        case 3:\n          message.leadingComments = reader.string();\n          break;\n        case 4:\n          message.trailingComments = reader.string();\n          break;\n        case 6:\n          message.leadingDetachedComments.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<SourceCodeInfo_Location>\n  ): SourceCodeInfo_Location {\n    const message = {\n      ...baseSourceCodeInfo_Location,\n    } as SourceCodeInfo_Location;\n    message.path = [];\n    message.span = [];\n    message.leadingDetachedComments = [];\n    if (object.path !== undefined && object.path !== null) {\n      for (const e of object.path) {\n        message.path.push(e);\n      }\n    }\n    if (object.span !== undefined && object.span !== null) {\n      for (const e of object.span) {\n        message.span.push(e);\n      }\n    }\n    if (\n      object.leadingComments !== undefined &&\n      object.leadingComments !== null\n    ) {\n      message.leadingComments = object.leadingComments;\n    } else {\n      message.leadingComments = \"\";\n    }\n    if (\n      object.trailingComments !== undefined &&\n      object.trailingComments !== null\n    ) {\n      message.trailingComments = object.trailingComments;\n    } else {\n      message.trailingComments = \"\";\n    }\n    if (\n      object.leadingDetachedComments !== undefined &&\n      object.leadingDetachedComments !== null\n    ) {\n      for (const e of object.leadingDetachedComments) {\n        message.leadingDetachedComments.push(e);\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGeneratedCodeInfo: object = {};\n\nexport const GeneratedCodeInfo = {\n  encode(\n    message: GeneratedCodeInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.annotation) {\n      GeneratedCodeInfo_Annotation.encode(\n        v!,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GeneratedCodeInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGeneratedCodeInfo } as GeneratedCodeInfo;\n    message.annotation = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.annotation.push(\n            GeneratedCodeInfo_Annotation.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<GeneratedCodeInfo>): GeneratedCodeInfo {\n    const message = { ...baseGeneratedCodeInfo } as GeneratedCodeInfo;\n    message.annotation = [];\n    if (object.annotation !== undefined && object.annotation !== null) {\n      for (const e of object.annotation) {\n        message.annotation.push(GeneratedCodeInfo_Annotation.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGeneratedCodeInfo_Annotation: object = {\n  path: 0,\n  sourceFile: \"\",\n  begin: 0,\n  end: 0,\n};\n\nexport const GeneratedCodeInfo_Annotation = {\n  encode(\n    message: GeneratedCodeInfo_Annotation,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    writer.uint32(10).fork();\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.sourceFile !== \"\") {\n      writer.uint32(18).string(message.sourceFile);\n    }\n    if (message.begin !== 0) {\n      writer.uint32(24).int32(message.begin);\n    }\n    if (message.end !== 0) {\n      writer.uint32(32).int32(message.end);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GeneratedCodeInfo_Annotation {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGeneratedCodeInfo_Annotation,\n    } as GeneratedCodeInfo_Annotation;\n    message.path = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n          } else {\n            message.path.push(reader.int32());\n          }\n          break;\n        case 2:\n          message.sourceFile = reader.string();\n          break;\n        case 3:\n          message.begin = reader.int32();\n          break;\n        case 4:\n          message.end = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GeneratedCodeInfo_Annotation>\n  ): GeneratedCodeInfo_Annotation {\n    const message = {\n      ...baseGeneratedCodeInfo_Annotation,\n    } as GeneratedCodeInfo_Annotation;\n    message.path = [];\n    if (object.path !== undefined && object.path !== null) {\n      for (const e of object.path) {\n        message.path.push(e);\n      }\n    }\n    if (object.sourceFile !== undefined && object.sourceFile !== null) {\n      message.sourceFile = object.sourceFile;\n    } else {\n      message.sourceFile = \"\";\n    }\n    if (object.begin !== undefined && object.begin !== null) {\n      message.begin = object.begin;\n    } else {\n      message.begin = 0;\n    }\n    if (object.end !== undefined && object.end !== null) {\n      message.end = object.end;\n    } else {\n      message.end = 0;\n    }\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Ruid_Type, Ruid } from \"../common/ruid\";\nimport {\n  ClientTargetingExpression,\n  ConfigResult_ServePlatform,\n} from \"../cdp/cof/config_result\";\nimport { DebugTrace, AbStepInfo } from \"../cdp/cof/debug_info\";\nimport { Value } from \"../common/value\";\nimport { FileDescriptorProto } from \"../google/protobuf/descriptor\";\n\nexport const protobufPackage = \"snapchat.ab_config_service\";\n\n/** ProtoBuf API definition for AB config service. */\n\n/**\n * Mirror of Atlas schema here:\n * https://github.sc-corp.net/Snapchat/atlas/blob/master/user-service/user-service-interface/src/main/proto/com/snapchat/atlas/user/user-data.proto#L287\n */\nexport enum SnapProStatus {\n  UNKNOWN_SNAP_PRO = 0,\n  NOT_SNAP_PRO = 1,\n  STANDARD_TIER = 2,\n  OFFICIAL_TIER = 3,\n  PUBLIC_TIER = 4,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * ///////////////////////////////////////////////////\n * ///// Called by Circumstance Engine\n * ///////////////////////////////////////////////////\n */\nexport interface UserInfo {\n  /** Id of the user. */\n  userId: string;\n  /** Name of the user */\n  userName: string;\n  /** Whether user is employee. */\n  isEmployee: boolean;\n  /** Whether user is a test user. */\n  isTestUser: boolean;\n  /** Creation timestamp of the user. */\n  creationTs: number;\n  /** Sticky country of the user. */\n  stickyCountry: string;\n  /** Email information of the user. */\n  email: Email | undefined;\n  /** Phone information of the user. */\n  phone: Phone | undefined;\n  /** Snap pro status of the user. */\n  snapProStatus: SnapProStatus;\n  /** The user name that is mutable to user. */\n  mutableUserName: string;\n  /** SnapAds ID of user. */\n  said: string;\n}\n\nexport interface Email {\n  isEmailEmpty: boolean;\n  isEmailVerified: boolean;\n  isEmailPendingVerificationEmpty: boolean;\n}\n\nexport interface UserAgentInfo {\n  osType: string;\n  osVersion: string;\n  appVersion: string;\n  appBuild: string;\n  appVariant: string;\n  deviceModel: string;\n  /** Original string passed from client. */\n  originalUserAgentString: string;\n}\n\nexport interface Phone {\n  isPhoneEmpty: boolean;\n  isPhoneVerified: boolean;\n}\n\nexport interface GetConfigsValueByPropertiesRequest {\n  /** List of matched rules, which includes study information */\n  configs: GetConfigsValueByPropertiesRequest_ConfigMetadata[];\n  /**\n   * Studies requested, if not set/or empty list, we will check\n   * against all studies for whitelisting.\n   */\n  requestedStudies: string[];\n  userInfo: UserInfo | undefined;\n  deviceId: string;\n  userAgent: string;\n  ipAddress: string;\n  countryCode: string;\n  city: string;\n  region: string;\n  locale: string;\n  userAgentInfo: UserAgentInfo | undefined;\n  srcOfOrigin: GetConfigsValueByPropertiesRequest_SourceOfOrigin;\n  /** include debugging information if set */\n  enableDebug: boolean;\n  /** whether to log exposure logging, default is to log exposure */\n  disableExposureLogging: boolean;\n}\n\nexport enum GetConfigsValueByPropertiesRequest_SourceOfOrigin {\n  UNKNOWN_ORIGIN = 0,\n  SERVER = 1,\n  CLIENT = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport interface GetConfigsValueByPropertiesRequest_ConfigMetadata {\n  configName: string;\n  version: number;\n}\n\n/** Struct used to carry targeting data for AB study */\nexport interface ABTargetingMetadata {\n  /** Id of the targeting rule (same as sub study (segement) id in AB). */\n  id: string;\n  /** The version of the sub study (segement). */\n  version: number;\n  /** Client targeting expression if the config rule has any. */\n  clientTargetingExpression: ClientTargetingExpression | undefined;\n}\n\n/** Study metadata for allocation */\nexport interface ABStudyServingMetadata {\n  /** Name of the proxy study. Will be used for processing aggregation. */\n  id: string;\n  /** Segments matching user request. */\n  targetingMetadata: ABTargetingMetadata[];\n}\n\n/** Data used for whitelisting/allocation */\nexport interface TargetingInfo {\n  /** User info data. */\n  userInfo: UserInfo | undefined;\n  /** Device id of the request. */\n  deviceId: string;\n  /** User agent string. */\n  userAgent: string;\n  /** Request ip address. */\n  ipAddress: string;\n  /** Country code */\n  countryCode: string;\n  /** City */\n  city: string;\n  /** Region */\n  region: string;\n  /** Locale */\n  locale: string;\n  /** Parsed user agent data from user agent string */\n  userAgentInfo: UserAgentInfo | undefined;\n  /** Source of orign of the request. */\n  srcOfOrigin: GetConfigsValueByPropertiesRequest_SourceOfOrigin;\n}\n\n/** Request to get config overrides from AB sevice */\nexport interface GetConfigOverridesByPropertiesRequest {\n  /** Targeting data of this request. */\n  targetingInfo: TargetingInfo | undefined;\n  /** Matched AB study metadata. */\n  matchedAbStudyMetadata: ABStudyServingMetadata[];\n  /** Requested cof config names by caller. It will not be set for mobile client request. */\n  requestedCofConfigNames: string[];\n  /** whether to log exposure logging, default is to log exposure */\n  disableExposureLogging: boolean;\n  /** Whether to enable debug trace for this request */\n  enableDebug: boolean;\n}\n\n/** Struct holding properties for targeting/logging purpose. */\nexport interface TargetingProperties {\n  customIsFirstTime: boolean;\n}\n\n/** Request to get config overrides from AB service by RUID */\nexport interface GetConfigOverridesByRUIDRequest {\n  ruid: Ruid | undefined;\n  targetingProperties: TargetingProperties | undefined;\n  matchedAbStudyMetadata: ABStudyServingMetadata[];\n  requestedCofConfigNames: string[];\n  enableDebug: boolean;\n  disableExposureLogging: boolean;\n  requestedNamespaces: string[];\n}\n\n/** Response to get config overrides from AB service by RUID */\nexport interface GetConfigOverridesByRUIDResponse {\n  variableOverrides: COFVariableOverride[];\n  debugTrace: DebugTrace | undefined;\n}\n\nexport interface COFVariableOverride {\n  /** Namespace of the config. */\n  namespace: string;\n  /** Name of the config. */\n  configName: string;\n  /** Exp_id for exposure logging. */\n  expId: number;\n  /** Study name for exposure logging. */\n  studyName: string;\n  /** Override value for variable config. */\n  override: Value | undefined;\n  /** Client targeting expression if the config rule has any. */\n  clientTargetExpression: ClientTargetingExpression | undefined;\n  /** debug information to be bundled in case asked for */\n  abStepInfo: AbStepInfo | undefined;\n  /** Serving platform for this config. */\n  servePlatforms: ConfigResult_ServePlatform[];\n  /**\n   * ID of the budget group user is allocated to.BGID starts with 1.\n   * It will only be set when\n   * 1. it is a user level request\n   * 2. the config is used for Budget A/B purpose as well.\n   *\n   * @deprecated\n   */\n  budgetGroupId: number;\n  /** Whether CE can skip allocation logging for this study */\n  canSkipAllocationLogging: boolean;\n  /** RUID type assigned to this study. */\n  ruidType: Ruid_Type;\n  /** This is used to skip exposure logging on the client side as we remove the study name in CE if the flag passed from AB is set to true.. */\n  canSkipClientExposureLogging: boolean;\n}\n\nexport interface GetConfigOverridesByPropertiesResponse {\n  variableOverrides: COFVariableOverride[];\n}\n\nexport interface StudyData {\n  name: string;\n  experimentId: number;\n  variables: { [key: string]: string };\n  /** debug information to be bundled in case asked for */\n  abStepInfo: AbStepInfo | undefined;\n  /** Serving platform for a study. */\n  servePlatforms: StudyMetadata_ServePlatform[];\n  /** Whether CE can skip allocation logging for this study */\n  canSkipAllocationLogging: boolean;\n}\n\nexport interface StudyData_VariablesEntry {\n  key: string;\n  value: string;\n}\n\nexport interface GetConfigsValueByPropertiesResponse {\n  studyData: StudyData[];\n}\n\n/**\n * ///////////////////////////////////////////////////\n * ///// Called by AB Test Console\n * ///////////////////////////////////////////////////\n * The request to update study metadata.\n */\nexport interface UpdateStudyMetadataRequest {\n  studyMetadata: StudyMetadata[];\n  /** Name of the segmentation study, not set if it is not a segmentation study. */\n  segmentationStudyName: string;\n  /** List of removed segments for a segmentation study after study update, if any */\n  deletedSegments: UpdateStudyMetadataRequest_StudyIdentity[];\n}\n\nexport interface UpdateStudyMetadataRequest_StudyIdentity {\n  studyId: string;\n  version: number;\n}\n\n/**\n * TODO move intermediate fields into meta_values and make the struct more generic as well.\n * Struct representing study metadata. All fields are required.\n */\nexport interface StudyMetadata {\n  /** This map will be used to store some intermediate value. */\n  metaValues: { [key: string]: string };\n  studyId: string;\n  version: number;\n  servePlatforms: StudyMetadata_ServePlatform[];\n  treatments: StudyMetadata_Treatment[];\n  whitelistedCondition: StudyMetadata_WhitelistedCondition | undefined;\n  sliceRange: StudyMetadata_UserSliceRange | undefined;\n  options: StudyMetadata_AdvancedOptions | undefined;\n  targetingExpression: StudyMetadata_TargetingExpression | undefined;\n  studyUpdateTimestamp: number;\n  /**\n   * Deprecated please don't use\n   * repeated Segment segments = 11;\n   */\n  studyGuid: number;\n  /** Name of the proxy study if this sub study belongs to one. */\n  segmentationStudyName: string;\n  /** Order of the segment (within the segmentation study). */\n  segmentOrdinal: number;\n  /** Status of the study. */\n  status: StudyMetadata_Status;\n  /** RUID type assigned to this study. */\n  ruidType: Ruid_Type;\n  /** Type of the segment. */\n  segmentType: StudyMetadata_SegmentType;\n}\n\nexport enum StudyMetadata_ServePlatform {\n  UNKNOWN_PLATFORM = 0,\n  SERVER = 1,\n  CLIENT = 2,\n  UNRECOGNIZED = -1,\n}\n\n/** Status of the study */\nexport enum StudyMetadata_Status {\n  /** UNKNOWN_STATUS - Placeholder, should not happen. */\n  UNKNOWN_STATUS = 0,\n  /** DEPLOYED - Deployed study. */\n  DEPLOYED = 1,\n  /** COMPLETED - Completed study. */\n  COMPLETED = 2,\n  UNRECOGNIZED = -1,\n}\n\n/** Type of the segment. */\nexport enum StudyMetadata_SegmentType {\n  /** UNKNOWN_SEGMENT - Unknoww/Error */\n  UNKNOWN_SEGMENT = 0,\n  /** STANDARD_SEGMENT - Segment using standard A/B randomization and not used in rollout phase. */\n  STANDARD_SEGMENT = 1,\n  /** BUDGET_SEGMENT - Segment using Budget AB allocation. */\n  BUDGET_SEGMENT = 2,\n  /** ROLLOUT_SEGMENT - Segment in rollout phase. */\n  ROLLOUT_SEGMENT = 3,\n  UNRECOGNIZED = -1,\n}\n\nexport interface StudyMetadata_TargetingExpression {\n  operator: StudyMetadata_TargetingExpression_Operator;\n  children: StudyMetadata_TargetingExpression[];\n  property: StudyMetadata_TargetingExpression_Property;\n  predicateOperator: StudyMetadata_TargetingExpression_PredicateOperator;\n  value: string;\n}\n\nexport enum StudyMetadata_TargetingExpression_Operator {\n  UNKNOWN_OPERATOR = 0,\n  AND = 1,\n  OR = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport enum StudyMetadata_TargetingExpression_PredicateOperator {\n  UNKNOWN_PREDICATE_OPERATOR = 0,\n  EQUAL = 1,\n  NOT_EQUAL = 2,\n  GREATER_THAN_OR_EQUAL_TO = 3,\n  LESS_THAN_OR_EQUAL_TO = 4,\n  IN = 5,\n  UNRECOGNIZED = -1,\n}\n\nexport enum StudyMetadata_TargetingExpression_Property {\n  UNKNOWN_PROPERTY = 0,\n  /**\n   * DEVICE_MODEL - The model of the device that runs snapchat app.\n   * e.g. SM-G960U\n   */\n  DEVICE_MODEL = 1,\n  COUNTRY = 2,\n  OS = 3,\n  /**\n   * OS_VERSION - Version of the operating system on which the Snapchat app is running.\n   * e.g. 4.4.2\n   */\n  OS_VERSION = 4,\n  APP_VERSION = 5,\n  /**\n   * BUILD_FLAVOR - Build flavor of the snapchat app user is running.\n   * e.g. DEBUG, ALPHA, MASTER.\n   */\n  BUILD_FLAVOR = 6,\n  /**\n   * USER_ID - The Snapchat userId of the user. This is mainly used for whitelisting users to a specific value.\n   * e.g. PII, no example\n   */\n  USER_ID = 7,\n  /**\n   * LOCALE - The Locale of the users device. This may not be the locale that the app is displaying to the user.\n   * See APP_LOCALE\n   * e.g. en_us, en_gb, zh_cn\n   */\n  LOCALE = 8,\n  /**\n   * IS_CHARGING - Signal indicating if the device is charging or not, needs to be evaluated on CLIENT side.\n   * e.g. TRUE, FALSE\n   */\n  IS_CHARGING = 9,\n  /**\n   * BATTERY_LEVEL - Battery level of user's phone.\n   * e.g. HIGH, LOW\n   */\n  BATTERY_LEVEL = 10,\n  /**\n   * DEVICE_CLUSTER - Cluster of the device that runs snapchat app.\n   * e.g. 0, 1, 2, 3, 4, 5.\n   */\n  DEVICE_CLUSTER = 11,\n  /**\n   * IS_OFFLINE - Signal indicating if the device is offline or not, needs to be evaluated on CLIENT side.\n   * e.g. TRUE, FALSE\n   */\n  IS_OFFLINE = 12,\n  /**\n   * BANDWIDTH - Available device internal storage in bps.\n   * e.g. 800000, 1600000, 4000000, 16000000\n   */\n  BANDWIDTH = 13,\n  /**\n   * DEVICE_BRAND - The brand of the device mapped from the DEVICE_MODEL of the device.\n   * e.g. Samsung, Huawei, Sony\n   */\n  DEVICE_BRAND = 14,\n  /**\n   * IS_EMPLOYEE - Returns true when the user of the request is marked as an employee in Atlas.\n   * e.g. TRUE, FALSE.\n   */\n  IS_EMPLOYEE = 15,\n  USERNAME = 16,\n  /**\n   * IS_TEST_USER - Returns true when the user of the request is marked as a test user in Atlas.\n   * e.g. TRUE/FALSE\n   */\n  IS_TEST_USER = 17,\n  USER_PROFILE = 18,\n  /**\n   * SCREEN_WIDTH - The width of screen resolution in pixels\n   * e.g. 1024\n   */\n  SCREEN_WIDTH = 19,\n  /**\n   * SCREEN_HEIGHT - The height of screen resolution in pixels\n   * e.g. 1920\n   */\n  SCREEN_HEIGHT = 20,\n  /**\n   * HEVC_SUPPORT - Whether the device support HEVC\n   * e.g. true, false.\n   */\n  HEVC_SUPPORT = 21,\n  /**\n   * DISK_SIZE - Total size of the device internal storage in MB\n   * e.g. 1000\n   */\n  DISK_SIZE = 22,\n  /**\n   * DISK_AVAILABLE - Available device internal storage in MB.\n   * e.g. 1000\n   */\n  DISK_AVAILABLE = 23,\n  /**\n   * NETWORK_TYPE - Type of network the user is currently using when the request is handled by our service.\n   * This property is evaluated on the server and will not change between sync calls.\n   * e.g. CELLULAR, WIFI\n   */\n  NETWORK_TYPE = 24,\n  /**\n   * MAX_VIDEO_WIDTH - The maximum playable video width (assumes portrait orientation) in pixels\n   * e.g. 1024\n   */\n  MAX_VIDEO_WIDTH = 25,\n  /**\n   * MAX_VIDEO_HEIGHT - The maximum playable video height (assumes portrait orientation) in pixels\n   * e.g. 1920\n   */\n  MAX_VIDEO_HEIGHT = 26,\n  /**\n   * MEDIA_TYPE_DEPRECATED - Type of media currently being processed.\n   * e.g. IMAGE, VIDEO, GIF, AUDIO\n   *\n   * @deprecated\n   */\n  MEDIA_TYPE_DEPRECATED = 27,\n  IS_PUBLIC_STORY = 28,\n  IS_OFFICIAL_STORY = 29,\n  /**\n   * IS_NETWORK_METERED - Returns true when the network is metered at the time of the request.\n   * This will not change between sync calls.\n   * e.g. TRUE/FALSE\n   */\n  IS_NETWORK_METERED = 30,\n  /**\n   * IS_ROAMING - Returns true when the network is metered at the time of the request.\n   * This property is evaluated on the server and will not change in value between sync calls.\n   * e.g. TRUE/FALSE\n   */\n  IS_ROAMING = 31,\n  /**\n   * APP_ENGAGEMENT_LEVEL - Overall engagement with the app. Based on app_open_count\n   * See definitions of engagement level properties here:\n   * https://docs.google.com/document/d/1goLlXMdDGXN0B3zER_dPhl9vFk_TIjeNCqQb4zIQyBM/edit?pli=1\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  APP_ENGAGEMENT_LEVEL = 32,\n  /**\n   * COMMUNICATION_ENGAGEMENT_LEVEL - Users engagement with the chat. Based on send direct snap or chat engagement level\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  COMMUNICATION_ENGAGEMENT_LEVEL = 33,\n  /**\n   * FRIEND_STORY_ENGAGEMENT_LEVEL - Users engagement with their friends stories.\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  FRIEND_STORY_ENGAGEMENT_LEVEL = 34,\n  /**\n   * PUBLIC_USER_STORY_ENGAGEMENT_LEVEL - Public user story view engagement level\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  PUBLIC_USER_STORY_ENGAGEMENT_LEVEL = 35,\n  /**\n   * PUBLISHER_STORY_ENGAGEMENT_LEVEL - Publisher story view engagement level\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  PUBLISHER_STORY_ENGAGEMENT_LEVEL = 36,\n  /**\n   * LENS_ENGAGEMENT_LEVEL - Lens engagement level based on number of lens swipes a user has\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  LENS_ENGAGEMENT_LEVEL = 37,\n  /**\n   * CAMERA_CONTEXT - The context the user has opened the camera from.\n   * This is a realtme property that evaluated on each use and requires CameraProvided signals for evaluation.\n   * e.g. MAIN, REPLY, PROFILE\n   */\n  CAMERA_CONTEXT = 38,\n  /**\n   * CAMERA_DIRECTION - The direction of the camera.\n   * This is a realtme property that evaluated on each use and requires CameraProvided signals for evaluation.\n   * e.g. FRONT, BACK\n   */\n  CAMERA_DIRECTION = 39,\n  /**\n   * CAMERA_FLASH_STATE - The current state of the flash when a Snap was captured.\n   * This is a realtme property that evaluated on each use and requires CameraProvided signals for evaluation.\n   * e.g. OFF, ON\n   */\n  CAMERA_FLASH_STATE = 40,\n  /**\n   * CAMERA_API - The current camera API stack that is being used on the device.\n   * This is a realtme property that evaluated on each use and requires CameraProvided signals for evaluation.\n   * e.g. CAMERA_1, CAMERA_2, ARCORE\n   */\n  CAMERA_API = 41,\n  /**\n   * NON_FRIEND_STORY_ENGAGEMENT_LEVEL - Non-friend story (public + publisher) view engagement level\n   * e.g. IDLE, CASUAL, REGULAR, POWER\n   */\n  NON_FRIEND_STORY_ENGAGEMENT_LEVEL = 42,\n  FOLLOWER_SIZE_LEVEL = 43,\n  /**\n   * LEGACY_MUSHROOM_CONTENT_TYPE - The legacy content type that is being used in content manager.\n   * See LegacyMushroomContent type for values:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/master/proto/cdp/cof/content_manager_provided_signals.proto\n   * e.g. AD_SNAP, SNAP, STORY_SNAP, LENS_ICON, .....\n   */\n  LEGACY_MUSHROOM_CONTENT_TYPE = 44,\n  /**\n   * SNAP_SOURCE - The source of the snap that was captured. Required feature_provided signals to be evaluated.\n   * Definition is snapchat.cdp.media.SnapSource\n   * e.g. CAMERA, CAMERA_ROLL, GALLERY, IN_CHAT\n   */\n  SNAP_SOURCE = 45,\n  UPLOAD_BANDWIDTH = 46,\n  /**\n   * DAYS_SINCE_CREATION - The number of days since this users account was created.\n   * This is useful for rules that you only want to apply to new or old users.\n   * e.g. [0..MAX_INT]\n   */\n  DAYS_SINCE_CREATION = 47,\n  /**\n   * CAMERA2_LEVEL - The Camera2 API support level of the device.\n   * This is a realtime property that evaluated on each use and requires CameraProvided signals for evaluation.\n   * e.g. LEGACY, LIMITED, FULL, LEVEL_3\n   */\n  CAMERA2_LEVEL = 48,\n  /**\n   * CAMERA_NIGHT_MODE_STATE - The night mode state of the camera.\n   * This is a realtme property that evaluated on each use and requires CameraProvided signals for evaluation.\n   * e.g. ON, OFF\n   */\n  CAMERA_NIGHT_MODE_STATE = 49,\n  /** USER_PERSONA - Persona of the user */\n  USER_PERSONA = 50,\n  /** USER_LANGUAGE - Language used by user. */\n  USER_LANGUAGE = 51,\n  /**\n   * USER_CREATION_TIME - The unix epoch time at which the user was created.\n   * This is useful if you want to lock a cohort of users created at the same time for cohort testing.\n   * e.g. unix_epoch time\n   */\n  USER_CREATION_TIME = 52,\n  /**\n   * VIDEO_DURATION - The duration of a video in ms. This requires a feature provided signal to be passed\n   * e.g. 6870, 1001\n   */\n  VIDEO_DURATION = 53,\n  /** MOBILE_NETWORK_TYPE - Deprecated */\n  MOBILE_NETWORK_TYPE = 54,\n  AGGREGATED_USER_BANDWIDTH = 55,\n  /**\n   * REALTIME_MOBILE_NETWORK_GENERATION - The type of mobile network the user is on.\n   * This is evaluated in realtime by CirumsstanceEngine.\n   * e.g. 3G, 4G, 5G\n   */\n  REALTIME_MOBILE_NETWORK_GENERATION = 56,\n  /**\n   * REALTIME_NETWORK_TYPE - The type network the user is on.\n   * This is evaluated in realtime by CirumsstanceEngine.\n   * e.g. WiFi, WWAN\n   */\n  REALTIME_NETWORK_TYPE = 57,\n  /**\n   * REALTIME_NETWORK_IS_METERED - If the network is currently a metered connection.\n   * This is evaluated in realtime by CirumsstanceEngine.\n   * e.g. TRUE, FALSE\n   */\n  REALTIME_NETWORK_IS_METERED = 58,\n  /**\n   * REALTIME_NETWORK_IS_ROAMING - Tells if the current network connection is roaming.\n   * This is evaluated in realtime by CirumsstanceEngine.\n   * e.g. TRUE, FALSE\n   */\n  REALTIME_NETWORK_IS_ROAMING = 59,\n  /**\n   * LENS_CLUSTER_BIASED - The lens cluster of the device based on the biased algorithm.\n   * e.g. [-1..6]\n   */\n  LENS_CLUSTER_BIASED = 60,\n  /**\n   * LENS_CLUSTER_LOG - The lens cluster of the device based on a log distribution\n   * e.g. [-1..6]\n   */\n  LENS_CLUSTER_LOG = 61,\n  /**\n   * LENS_CLUSTER_ORIG - The lens cluster of the device based on a normal distribution\n   * e.g. [-1..6]\n   */\n  LENS_CLUSTER_ORIG = 62,\n  /**\n   * LENS_CLUSTER_ORIG_4 - The lens cluster of the device based on a normal distribution\n   * e.g. [-1..4]\n   */\n  LENS_CLUSTER_ORIG_4 = 63,\n  /**\n   * LENS_CLUSTER_BIASED_LOG - The lens cluster of the device based on a biased log distribution\n   * e.g. [-1..6]\n   */\n  LENS_CLUSTER_BIASED_LOG = 64,\n  /**\n   * APP_LOCALE - The Locale of that our app is currently using. This is a subset of the locales that the device may be in\n   * e.g. en_us, en_gb, zh_cn\n   */\n  APP_LOCALE = 65,\n  /**\n   * DEVICE_COMMON_NAME - The common name of the device that is mapped from the DEVICE_MODEL\n   * e.g. Galaxy S7, Galaxy S7 Edge, P20 Lite\n   */\n  DEVICE_COMMON_NAME = 66,\n  /**\n   * PICTURE_MODE - The mode in which the camera will return images from the takepicture command.\n   * This requires FeaatureProvidedSignals for evaluation\n   * e.g. GPU, JPEG\n   */\n  PICTURE_MODE = 67,\n  /**\n   * USER_FRIEND_COUNT - The number of friends a user has.\n   * e.g. [0 .. 5000]\n   */\n  USER_FRIEND_COUNT = 68,\n  /**\n   * BOLT_USE_CASE - The current usecase of the request to BOLT, this requires feature provided signals\n   * e.g. int values\n   */\n  BOLT_USE_CASE = 69,\n  L90_COUNTRY = 70,\n  /** STUB - Deprecated */\n  STUB = 71,\n  IS_TRUE = 72,\n  STORY_POST_RATIO = 73,\n  GENDER = 74,\n  /** INFERRED_AGE_BUCKET - Inferred age bucket of the user */\n  INFERRED_AGE_BUCKET = 75,\n  /** STORIES - Number of posted stories in the last 7 days */\n  STORIES = 76,\n  /** SENDS - Total number of send snaps plus number of posted stories in the last 7 days */\n  SENDS = 77,\n  /** SNAP_CREATE_L7 - L7 level for snap creation engagements */\n  SNAP_CREATE_L7 = 78,\n  /** STORY_POST_L7 - L7 level for story post engagements */\n  STORY_POST_L7 = 79,\n  /** COMMUNICATION_L7 - L7 level for communication engagements */\n  COMMUNICATION_L7 = 80,\n  /** DF_L7 - L7 level for discover feed engagements */\n  DF_L7 = 81,\n  /** APP_L7 - L7 level for app engagements */\n  APP_L7 = 82,\n  /** DAYS_SINCE_CREATION_BUCKET - Bucket for days since creation. */\n  DAYS_SINCE_CREATION_BUCKET = 83,\n  /** BIDIRECTIONAL_FRIEND_STATUS - bucket for number of bidirectional friends. */\n  BIDIRECTIONAL_FRIEND_STATUS = 84,\n  STORY_POST_PREDICTION = 85,\n  BOLT_CDN_EXPERIMENTATION_ID = 86,\n  MINS_SINCE_LAST_LENS_ACTIVATION = 87,\n  APP_OPENS = 88,\n  LENS_SWIPES = 89,\n  LENS_SNAPS = 90,\n  LENS_OPS = 91,\n  W1_APP_OPENS = 92,\n  W1_LENS_SWIPES = 93,\n  W1_LENS_SNAPS = 94,\n  W1_LENS_OPS = 95,\n  W2_APP_OPENS = 96,\n  W2_LENS_SWIPES = 97,\n  W2_LENS_SNAPS = 98,\n  W2_LENS_OPS = 99,\n  W34_APP_OPENS = 100,\n  W34_LENS_SWIPES = 101,\n  W34_LENS_SNAPS = 102,\n  W34_LENS_OPS = 103,\n  LENS_SWIPES_PREDICTION = 104,\n  REGISTRATION_COUNTRY = 105,\n  IP_ASN = 106,\n  IP_REGION = 107,\n  IP_CITY = 108,\n  HAS_USER_ID = 109,\n  /**\n   * HAS_BITMOJI - Whether a user has bitmoji\n   * e.g. TRUE, FALSE.\n   */\n  HAS_BITMOJI = 110,\n  NUM_APP_OPENS_LAST_8_DAYS = 111,\n  MINS_SINCE_LAST_SNAPPABLE_LENS_ACTIVATION = 112,\n  NUM_FEATURE_STORY_VIEW_DAYS_L7 = 113,\n  NUM_FEATURE_STORY_SYNC_DAYS_L7 = 114,\n  HEXAGON_NN_SUPPORTED_VERSION = 115,\n  DAYS_SINCE_LAST_LOGIN_OR_OPEN = 116,\n  SPECTACLES_VERSION = 117,\n  /** NETWORK_QUALITY - Quality of the network. */\n  NETWORK_QUALITY = 118,\n  /**\n   * DEVICE_MEMORY_MB - Device memory in MB.\n   * e.g. 4000, 8000\n   */\n  DEVICE_MEMORY_MB = 119,\n  /**\n   * DEVICE_GL_VERSION - Device OpenGL version, value as (major * 100 + minor). Example: 3.2 is reported as 302\n   * e.g. 302, 301\n   */\n  DEVICE_GL_VERSION = 120,\n  /** SNAP_PRO_STATUS - Snap pro status of the user. */\n  SNAP_PRO_STATUS = 121,\n  DEVICE_VP9_DECODING_SUPPORT = 122,\n  AVG_FRIEND_STORY_VIEW_COUNT_L7 = 123,\n  GAME_JOIN_TIME = 124,\n  GAME_LAST_ACTIVE_TIME = 125,\n  DAYS_SINCE_FIRST_GAME_ACTIVITY = 126,\n  DAYS_SINCE_LAST_GAME_ACTIVITY = 127,\n  PF_PAGE_SESSIONS_WITH_LONG_IMP = 128,\n  /**\n   * STICKY_MAX_CONNECTION_TYPE - Client side property that is based on the fastest connection type that the device has used in the last week. On the client, the device updates and persists the network type in use with a timestamp. During retrieval that data is used to determine the fastest connection type that was used within the last week.\n   * e.g. 4G, 5G\n   */\n  STICKY_MAX_CONNECTION_TYPE = 129,\n  /**\n   * WIRELESS_CARRIER - Server side property that is evaluated based based on the wireless carrier that the device has during sync.\n   * e.g. GoogleFi, Verizon ...\n   */\n  WIRELESS_CARRIER = 130,\n  WITH_ANIMATED_OVERLAY = 131,\n  MINIS_JOIN_TIME = 132,\n  MINIS_LAST_ACTIVE_TIME = 133,\n  DAYS_SINCE_FIRST_MINIS_ACTIVITY = 134,\n  DAYS_SINCE_LAST_MINIS_ACTIVITY = 135,\n  /**\n   * DEVICE_AV1_DECODING_SUPPORT - Server side property that is built from codec benchmarks to determine if a device supports av1\n   * e.g. SOFTWARE, HARDWARE\n   */\n  DEVICE_AV1_DECODING_SUPPORT = 136,\n  /**\n   * APP_PACKAGE_INSTALLER - Server side property that targets how an app was installed. This data is provided in the targetingQuery request.\n   * e.g. com.android.vending, com.google.android.packageinstaller, com.lenovo.anyshare.gps, com.huawei.appmarket, cn.xender\n   */\n  APP_PACKAGE_INSTALLER = 137,\n  /** URL - A client-determined URL */\n  URL = 138,\n  /**\n   * ESTIMATED_DURATION_FOR_EVENT_MS - The estimated duration for a config-specific event in milliseconds\n   * For example, for a config that chooses upload location, use the estimated time to upload a file\n   * e.g. 100\n   */\n  ESTIMATED_DURATION_FOR_EVENT_MS = 139,\n  /**\n   * MEDIA_SOURCE - Content's origin prior to being injected into the MDP stack.\n   * e.g. CHAT, MEMORIES, LENS, MAPS\n   */\n  MEDIA_SOURCE = 140,\n  /**\n   * ASSET_TYPE - How to compose an individual asset into one larger logical asset.\n   * e.g. BLOOPS_STICKER, MUSIC, RAW_MEDIA, CANVAS_STICKER, etc.\n   */\n  ASSET_TYPE = 141,\n  /**\n   * STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL - This is based on percentile of number of story views in 5th tab user falls into\n   * [-1 (unknown), 0 (no views), 1 (casual: view=1), 2 (regular: view=[2,3]), 3 (power: view>=4)]\n   */\n  STORY_VIEWS_5TH_TAB_ENGAGEMENT_LEVEL = 142,\n  /**\n   * REPORTED_AGE - This age based on user reported birthday.\n   * e.g. 18\n   */\n  REPORTED_AGE = 143,\n  /**\n   * ANDROID_MOBILE_SERVICES_PROVIDER - Android has multiple sources of mobile services which provide functionality like GPS and Firebase APIs.\n   * e.g. GMS, HMS\n   */\n  ANDROID_MOBILE_SERVICES_PROVIDER = 144,\n  /** IS_ACQUIRED_USER - true if the user comes from a paid channel */\n  IS_ACQUIRED_USER = 145,\n  /** YDPI - Physical pixels per inch of the screen in the Y dimension e.g. 440 */\n  YDPI = 146,\n  /** BOLT_IS_CONTENT_POPULAR - A boolean representing whether the content being resolved is popular or not. */\n  BOLT_IS_CONTENT_POPULAR = 147,\n  /** CAPTURE_MODE - e.g. Default, Timeline */\n  CAPTURE_MODE = 148,\n  /**\n   * BIDIRECTIONAL_FRIEND_STATUS_VELLUM - This new breakdown is the same as what has been used for husky runbook\n   * e.g. '0-5', '6-30', etc\n   */\n  BIDIRECTIONAL_FRIEND_STATUS_VELLUM = 149,\n  /** ORIGIN - Origin or “application name” of user agent. */\n  ORIGIN = 150,\n  /** LENSCORE_VERSION - Lens core version which will be passed by all clients */\n  LENSCORE_VERSION = 151,\n  /** SNAPKIT_APP_ID - SnapKit app id from SnapKit Dev Portal */\n  SNAPKIT_APP_ID = 152,\n  /** GPU - gpu as string e.g. Adreno 650 */\n  GPU = 153,\n  /** CHIPSET_NAME - Chipset name as string  e.g. Qualcomm Snapdragon */\n  CHIPSET_NAME = 154,\n  /** CHIPSET_VERSION - Chipset version as int  e.g. 865 */\n  CHIPSET_VERSION = 155,\n  /** HAS_ZERO_IDFA - True if user has a zero-ed out IDFA */\n  HAS_ZERO_IDFA = 156,\n  /** LIMIT_AD_TRACKING - True if user has limit ad tracking enabled */\n  LIMIT_AD_TRACKING = 157,\n  /**\n   * ATT_AUTH_STATUS - Users app tracking transparency authentication status\n   * values = [RESTRICTED, NOT_DETERMINED, DENIED, AUTHORIZED]\n   */\n  ATT_AUTH_STATUS = 158,\n  /** VP9_SOFTWARE_DECODING_SUPPORTED - A boolean representing if VP9 software decoding is supported */\n  VP9_SOFTWARE_DECODING_SUPPORTED = 159,\n  /** AV1_SOFTWARE_DECODING_SUPPORTED - A boolean representing if AV1 software decoding is supported */\n  AV1_SOFTWARE_DECODING_SUPPORTED = 160,\n  /** WITH_MUSIC - A boolean to indicate whether there is music edits (e.g. music sticker). */\n  WITH_MUSIC = 161,\n  /** CAMERA2_FRONT_SS_GAIN_OVER_TPA - An integer for front camera2. 100 * (snap send image using screenshot - snap send image using TPA) / snap send image using TPA */\n  CAMERA2_FRONT_SS_GAIN_OVER_TPA = 162,\n  /** ATTACHMENT_TOOL_V2 - A boolean to indicate whether attachment tool v2 is enabled for this user. True is enabled */\n  ATTACHMENT_TOOL_V2 = 163,\n  /**\n   * MEDIA_TYPE - Type of media currently being processed.\n   * e.g. IMAGE, VIDEO, GIF, AUDIO\n   */\n  MEDIA_TYPE = 164,\n  /**\n   * USER_PERSONA_V3 - User persona V3 defined in https://github.sc-corp.net/Snapchat/ab-test-console/blob/master/CircumstancesCMS/circumstances-proto/src/main/proto/user_property.proto\n   * e.g. STORY_POSTER_V3, MAPPER_V3, CAMERA_LOVER_V3\n   */\n  USER_PERSONA_V3 = 165,\n  /**\n   * FEATURE_PROVIDED_SIZE - A client provided integer representing size. The units is decided by the caller.\n   * This will be evaluated using FeatureProvidedSignals.size\n   */\n  FEATURE_PROVIDED_SIZE = 166,\n  /**\n   * SNAPS_SEND_WITH_HEVC - An Int property showing the number of snaps the user sent in last 7 days, which the receivers had HEVC support.\n   * The receiver HEVC support is defined by min of HEVC support, if multiple devices are used in the last 7 days.\n   */\n  SNAPS_SEND_WITH_HEVC = 167,\n  /**\n   * SNAPS_SEND_WITHOUT_HEVC - An Int property showing the number of snaps the user sent in last 7 days, which the receivers did nor have HEVC support.\n   * The receiver HEVC support is defined by min of HEVC support, if multiple devices are used in the last 7 days.\n   */\n  SNAPS_SEND_WITHOUT_HEVC = 168,\n  /** CAMERA2_NATIVE_CRASH_OVER_CAMERA1 - An integer value. 100 * (camera 2 native crash rate - camera 1 native crash rate) / camera 1 native crash rate */\n  CAMERA2_NATIVE_CRASH_OVER_CAMERA1 = 169,\n  /** CAMERA2_G2S_LATENCY_OVER_CAMERA1 - An integer value. 100 * (camera 2 G2S latency - camera 1 G2S latency) / camera 1 G2S latencyTargetingExpressionValidator.java */\n  CAMERA2_G2S_LATENCY_OVER_CAMERA1 = 170,\n  /** SCANNED_CATEGORY_IDS - The ids of the categories that are currently being scanned for (e.g. Amazon, Photomath, etc) */\n  SCANNED_CATEGORY_IDS = 171,\n  /**\n   * CONTENT_VIEW_SOURCE - ContentViewSource (mirrored from Blizzard enum) which identified Opera session\n   * e.g. DF_FRIENDS, NYC, DF_FOR_YOU.  See https://github.sc-corp.net/Snapchat/snapchat/blob/master/blizzard/schema/blizzard-schema/codeGen/src/main/java/com/snapchat/analytics/schema/events/ContentViewSource.java\n   */\n  CONTENT_VIEW_SOURCE = 172,\n  /**\n   * IS_INTERNAL - A combination of the IS_EMPLOYEE, IS_TEST_USER, and BUILD_FLAVOR for internal builds\n   * Used to align INTERNAL status of configs with develop mode of AB studies\n   */\n  IS_INTERNAL = 173,\n  /** IS_WEB - A boolean to indicate whether there is web browser request */\n  IS_WEB = 174,\n  /** RECIPIENTS_SUPPORT_HEVC - A boolean indicating whether a group of recipients support High Efficiency Video Encoding (HEVC) */\n  RECIPIENTS_SUPPORT_HEVC = 175,\n  /**\n   * APP_OPEN_TO_MAP - Probabilty [0,100] of a user going to X page after oppening the app\n   * X IN (map, lenses, friendfeeds, memories, community, spotlight) pages\n   */\n  APP_OPEN_TO_MAP = 176,\n  APP_OPEN_TO_FRIENDSFEED = 177,\n  APP_OPEN_TO_LENSES = 178,\n  APP_OPEN_TO_MEMORIES = 179,\n  APP_OPEN_TO_COMMUNITY = 180,\n  APP_OPEN_TO_SPOTLIGHT = 181,\n  IS_IMPACTED_BY_PINC_893 = 182,\n  DAYS_BEFORE_BIRTHDAY = 183,\n  HAS_BIPA = 184,\n  /** EMAIL_VERIFIED - Whether user's email has verified */\n  EMAIL_VERIFIED = 185,\n  /** PHONE_VERIFIED - Whether user's phone number has verified */\n  PHONE_VERIFIED = 186,\n  /** NOTIFICATION_PERM_GRANTED - Whether notification permission has granted */\n  NOTIFICATION_PERM_GRANTED = 187,\n  /** CONTACT_PERM_GRANTED - Whether contact permission has granted */\n  CONTACT_PERM_GRANTED = 188,\n  /** MUTUAL_FRIENDS_COUNT - Mutual friends count */\n  MUTUAL_FRIENDS_COUNT = 189,\n  /** GROUPS_COUNT - Groups count */\n  GROUPS_COUNT = 190,\n  /** SPOTLIGHT_STORY_ENGAGEMENT_STATUS - Spotlight user cohort */\n  SPOTLIGHT_STORY_ENGAGEMENT_STATUS = 191,\n  /** HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS - Whether user has non-team snapchat conversations */\n  HAS_NON_TEAM_SNAPCHAT_CONVERSATIONS = 192,\n  /** COGNAC_APP_ID - A Cognac game/mini id that a user is playing */\n  COGNAC_APP_ID = 193,\n  /** PLAYBACK_ITEM_TYPE - Opera playback item type */\n  PLAYBACK_ITEM_TYPE = 194,\n  /**\n   * SUP_IS_BIRTHDAY_PARTY_ENABLED - SUP's birthday party enabled:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/3554d12/proto/sup/sup.proto#L87\n   */\n  SUP_IS_BIRTHDAY_PARTY_ENABLED = 195,\n  /**\n   * SUP_FHP_LAST_INTERACTION_TIME_MILLIS_TO_NOW - SUP's fhp last interaction time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L990\n   */\n  SUP_FHP_LAST_INTERACTION_TIME_MILLIS_TO_NOW = 196,\n  /**\n   * SUP_FHP_CONTACT_SYNC_INTERACTION_COUNT - SUP's fhp contact sync interaction count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L992\n   */\n  SUP_FHP_CONTACT_SYNC_INTERACTION_COUNT = 197,\n  /**\n   * SUP_FHP_CONTACT_SYNC_LAST_SHOWN_TIME_MILLIS_TO_NOW - SUP's fhp contact sync prompt first shown time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L994\n   */\n  SUP_FHP_CONTACT_SYNC_LAST_SHOWN_TIME_MILLIS_TO_NOW = 198,\n  /**\n   * SUP_FHP_NOTIFICATION_PERMISSION_INTERACTION_COUNT - SUP's fhp notification permission prompt interaction counter, including dismisses and clicks:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L996\n   */\n  SUP_FHP_NOTIFICATION_PERMISSION_INTERACTION_COUNT = 199,\n  /**\n   * SUP_FHP_NOTIFICATION_PERMISSION_LAST_SHOWN_TIME_MILLIS_TO_NOW - SUP's fhp notification permission prompt first shown time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L998\n   */\n  SUP_FHP_NOTIFICATION_PERMISSION_LAST_SHOWN_TIME_MILLIS_TO_NOW = 200,\n  /**\n   * SUP_FHP_PHONE_VERIFICATION_INTERACTION_COUNT - SUP's fhp phone verification prompt interaction counter, including dismisses and clicks:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1000\n   */\n  SUP_FHP_PHONE_VERIFICATION_INTERACTION_COUNT = 201,\n  /**\n   * SUP_FHP_PHONE_VERIFICATION_LAST_SHOWN_TIME_MILLIS_TO_NOW - SUP's fhp phone verification prompt first shown time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1002\n   */\n  SUP_FHP_PHONE_VERIFICATION_LAST_SHOWN_TIME_MILLIS_TO_NOW = 202,\n  /**\n   * SUP_FHP_BIRTHDAY_PARTY_INTERACTION_COUNT - SUP's fhp birthday party prompt interaction counter, including dismisses and clicks:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1004\n   */\n  SUP_FHP_BIRTHDAY_PARTY_INTERACTION_COUNT = 203,\n  /**\n   * SUP_FHP_BIRTHDAY_PARTY_LAST_SHOWN_TIME_MILLIS_TO_NOW - SUP's fhp birthday party prompt first shown time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1006\n   */\n  SUP_FHP_BIRTHDAY_PARTY_LAST_SHOWN_TIME_MILLIS_TO_NOW = 204,\n  /**\n   * SUP_FHP_EMAIL_VERIFICATION_INTERACTION_COUNT - SUP's fhp email verification prompt interaction counter, including dismisses and clicks:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1008\n   */\n  SUP_FHP_EMAIL_VERIFICATION_INTERACTION_COUNT = 205,\n  /**\n   * SUP_FHP_EMAIL_VERIFICATION_LAST_SHOWN_TIME_MILLIS_TO_NOW - SUP's fhp email verification prompt first shown time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1010\n   */\n  SUP_FHP_EMAIL_VERIFICATION_LAST_SHOWN_TIME_MILLIS_TO_NOW = 206,\n  /** HAS_USED_SPECTACLES - Whether the user has used Spectacles (incl. Cheerios) */\n  HAS_USED_SPECTACLES = 207,\n  /** BOLT_CLIENT_APP_STATE - Enum indicating client App State (Used by BOLT to create targeted network rules) */\n  BOLT_CLIENT_APP_STATE = 208,\n  /** EMAIL_SET - Whether user's email has been set (might or might not be verified) */\n  EMAIL_SET = 209,\n  /** BITMOJI_SET - Whether user's bitmoji has been set */\n  BITMOJI_SET = 210,\n  /** QUICK_TAP_CAMERA_SUPPORTED_ENABLED - Quick tap on camera is supported and enabled */\n  QUICK_TAP_CAMERA_SUPPORTED_ENABLED = 211,\n  /** HAS_ADD_FRIENDS_REQUEST - Whether user has add friends request */\n  HAS_ADD_FRIENDS_REQUEST = 212,\n  /** APP_LAUNCH_FROM_PUSH - App launched from push notification */\n  APP_LAUNCH_FROM_PUSH = 213,\n  /** APP_LAUNCH_TYPE - App launch type: cold start, warm start, registration and login */\n  APP_LAUNCH_TYPE = 214,\n  /** BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT - Billboard campaign level locally tracked impression count */\n  BILLBOARD_CAMPAIGN_LOCAL_IMPRESSION_COUNT = 215,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW - Billboard campaign level locally tracked last impression time in secs to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_IMPRESSION_TIME_SECS_TO_NOW = 216,\n  /** BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT - Billboard campaign level locally tracked continuous dismiss count */\n  BILLBOARD_CAMPAIGN_LOCAL_CONTINUOUS_DISMISS_COUNT = 217,\n  /** FST_NUM_IN_APP_WARNINGS - FST number of in app warnings to show */\n  FST_NUM_IN_APP_WARNINGS = 218,\n  /** FST_SHOULD_CHANGE_PASSWORD - FST user should change password */\n  FST_SHOULD_CHANGE_PASSWORD = 219,\n  /** FST_IS_BACKGROUND_CHECK - Whether it's a background check or foreground check. Android specific */\n  FST_IS_BACKGROUND_CHECK = 220,\n  /**\n   * SUP_FST_IDENTITY_VERIFICATION_IMPRESSION_COUNT - SUP's fst identity verification prompt impression count\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L648\n   */\n  SUP_FST_IDENTITY_VERIFICATION_IMPRESSION_COUNT = 221,\n  /**\n   * SUP_FST_IDENTITY_VERIFICATION_LAST_IMPRESSION_TIME_SECS_TO_NOW - SUP's fst identity verification prompt last impression time in secs to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L647\n   */\n  SUP_FST_IDENTITY_VERIFICATION_LAST_IMPRESSION_TIME_SECS_TO_NOW = 222,\n  /**\n   * SUP_FST_FRIEND_ADD_LAST_IMPRESSION_TIME_SECS_TO_NOW - SUP's fst friend reciprocation prompt last impression time in secs to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L482\n   */\n  SUP_FST_FRIEND_ADD_LAST_IMPRESSION_TIME_SECS_TO_NOW = 223,\n  /**\n   * SUP_FST_CONTACT_SYNC_IMPRESSION_COUNT - SUP's fst contact sync impression count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L536\n   */\n  SUP_FST_CONTACT_SYNC_IMPRESSION_COUNT = 224,\n  /**\n   * SUP_FST_CONTACT_SYNC_LAST_IMPRESSION_TIME_SECS_TO_NOW - SUP's fst contact sync last impression time in secs to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L537\n   */\n  SUP_FST_CONTACT_SYNC_LAST_IMPRESSION_TIME_SECS_TO_NOW = 225,\n  /**\n   * SUP_FST_BITMOJI_CREATION_IMPRESSION_COUNT - SUP's fst bitmoji creation impression count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L841\n   */\n  SUP_FST_BITMOJI_CREATION_IMPRESSION_COUNT = 226,\n  /**\n   * SUP_FST_BITMOJI_CREATION_LAST_IMPRESSION_TIME_SECS_TO_NOW - SUP's fst bitmoji creation last impression time in secs to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L828\n   */\n  SUP_FST_BITMOJI_CREATION_LAST_IMPRESSION_TIME_SECS_TO_NOW = 227,\n  /**\n   * SUP_FST_USER_REACHABILITY_LAST_IMPRESSION_TIME_SECS_TO_NOW - SUP's fst user reachability last impression time in secs to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L986\n   */\n  SUP_FST_USER_REACHABILITY_LAST_IMPRESSION_TIME_SECS_TO_NOW = 228,\n  /**\n   * SUP_FST_BIPA_HAS_CLICKED - SUP's fst bipa has been accepted:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L908\n   */\n  SUP_FST_BIPA_HAS_CLICKED = 229,\n  /**\n   * INCLUSION_PANEL_MEMBER - Flag to indicate that the user took part in the inclusion (Made for me) panel.\n   * True if the user did, false otherwise.\n   */\n  INCLUSION_PANEL_MEMBER = 230,\n  /** AUDIO_RECORD_PERM_GRANTED - Whether audio record permission has granted */\n  AUDIO_RECORD_PERM_GRANTED = 231,\n  /** MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT - Mutual Friends with birthday count */\n  MUTUAL_FRIENDS_WITH_BIRTHDAY_COUNT = 232,\n  /** BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT - Billboard campaign level locally tracked dismiss count */\n  BILLBOARD_CAMPAIGN_LOCAL_DISMISS_COUNT = 233,\n  /**\n   * SUP_PAC_PHONE_VERIFICATION_DISMISS_COUNT - SUP's pac phone verification dismiss count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L1092\n   */\n  SUP_PAC_PHONE_VERIFICATION_DISMISS_COUNT = 234,\n  /**\n   * SUP_PAC_BIRTHDAY_MINI_IMPRESSION_COUNT - SUP's pac birthday mini impression count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L754\n   */\n  SUP_PAC_BIRTHDAY_MINI_IMPRESSION_COUNT = 235,\n  /**\n   * SUP_PAC_BIRTHDAY_MINI_DISMISS_COUNT - SUP's pac birthday mini dismiss count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L1088\n   */\n  SUP_PAC_BIRTHDAY_MINI_DISMISS_COUNT = 236,\n  /**\n   * SUP_PAC_RUN_FOR_OFFICE_MINI_IMPRESSION_COUNT - SUP's pac run for office mini impression count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L760\n   */\n  SUP_PAC_RUN_FOR_OFFICE_MINI_IMPRESSION_COUNT = 237,\n  /**\n   * SUP_PAC_RUN_FOR_OFFICE_MINI_DISMISS_COUNT - SUP's pac run for office mini dismiss count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L1090\n   */\n  SUP_PAC_RUN_FOR_OFFICE_MINI_DISMISS_COUNT = 238,\n  /**\n   * SUP_PAC_FRIEND_CHECKUP_LAST_SHOWN_TIME_MILLIS_TO_NOW - SUP's pac friend checkup card was last shown in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L931\n   */\n  SUP_PAC_FRIEND_CHECKUP_LAST_SHOWN_TIME_MILLIS_TO_NOW = 239,\n  /**\n   * SUP_PAC_FRIEND_CHECKUP_IMPRESSION_COUNT - SUP's pac friend checkup card's impression count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L933\n   */\n  SUP_PAC_FRIEND_CHECKUP_IMPRESSION_COUNT = 240,\n  /**\n   * SUP_PAC_FRIEND_CHECKUP_CLICK_COUNT - SUP's friend checkup card's click count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L935\n   */\n  SUP_PAC_FRIEND_CHECKUP_CLICK_COUNT = 241,\n  /**\n   * SUP_PAC_FRIEND_CHECKUP_DISMISS_COUNT - SUP's friend checkup card's dismiss count:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/34ca2a6/proto/sup/sup.proto#L937\n   */\n  SUP_PAC_FRIEND_CHECKUP_DISMISS_COUNT = 242,\n  /** USE_VERTICAL_NAVIGATION - A boolean to indicate whether Opera uses vertical navigation or not. */\n  USE_VERTICAL_NAVIGATION = 243,\n  /**\n   * HEVC_HW_DECODER - Whether a device supports HEVC decoding using hardware and what max resolution width it should support\n   * e.g. 720, 540, 1080\n   */\n  HEVC_HW_DECODER = 244,\n  /**\n   * HEVC_SW_DECODER - Whether a device supports HEVC decoding using hardware/software and what max resolution width it should support\n   * e.g. 720, 540, 1080\n   */\n  HEVC_SW_DECODER = 245,\n  /**\n   * SUP_FHP_CONTACT_SYNC_IMPRESSION_COUNT - SUP's FHP contact sync prompt impression counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/fc53ac7/proto/sup/sup.proto#L1134\n   */\n  SUP_FHP_CONTACT_SYNC_IMPRESSION_COUNT = 246,\n  /**\n   * SUP_FHP_NOTIFICATION_PERMISSION_IMPRESSION_COUNT - SUP's FHP notification permission prompt impression counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/fc53ac7/proto/sup/sup.proto#L1136\n   */\n  SUP_FHP_NOTIFICATION_PERMISSION_IMPRESSION_COUNT = 247,\n  /**\n   * SUP_FHP_PHONE_VERIFICATION_IMPRESSION_COUNT - SUP's FHP phone verification prompt impression counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/fc53ac7/proto/sup/sup.proto#L1138\n   */\n  SUP_FHP_PHONE_VERIFICATION_IMPRESSION_COUNT = 248,\n  /**\n   * SUP_FHP_EMAIL_VERIFICATION_IMPRESSION_COUNT - SUP's FHP email verification prompt impression counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/fc53ac7/proto/sup/sup.proto#L1140\n   */\n  SUP_FHP_EMAIL_VERIFICATION_IMPRESSION_COUNT = 249,\n  /** MEMORIES_COUNT - Num of memories snaps user has */\n  MEMORIES_COUNT = 250,\n  /**\n   * SUP_FHP_CONTACT_SYNC_DISMISS_COUNT - SUP's FHP contact sync prompt dismiss counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1160\n   */\n  SUP_FHP_CONTACT_SYNC_DISMISS_COUNT = 251,\n  /**\n   * SUP_FHP_NOTIFICATION_PERMISSION_DISMISS_COUNT - SUP's FHP notification permission prompt dismiss counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1162\n   */\n  SUP_FHP_NOTIFICATION_PERMISSION_DISMISS_COUNT = 252,\n  /**\n   * SUP_FHP_PHONE_VERIFICATION_DISMISS_COUNT - SUP's FHP phone verification prompt dismiss counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1164\n   */\n  SUP_FHP_PHONE_VERIFICATION_DISMISS_COUNT = 253,\n  /**\n   * SUP_FHP_EMAIL_VERIFICATION_DISMISS_COUNT - SUP's FHP email verification prompt dismiss counter:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/29934fd/proto/sup/sup.proto#L1166\n   */\n  SUP_FHP_EMAIL_VERIFICATION_DISMISS_COUNT = 254,\n  /** SERVER_ONLY - Server side property to mark a config is meant to be consumed by server callers (enforce serving platform initiative) */\n  SERVER_ONLY = 255,\n  /** HAS_ACTIVE_SNAPCHAT_PLUS - Whether user has active Snapchat+ subscription in Atlas's UserData plus_subscription_info property */\n  HAS_ACTIVE_SNAPCHAT_PLUS = 256,\n  /** SUP_FST_SNAP_PLUS_IMPRESSION_COUNT - Client Property of FST snap plus takeover impression count by the SUP property (ID: 672) */\n  SUP_FST_SNAP_PLUS_IMPRESSION_COUNT = 257,\n  /** SUP_FST_SNAP_PLUS_LAST_IMPRESSION_TIME_SECS_TO_NOW - Client Property of FST snap plus takeover last impression time in secs to now by the SUP property (ID: 673) */\n  SUP_FST_SNAP_PLUS_LAST_IMPRESSION_TIME_SECS_TO_NOW = 258,\n  /**\n   * CONFIG_TE_ENABLED - Server side property to enable gradual rollout of config level targeting expression.\n   * Property will be used only in the backend and excluded from CMS\n   * Property will be deprecated after rollout is 100%\n   */\n  CONFIG_TE_ENABLED = 259,\n  /** SNAP_KIT_OAUTH_ID - OAuth Client ID identifying the source third party application for Snap Kit content */\n  SNAP_KIT_OAUTH_ID = 260,\n  /** ORGANIZATION_TYPE - Organization type of advertiser purchasing ads */\n  ORGANIZATION_TYPE = 261,\n  /**\n   * CHUNK_UPLOAD_SUPPORT_REQUIRED - Client provided boolean that represent whether the config\n   * needs to support uploading in a chunked/streaming manner\n   */\n  CHUNK_UPLOAD_SUPPORT_REQUIRED = 262,\n  /** SUP_FST_IOS_LOCKSCREEN_WIDGET_IMPRESSION_COUNT - SUP's FST iOS lock screen widgets impression count (ID: 696) */\n  SUP_FST_IOS_LOCKSCREEN_WIDGET_IMPRESSION_COUNT = 263,\n  /** SUP_FST_IOS_LOCKSCREEN_WIDGET_LAST_IMPRESSION_TIME_SECS_TO_NOW - SUP's FST iOS lock screen widgets last impression time in seconds to now (ID: 697) */\n  SUP_FST_IOS_LOCKSCREEN_WIDGET_LAST_IMPRESSION_TIME_SECS_TO_NOW = 264,\n  /** SUP_FST_IOS_LOCKSCREEN_WIDGET_CLICK_COUNT - SUP's FST iOS lock screen widgets prompt interaction counter (ID: 698) */\n  SUP_FST_IOS_LOCKSCREEN_WIDGET_CLICK_COUNT = 265,\n  /** SUP_PAC_MY_PROFILE_IOS_LOCKSCREEN_WIDGET_CLICK_COUNT - SUP's PAC my profile iOS lock screen widgets prompt interaction count (ID: 699) */\n  SUP_PAC_MY_PROFILE_IOS_LOCKSCREEN_WIDGET_CLICK_COUNT = 266,\n  /** SUP_PAC_MY_PROFILE_IOS_LOCKSCREEN_WIDGET_DISMISS_COUNT - SUP's PAC my profile iOS lock screen widgets dismiss count (ID: 700) */\n  SUP_PAC_MY_PROFILE_IOS_LOCKSCREEN_WIDGET_DISMISS_COUNT = 267,\n  /** SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED - SUP's iOS lock screen widget has been enabled (ID: 701) */\n  SUP_IOS_LOCK_SCREEN_WIDGET_ENABLED = 268,\n  /** CLOUDFRONT_POP - The last known CloudFront Point of Presence used */\n  CLOUDFRONT_POP = 269,\n  /** BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW - Billboard campaign level locally tracked first impresstion time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_FIRST_IMPRESSION_TIME_SECS_TO_NOW = 270,\n  /** BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT - Billboard campaign level locally tracked click count */\n  BILLBOARD_CAMPAIGN_LOCAL_CLICK_COUNT = 271,\n  /** BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT - Billboard campaign level locally tracked interaction count */\n  BILLBOARD_CAMPAIGN_LOCAL_INTERACTION_COUNT = 272,\n  /** BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW - Billboard campaign level locally tracked last interaction time to now */\n  BILLBOARD_CAMPAIGN_LOCAL_LAST_INTERACTION_TIME_SECS_TO_NOW = 273,\n  /** SNAP_PRIVACY - Atlas enum property that indicates a user's snap privacy settings (Friends vs. Everyone) */\n  SNAP_PRIVACY = 274,\n  /** FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH - Lock screen widgets billboard - app open via push notification */\n  FST_LOCK_SCREEN_WIDGET_BILLBOARD_LAUNCHED_FROM_PUSH = 275,\n  /** WEB_SCREEN_WIDTH - Web browser screen width in CSS pixels */\n  WEB_SCREEN_WIDTH = 276,\n  /** WEB_SCREEN_HEIGHT - Web browser screen height in CSS pixels */\n  WEB_SCREEN_HEIGHT = 277,\n  /** ADS_INTERFACES_IS_NEW_ORGANIZATION - Is a new organization in ads interfaces UI */\n  ADS_INTERFACES_IS_NEW_ORGANIZATION = 278,\n  /**\n   * SUP_FHP_REGISTER_TO_VOTE_CAMPAIGN_LAST_DISMISS_TIME_MILLIS_TO_NOW - SUP's fhp register to vote campaign dismiss time in millis to now:\n   * https://github.sc-corp.net/Snapchat/pb_schema/blob/ab264e8/proto/sup/sup.proto#L1304\n   */\n  SUP_FHP_REGISTER_TO_VOTE_CAMPAIGN_LAST_DISMISS_TIME_MILLIS_TO_NOW = 279,\n  /** GHE_ORGANIZATION - The Github Enterprise organization */\n  GHE_ORGANIZATION = 280,\n  /** GHE_REPOSITORY - The Github Enterprise Repository, which is contained by a GHE organization */\n  GHE_REPOSITORY = 281,\n  /** GHE_USER_EMAIL - In the context of Machamp, the user identifier (email) */\n  GHE_USER_EMAIL = 282,\n  /** BUILD_DEFINITION_ID - In the context of Machamp, the build definition identifier is a UUID hash of the GHE organization and and repository. */\n  BUILD_DEFINITION_ID = 283,\n  /** BUILD_DEFINITION_NAME - In the context of Machamp, the build definition name is name of the build from the build.yaml */\n  BUILD_DEFINITION_NAME = 284,\n  /** LCA_PRINCIPAL - LCA Principal of the service calling Circumstance Engine */\n  LCA_PRINCIPAL = 285,\n  /**\n   * MEDIA_PERFORMANCE_CLASS - A performance class defines a set of device capabilities by Android\n   * e.g. 30, 31, See https://android-developers.googleblog.com/2022/03/using-performance-class-to-optimize.html\n   */\n  MEDIA_PERFORMANCE_CLASS = 286,\n  /** COMMUNITY_COUNT - Number of Communities user is in */\n  COMMUNITY_COUNT = 287,\n  USER_GROUP = 9999,\n  UNRECOGNIZED = -1,\n}\n\nexport interface StudyMetadata_Guid {\n  /** The numeric value of the guid. */\n  value: number;\n}\n\nexport interface StudyMetadata_Treatment {\n  experimentId: number;\n  trafficPercentage: number;\n  experimentSettings: { [key: string]: string };\n  groupId: number;\n  /** Override of the variable config under this treatment. */\n  override: StudyMetadata_Treatment_VariableOverrideMetadata[];\n  /** Exp guid of the treatment */\n  expGuid: StudyMetadata_Guid | undefined;\n  /** BGID selected on A/B console. */\n  budgetGroupId: number;\n}\n\n/** Metadata of variable override. */\nexport interface StudyMetadata_Treatment_VariableOverrideMetadata {\n  /** Namespace of the variable config. */\n  namespace: string;\n  /** Id of the variable config; */\n  id: string;\n  /** Override of the variable config. */\n  override: Value | undefined;\n  /** The proto file descriptor genereated from the given proto_schema, if protobuf is used. */\n  fileDescriptorProto: FileDescriptorProto | undefined;\n  /** The message type name (without package name). */\n  typeName: string;\n}\n\nexport interface StudyMetadata_Treatment_ExperimentSettingsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface StudyMetadata_UserSliceRange {\n  namespace: string;\n  start: number;\n  end: number;\n}\n\nexport interface StudyMetadata_WhitelistedUserGroups {\n  treatmentId: number;\n  userGroupNames: string[];\n}\n\nexport interface StudyMetadata_WhitelistedCondition {\n  whitelistedUserBucketMap: { [key: string]: number };\n  whitelistedUserGroups: StudyMetadata_WhitelistedUserGroups[];\n}\n\nexport interface StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry {\n  key: string;\n  value: number;\n}\n\nexport interface StudyMetadata_AdvancedOptions {\n  seed: string;\n  isForNewUser: boolean;\n  newUserTs: number;\n  isDeviceLevel: boolean;\n  isUserIdTargeting: boolean;\n}\n\nexport interface StudyMetadata_SegmentExperiment {\n  /** Id used for exposure/allocation logging. */\n  expId: number;\n  /** Percentage of traffic allocated to this experiment. */\n  trafficPercentage: number;\n  /** Map storing the variable key/value for this experiment. */\n  experimentSettings: { [key: string]: string };\n}\n\nexport interface StudyMetadata_SegmentExperiment_ExperimentSettingsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface StudyMetadata_Segment {\n  targetingExpression: StudyMetadata_TargetingExpression | undefined;\n  sliceRange: StudyMetadata_UserSliceRange | undefined;\n  experiments: StudyMetadata_SegmentExperiment[];\n  version: number;\n}\n\nexport interface StudyMetadata_MetaValuesEntry {\n  key: string;\n  value: string;\n}\n\n/** The response message */\nexport interface UpdateStudyMetadataResponse {}\n\n/** The request to delete study metadata. */\nexport interface DeleteStudyMetadataRequest {\n  studiesToDelete: DeleteStudyMetadataRequest_StudyIdentity[];\n  /** Name of the proxy study if this sub study belongs to one. */\n  segmentationStudyName: string;\n}\n\nexport interface DeleteStudyMetadataRequest_StudyIdentity {\n  studyId: string;\n  version: number;\n}\n\n/** The response message of study deletion */\nexport interface DeleteStudyMetadataResponse {}\n\n/** The request to fetch study metadata. */\nexport interface FetchStudyMetadataRequest {\n  studies: FetchStudyMetadataRequest_StudyIdentity[];\n  /** Namespaces of A/B studies to fetch. */\n  namespaces: string[];\n  /** boolean flag to indicate whether to return all studies or not. If this flag is set to true, all of the other params are ignored */\n  fetchAllStudies: boolean;\n}\n\nexport interface FetchStudyMetadataRequest_StudyIdentity {\n  studyId: string;\n  version: number;\n}\n\n/** The response message of study deletion */\nexport interface FetchStudyMetadataResponse {\n  studyMetadata: StudyMetadata[];\n}\n\nexport interface HealthCheckRequest {}\n\nexport interface HealthCheckResponse {\n  healthCheckStatus: string;\n}\n\nconst baseUserInfo: object = {\n  userId: \"\",\n  userName: \"\",\n  isEmployee: false,\n  isTestUser: false,\n  creationTs: 0,\n  stickyCountry: \"\",\n  snapProStatus: 0,\n  mutableUserName: \"\",\n  said: \"\",\n};\n\nexport const UserInfo = {\n  encode(\n    message: UserInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.userName !== \"\") {\n      writer.uint32(18).string(message.userName);\n    }\n    if (message.isEmployee === true) {\n      writer.uint32(24).bool(message.isEmployee);\n    }\n    if (message.isTestUser === true) {\n      writer.uint32(32).bool(message.isTestUser);\n    }\n    if (message.creationTs !== 0) {\n      writer.uint32(40).uint64(message.creationTs);\n    }\n    if (message.stickyCountry !== \"\") {\n      writer.uint32(50).string(message.stickyCountry);\n    }\n    if (message.email !== undefined) {\n      Email.encode(message.email, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.phone !== undefined) {\n      Phone.encode(message.phone, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.snapProStatus !== 0) {\n      writer.uint32(72).int32(message.snapProStatus);\n    }\n    if (message.mutableUserName !== \"\") {\n      writer.uint32(82).string(message.mutableUserName);\n    }\n    if (message.said !== \"\") {\n      writer.uint32(90).string(message.said);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UserInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseUserInfo } as UserInfo;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userId = reader.string();\n          break;\n        case 2:\n          message.userName = reader.string();\n          break;\n        case 3:\n          message.isEmployee = reader.bool();\n          break;\n        case 4:\n          message.isTestUser = reader.bool();\n          break;\n        case 5:\n          message.creationTs = longToNumber(reader.uint64() as Long);\n          break;\n        case 6:\n          message.stickyCountry = reader.string();\n          break;\n        case 7:\n          message.email = Email.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.phone = Phone.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.snapProStatus = reader.int32() as any;\n          break;\n        case 10:\n          message.mutableUserName = reader.string();\n          break;\n        case 11:\n          message.said = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<UserInfo>): UserInfo {\n    const message = { ...baseUserInfo } as UserInfo;\n    if (object.userId !== undefined && object.userId !== null) {\n      message.userId = object.userId;\n    } else {\n      message.userId = \"\";\n    }\n    if (object.userName !== undefined && object.userName !== null) {\n      message.userName = object.userName;\n    } else {\n      message.userName = \"\";\n    }\n    if (object.isEmployee !== undefined && object.isEmployee !== null) {\n      message.isEmployee = object.isEmployee;\n    } else {\n      message.isEmployee = false;\n    }\n    if (object.isTestUser !== undefined && object.isTestUser !== null) {\n      message.isTestUser = object.isTestUser;\n    } else {\n      message.isTestUser = false;\n    }\n    if (object.creationTs !== undefined && object.creationTs !== null) {\n      message.creationTs = object.creationTs;\n    } else {\n      message.creationTs = 0;\n    }\n    if (object.stickyCountry !== undefined && object.stickyCountry !== null) {\n      message.stickyCountry = object.stickyCountry;\n    } else {\n      message.stickyCountry = \"\";\n    }\n    if (object.email !== undefined && object.email !== null) {\n      message.email = Email.fromPartial(object.email);\n    } else {\n      message.email = undefined;\n    }\n    if (object.phone !== undefined && object.phone !== null) {\n      message.phone = Phone.fromPartial(object.phone);\n    } else {\n      message.phone = undefined;\n    }\n    if (object.snapProStatus !== undefined && object.snapProStatus !== null) {\n      message.snapProStatus = object.snapProStatus;\n    } else {\n      message.snapProStatus = 0;\n    }\n    if (\n      object.mutableUserName !== undefined &&\n      object.mutableUserName !== null\n    ) {\n      message.mutableUserName = object.mutableUserName;\n    } else {\n      message.mutableUserName = \"\";\n    }\n    if (object.said !== undefined && object.said !== null) {\n      message.said = object.said;\n    } else {\n      message.said = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseEmail: object = {\n  isEmailEmpty: false,\n  isEmailVerified: false,\n  isEmailPendingVerificationEmpty: false,\n};\n\nexport const Email = {\n  encode(message: Email, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.isEmailEmpty === true) {\n      writer.uint32(8).bool(message.isEmailEmpty);\n    }\n    if (message.isEmailVerified === true) {\n      writer.uint32(16).bool(message.isEmailVerified);\n    }\n    if (message.isEmailPendingVerificationEmpty === true) {\n      writer.uint32(24).bool(message.isEmailPendingVerificationEmpty);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Email {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseEmail } as Email;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.isEmailEmpty = reader.bool();\n          break;\n        case 2:\n          message.isEmailVerified = reader.bool();\n          break;\n        case 3:\n          message.isEmailPendingVerificationEmpty = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Email>): Email {\n    const message = { ...baseEmail } as Email;\n    if (object.isEmailEmpty !== undefined && object.isEmailEmpty !== null) {\n      message.isEmailEmpty = object.isEmailEmpty;\n    } else {\n      message.isEmailEmpty = false;\n    }\n    if (\n      object.isEmailVerified !== undefined &&\n      object.isEmailVerified !== null\n    ) {\n      message.isEmailVerified = object.isEmailVerified;\n    } else {\n      message.isEmailVerified = false;\n    }\n    if (\n      object.isEmailPendingVerificationEmpty !== undefined &&\n      object.isEmailPendingVerificationEmpty !== null\n    ) {\n      message.isEmailPendingVerificationEmpty =\n        object.isEmailPendingVerificationEmpty;\n    } else {\n      message.isEmailPendingVerificationEmpty = false;\n    }\n    return message;\n  },\n};\n\nconst baseUserAgentInfo: object = {\n  osType: \"\",\n  osVersion: \"\",\n  appVersion: \"\",\n  appBuild: \"\",\n  appVariant: \"\",\n  deviceModel: \"\",\n  originalUserAgentString: \"\",\n};\n\nexport const UserAgentInfo = {\n  encode(\n    message: UserAgentInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.osType !== \"\") {\n      writer.uint32(10).string(message.osType);\n    }\n    if (message.osVersion !== \"\") {\n      writer.uint32(18).string(message.osVersion);\n    }\n    if (message.appVersion !== \"\") {\n      writer.uint32(26).string(message.appVersion);\n    }\n    if (message.appBuild !== \"\") {\n      writer.uint32(34).string(message.appBuild);\n    }\n    if (message.appVariant !== \"\") {\n      writer.uint32(42).string(message.appVariant);\n    }\n    if (message.deviceModel !== \"\") {\n      writer.uint32(50).string(message.deviceModel);\n    }\n    if (message.originalUserAgentString !== \"\") {\n      writer.uint32(58).string(message.originalUserAgentString);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): UserAgentInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseUserAgentInfo } as UserAgentInfo;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.osType = reader.string();\n          break;\n        case 2:\n          message.osVersion = reader.string();\n          break;\n        case 3:\n          message.appVersion = reader.string();\n          break;\n        case 4:\n          message.appBuild = reader.string();\n          break;\n        case 5:\n          message.appVariant = reader.string();\n          break;\n        case 6:\n          message.deviceModel = reader.string();\n          break;\n        case 7:\n          message.originalUserAgentString = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<UserAgentInfo>): UserAgentInfo {\n    const message = { ...baseUserAgentInfo } as UserAgentInfo;\n    if (object.osType !== undefined && object.osType !== null) {\n      message.osType = object.osType;\n    } else {\n      message.osType = \"\";\n    }\n    if (object.osVersion !== undefined && object.osVersion !== null) {\n      message.osVersion = object.osVersion;\n    } else {\n      message.osVersion = \"\";\n    }\n    if (object.appVersion !== undefined && object.appVersion !== null) {\n      message.appVersion = object.appVersion;\n    } else {\n      message.appVersion = \"\";\n    }\n    if (object.appBuild !== undefined && object.appBuild !== null) {\n      message.appBuild = object.appBuild;\n    } else {\n      message.appBuild = \"\";\n    }\n    if (object.appVariant !== undefined && object.appVariant !== null) {\n      message.appVariant = object.appVariant;\n    } else {\n      message.appVariant = \"\";\n    }\n    if (object.deviceModel !== undefined && object.deviceModel !== null) {\n      message.deviceModel = object.deviceModel;\n    } else {\n      message.deviceModel = \"\";\n    }\n    if (\n      object.originalUserAgentString !== undefined &&\n      object.originalUserAgentString !== null\n    ) {\n      message.originalUserAgentString = object.originalUserAgentString;\n    } else {\n      message.originalUserAgentString = \"\";\n    }\n    return message;\n  },\n};\n\nconst basePhone: object = { isPhoneEmpty: false, isPhoneVerified: false };\n\nexport const Phone = {\n  encode(message: Phone, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.isPhoneEmpty === true) {\n      writer.uint32(8).bool(message.isPhoneEmpty);\n    }\n    if (message.isPhoneVerified === true) {\n      writer.uint32(16).bool(message.isPhoneVerified);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Phone {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...basePhone } as Phone;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.isPhoneEmpty = reader.bool();\n          break;\n        case 2:\n          message.isPhoneVerified = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Phone>): Phone {\n    const message = { ...basePhone } as Phone;\n    if (object.isPhoneEmpty !== undefined && object.isPhoneEmpty !== null) {\n      message.isPhoneEmpty = object.isPhoneEmpty;\n    } else {\n      message.isPhoneEmpty = false;\n    }\n    if (\n      object.isPhoneVerified !== undefined &&\n      object.isPhoneVerified !== null\n    ) {\n      message.isPhoneVerified = object.isPhoneVerified;\n    } else {\n      message.isPhoneVerified = false;\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigsValueByPropertiesRequest: object = {\n  requestedStudies: \"\",\n  deviceId: \"\",\n  userAgent: \"\",\n  ipAddress: \"\",\n  countryCode: \"\",\n  city: \"\",\n  region: \"\",\n  locale: \"\",\n  srcOfOrigin: 0,\n  enableDebug: false,\n  disableExposureLogging: false,\n};\n\nexport const GetConfigsValueByPropertiesRequest = {\n  encode(\n    message: GetConfigsValueByPropertiesRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.configs) {\n      GetConfigsValueByPropertiesRequest_ConfigMetadata.encode(\n        v!,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    for (const v of message.requestedStudies) {\n      writer.uint32(18).string(v!);\n    }\n    if (message.userInfo !== undefined) {\n      UserInfo.encode(message.userInfo, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.deviceId !== \"\") {\n      writer.uint32(34).string(message.deviceId);\n    }\n    if (message.userAgent !== \"\") {\n      writer.uint32(42).string(message.userAgent);\n    }\n    if (message.ipAddress !== \"\") {\n      writer.uint32(50).string(message.ipAddress);\n    }\n    if (message.countryCode !== \"\") {\n      writer.uint32(58).string(message.countryCode);\n    }\n    if (message.city !== \"\") {\n      writer.uint32(66).string(message.city);\n    }\n    if (message.region !== \"\") {\n      writer.uint32(74).string(message.region);\n    }\n    if (message.locale !== \"\") {\n      writer.uint32(82).string(message.locale);\n    }\n    if (message.userAgentInfo !== undefined) {\n      UserAgentInfo.encode(\n        message.userAgentInfo,\n        writer.uint32(90).fork()\n      ).ldelim();\n    }\n    if (message.srcOfOrigin !== 0) {\n      writer.uint32(96).int32(message.srcOfOrigin);\n    }\n    if (message.enableDebug === true) {\n      writer.uint32(104).bool(message.enableDebug);\n    }\n    if (message.disableExposureLogging === true) {\n      writer.uint32(112).bool(message.disableExposureLogging);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigsValueByPropertiesRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigsValueByPropertiesRequest,\n    } as GetConfigsValueByPropertiesRequest;\n    message.configs = [];\n    message.requestedStudies = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configs.push(\n            GetConfigsValueByPropertiesRequest_ConfigMetadata.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        case 2:\n          message.requestedStudies.push(reader.string());\n          break;\n        case 3:\n          message.userInfo = UserInfo.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.deviceId = reader.string();\n          break;\n        case 5:\n          message.userAgent = reader.string();\n          break;\n        case 6:\n          message.ipAddress = reader.string();\n          break;\n        case 7:\n          message.countryCode = reader.string();\n          break;\n        case 8:\n          message.city = reader.string();\n          break;\n        case 9:\n          message.region = reader.string();\n          break;\n        case 10:\n          message.locale = reader.string();\n          break;\n        case 11:\n          message.userAgentInfo = UserAgentInfo.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.srcOfOrigin = reader.int32() as any;\n          break;\n        case 13:\n          message.enableDebug = reader.bool();\n          break;\n        case 14:\n          message.disableExposureLogging = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigsValueByPropertiesRequest>\n  ): GetConfigsValueByPropertiesRequest {\n    const message = {\n      ...baseGetConfigsValueByPropertiesRequest,\n    } as GetConfigsValueByPropertiesRequest;\n    message.configs = [];\n    message.requestedStudies = [];\n    if (object.configs !== undefined && object.configs !== null) {\n      for (const e of object.configs) {\n        message.configs.push(\n          GetConfigsValueByPropertiesRequest_ConfigMetadata.fromPartial(e)\n        );\n      }\n    }\n    if (\n      object.requestedStudies !== undefined &&\n      object.requestedStudies !== null\n    ) {\n      for (const e of object.requestedStudies) {\n        message.requestedStudies.push(e);\n      }\n    }\n    if (object.userInfo !== undefined && object.userInfo !== null) {\n      message.userInfo = UserInfo.fromPartial(object.userInfo);\n    } else {\n      message.userInfo = undefined;\n    }\n    if (object.deviceId !== undefined && object.deviceId !== null) {\n      message.deviceId = object.deviceId;\n    } else {\n      message.deviceId = \"\";\n    }\n    if (object.userAgent !== undefined && object.userAgent !== null) {\n      message.userAgent = object.userAgent;\n    } else {\n      message.userAgent = \"\";\n    }\n    if (object.ipAddress !== undefined && object.ipAddress !== null) {\n      message.ipAddress = object.ipAddress;\n    } else {\n      message.ipAddress = \"\";\n    }\n    if (object.countryCode !== undefined && object.countryCode !== null) {\n      message.countryCode = object.countryCode;\n    } else {\n      message.countryCode = \"\";\n    }\n    if (object.city !== undefined && object.city !== null) {\n      message.city = object.city;\n    } else {\n      message.city = \"\";\n    }\n    if (object.region !== undefined && object.region !== null) {\n      message.region = object.region;\n    } else {\n      message.region = \"\";\n    }\n    if (object.locale !== undefined && object.locale !== null) {\n      message.locale = object.locale;\n    } else {\n      message.locale = \"\";\n    }\n    if (object.userAgentInfo !== undefined && object.userAgentInfo !== null) {\n      message.userAgentInfo = UserAgentInfo.fromPartial(object.userAgentInfo);\n    } else {\n      message.userAgentInfo = undefined;\n    }\n    if (object.srcOfOrigin !== undefined && object.srcOfOrigin !== null) {\n      message.srcOfOrigin = object.srcOfOrigin;\n    } else {\n      message.srcOfOrigin = 0;\n    }\n    if (object.enableDebug !== undefined && object.enableDebug !== null) {\n      message.enableDebug = object.enableDebug;\n    } else {\n      message.enableDebug = false;\n    }\n    if (\n      object.disableExposureLogging !== undefined &&\n      object.disableExposureLogging !== null\n    ) {\n      message.disableExposureLogging = object.disableExposureLogging;\n    } else {\n      message.disableExposureLogging = false;\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigsValueByPropertiesRequest_ConfigMetadata: object = {\n  configName: \"\",\n  version: 0,\n};\n\nexport const GetConfigsValueByPropertiesRequest_ConfigMetadata = {\n  encode(\n    message: GetConfigsValueByPropertiesRequest_ConfigMetadata,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.configName !== \"\") {\n      writer.uint32(10).string(message.configName);\n    }\n    if (message.version !== 0) {\n      writer.uint32(16).uint32(message.version);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigsValueByPropertiesRequest_ConfigMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigsValueByPropertiesRequest_ConfigMetadata,\n    } as GetConfigsValueByPropertiesRequest_ConfigMetadata;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.configName = reader.string();\n          break;\n        case 2:\n          message.version = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigsValueByPropertiesRequest_ConfigMetadata>\n  ): GetConfigsValueByPropertiesRequest_ConfigMetadata {\n    const message = {\n      ...baseGetConfigsValueByPropertiesRequest_ConfigMetadata,\n    } as GetConfigsValueByPropertiesRequest_ConfigMetadata;\n    if (object.configName !== undefined && object.configName !== null) {\n      message.configName = object.configName;\n    } else {\n      message.configName = \"\";\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    return message;\n  },\n};\n\nconst baseABTargetingMetadata: object = { id: \"\", version: 0 };\n\nexport const ABTargetingMetadata = {\n  encode(\n    message: ABTargetingMetadata,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.version !== 0) {\n      writer.uint32(16).uint32(message.version);\n    }\n    if (message.clientTargetingExpression !== undefined) {\n      ClientTargetingExpression.encode(\n        message.clientTargetingExpression,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ABTargetingMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseABTargetingMetadata } as ABTargetingMetadata;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.version = reader.uint32();\n          break;\n        case 3:\n          message.clientTargetingExpression = ClientTargetingExpression.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<ABTargetingMetadata>): ABTargetingMetadata {\n    const message = { ...baseABTargetingMetadata } as ABTargetingMetadata;\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    if (\n      object.clientTargetingExpression !== undefined &&\n      object.clientTargetingExpression !== null\n    ) {\n      message.clientTargetingExpression = ClientTargetingExpression.fromPartial(\n        object.clientTargetingExpression\n      );\n    } else {\n      message.clientTargetingExpression = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseABStudyServingMetadata: object = { id: \"\" };\n\nexport const ABStudyServingMetadata = {\n  encode(\n    message: ABStudyServingMetadata,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    for (const v of message.targetingMetadata) {\n      ABTargetingMetadata.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): ABStudyServingMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseABStudyServingMetadata } as ABStudyServingMetadata;\n    message.targetingMetadata = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.targetingMetadata.push(\n            ABTargetingMetadata.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<ABStudyServingMetadata>\n  ): ABStudyServingMetadata {\n    const message = { ...baseABStudyServingMetadata } as ABStudyServingMetadata;\n    message.targetingMetadata = [];\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (\n      object.targetingMetadata !== undefined &&\n      object.targetingMetadata !== null\n    ) {\n      for (const e of object.targetingMetadata) {\n        message.targetingMetadata.push(ABTargetingMetadata.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseTargetingInfo: object = {\n  deviceId: \"\",\n  userAgent: \"\",\n  ipAddress: \"\",\n  countryCode: \"\",\n  city: \"\",\n  region: \"\",\n  locale: \"\",\n  srcOfOrigin: 0,\n};\n\nexport const TargetingInfo = {\n  encode(\n    message: TargetingInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.userInfo !== undefined) {\n      UserInfo.encode(message.userInfo, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.deviceId !== \"\") {\n      writer.uint32(18).string(message.deviceId);\n    }\n    if (message.userAgent !== \"\") {\n      writer.uint32(26).string(message.userAgent);\n    }\n    if (message.ipAddress !== \"\") {\n      writer.uint32(34).string(message.ipAddress);\n    }\n    if (message.countryCode !== \"\") {\n      writer.uint32(42).string(message.countryCode);\n    }\n    if (message.city !== \"\") {\n      writer.uint32(50).string(message.city);\n    }\n    if (message.region !== \"\") {\n      writer.uint32(58).string(message.region);\n    }\n    if (message.locale !== \"\") {\n      writer.uint32(66).string(message.locale);\n    }\n    if (message.userAgentInfo !== undefined) {\n      UserAgentInfo.encode(\n        message.userAgentInfo,\n        writer.uint32(74).fork()\n      ).ldelim();\n    }\n    if (message.srcOfOrigin !== 0) {\n      writer.uint32(80).int32(message.srcOfOrigin);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): TargetingInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTargetingInfo } as TargetingInfo;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userInfo = UserInfo.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.deviceId = reader.string();\n          break;\n        case 3:\n          message.userAgent = reader.string();\n          break;\n        case 4:\n          message.ipAddress = reader.string();\n          break;\n        case 5:\n          message.countryCode = reader.string();\n          break;\n        case 6:\n          message.city = reader.string();\n          break;\n        case 7:\n          message.region = reader.string();\n          break;\n        case 8:\n          message.locale = reader.string();\n          break;\n        case 9:\n          message.userAgentInfo = UserAgentInfo.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.srcOfOrigin = reader.int32() as any;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<TargetingInfo>): TargetingInfo {\n    const message = { ...baseTargetingInfo } as TargetingInfo;\n    if (object.userInfo !== undefined && object.userInfo !== null) {\n      message.userInfo = UserInfo.fromPartial(object.userInfo);\n    } else {\n      message.userInfo = undefined;\n    }\n    if (object.deviceId !== undefined && object.deviceId !== null) {\n      message.deviceId = object.deviceId;\n    } else {\n      message.deviceId = \"\";\n    }\n    if (object.userAgent !== undefined && object.userAgent !== null) {\n      message.userAgent = object.userAgent;\n    } else {\n      message.userAgent = \"\";\n    }\n    if (object.ipAddress !== undefined && object.ipAddress !== null) {\n      message.ipAddress = object.ipAddress;\n    } else {\n      message.ipAddress = \"\";\n    }\n    if (object.countryCode !== undefined && object.countryCode !== null) {\n      message.countryCode = object.countryCode;\n    } else {\n      message.countryCode = \"\";\n    }\n    if (object.city !== undefined && object.city !== null) {\n      message.city = object.city;\n    } else {\n      message.city = \"\";\n    }\n    if (object.region !== undefined && object.region !== null) {\n      message.region = object.region;\n    } else {\n      message.region = \"\";\n    }\n    if (object.locale !== undefined && object.locale !== null) {\n      message.locale = object.locale;\n    } else {\n      message.locale = \"\";\n    }\n    if (object.userAgentInfo !== undefined && object.userAgentInfo !== null) {\n      message.userAgentInfo = UserAgentInfo.fromPartial(object.userAgentInfo);\n    } else {\n      message.userAgentInfo = undefined;\n    }\n    if (object.srcOfOrigin !== undefined && object.srcOfOrigin !== null) {\n      message.srcOfOrigin = object.srcOfOrigin;\n    } else {\n      message.srcOfOrigin = 0;\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigOverridesByPropertiesRequest: object = {\n  requestedCofConfigNames: \"\",\n  disableExposureLogging: false,\n  enableDebug: false,\n};\n\nexport const GetConfigOverridesByPropertiesRequest = {\n  encode(\n    message: GetConfigOverridesByPropertiesRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.targetingInfo !== undefined) {\n      TargetingInfo.encode(\n        message.targetingInfo,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    for (const v of message.matchedAbStudyMetadata) {\n      ABStudyServingMetadata.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.requestedCofConfigNames) {\n      writer.uint32(26).string(v!);\n    }\n    if (message.disableExposureLogging === true) {\n      writer.uint32(32).bool(message.disableExposureLogging);\n    }\n    if (message.enableDebug === true) {\n      writer.uint32(40).bool(message.enableDebug);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigOverridesByPropertiesRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigOverridesByPropertiesRequest,\n    } as GetConfigOverridesByPropertiesRequest;\n    message.matchedAbStudyMetadata = [];\n    message.requestedCofConfigNames = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.targetingInfo = TargetingInfo.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.matchedAbStudyMetadata.push(\n            ABStudyServingMetadata.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.requestedCofConfigNames.push(reader.string());\n          break;\n        case 4:\n          message.disableExposureLogging = reader.bool();\n          break;\n        case 5:\n          message.enableDebug = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigOverridesByPropertiesRequest>\n  ): GetConfigOverridesByPropertiesRequest {\n    const message = {\n      ...baseGetConfigOverridesByPropertiesRequest,\n    } as GetConfigOverridesByPropertiesRequest;\n    message.matchedAbStudyMetadata = [];\n    message.requestedCofConfigNames = [];\n    if (object.targetingInfo !== undefined && object.targetingInfo !== null) {\n      message.targetingInfo = TargetingInfo.fromPartial(object.targetingInfo);\n    } else {\n      message.targetingInfo = undefined;\n    }\n    if (\n      object.matchedAbStudyMetadata !== undefined &&\n      object.matchedAbStudyMetadata !== null\n    ) {\n      for (const e of object.matchedAbStudyMetadata) {\n        message.matchedAbStudyMetadata.push(\n          ABStudyServingMetadata.fromPartial(e)\n        );\n      }\n    }\n    if (\n      object.requestedCofConfigNames !== undefined &&\n      object.requestedCofConfigNames !== null\n    ) {\n      for (const e of object.requestedCofConfigNames) {\n        message.requestedCofConfigNames.push(e);\n      }\n    }\n    if (\n      object.disableExposureLogging !== undefined &&\n      object.disableExposureLogging !== null\n    ) {\n      message.disableExposureLogging = object.disableExposureLogging;\n    } else {\n      message.disableExposureLogging = false;\n    }\n    if (object.enableDebug !== undefined && object.enableDebug !== null) {\n      message.enableDebug = object.enableDebug;\n    } else {\n      message.enableDebug = false;\n    }\n    return message;\n  },\n};\n\nconst baseTargetingProperties: object = { customIsFirstTime: false };\n\nexport const TargetingProperties = {\n  encode(\n    message: TargetingProperties,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.customIsFirstTime === true) {\n      writer.uint32(8).bool(message.customIsFirstTime);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): TargetingProperties {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTargetingProperties } as TargetingProperties;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.customIsFirstTime = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<TargetingProperties>): TargetingProperties {\n    const message = { ...baseTargetingProperties } as TargetingProperties;\n    if (\n      object.customIsFirstTime !== undefined &&\n      object.customIsFirstTime !== null\n    ) {\n      message.customIsFirstTime = object.customIsFirstTime;\n    } else {\n      message.customIsFirstTime = false;\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigOverridesByRUIDRequest: object = {\n  requestedCofConfigNames: \"\",\n  enableDebug: false,\n  disableExposureLogging: false,\n  requestedNamespaces: \"\",\n};\n\nexport const GetConfigOverridesByRUIDRequest = {\n  encode(\n    message: GetConfigOverridesByRUIDRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.ruid !== undefined) {\n      Ruid.encode(message.ruid, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.targetingProperties !== undefined) {\n      TargetingProperties.encode(\n        message.targetingProperties,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    for (const v of message.matchedAbStudyMetadata) {\n      ABStudyServingMetadata.encode(v!, writer.uint32(26).fork()).ldelim();\n    }\n    for (const v of message.requestedCofConfigNames) {\n      writer.uint32(34).string(v!);\n    }\n    if (message.enableDebug === true) {\n      writer.uint32(40).bool(message.enableDebug);\n    }\n    if (message.disableExposureLogging === true) {\n      writer.uint32(48).bool(message.disableExposureLogging);\n    }\n    for (const v of message.requestedNamespaces) {\n      writer.uint32(58).string(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigOverridesByRUIDRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigOverridesByRUIDRequest,\n    } as GetConfigOverridesByRUIDRequest;\n    message.matchedAbStudyMetadata = [];\n    message.requestedCofConfigNames = [];\n    message.requestedNamespaces = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ruid = Ruid.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.targetingProperties = TargetingProperties.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 3:\n          message.matchedAbStudyMetadata.push(\n            ABStudyServingMetadata.decode(reader, reader.uint32())\n          );\n          break;\n        case 4:\n          message.requestedCofConfigNames.push(reader.string());\n          break;\n        case 5:\n          message.enableDebug = reader.bool();\n          break;\n        case 6:\n          message.disableExposureLogging = reader.bool();\n          break;\n        case 7:\n          message.requestedNamespaces.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigOverridesByRUIDRequest>\n  ): GetConfigOverridesByRUIDRequest {\n    const message = {\n      ...baseGetConfigOverridesByRUIDRequest,\n    } as GetConfigOverridesByRUIDRequest;\n    message.matchedAbStudyMetadata = [];\n    message.requestedCofConfigNames = [];\n    message.requestedNamespaces = [];\n    if (object.ruid !== undefined && object.ruid !== null) {\n      message.ruid = Ruid.fromPartial(object.ruid);\n    } else {\n      message.ruid = undefined;\n    }\n    if (\n      object.targetingProperties !== undefined &&\n      object.targetingProperties !== null\n    ) {\n      message.targetingProperties = TargetingProperties.fromPartial(\n        object.targetingProperties\n      );\n    } else {\n      message.targetingProperties = undefined;\n    }\n    if (\n      object.matchedAbStudyMetadata !== undefined &&\n      object.matchedAbStudyMetadata !== null\n    ) {\n      for (const e of object.matchedAbStudyMetadata) {\n        message.matchedAbStudyMetadata.push(\n          ABStudyServingMetadata.fromPartial(e)\n        );\n      }\n    }\n    if (\n      object.requestedCofConfigNames !== undefined &&\n      object.requestedCofConfigNames !== null\n    ) {\n      for (const e of object.requestedCofConfigNames) {\n        message.requestedCofConfigNames.push(e);\n      }\n    }\n    if (object.enableDebug !== undefined && object.enableDebug !== null) {\n      message.enableDebug = object.enableDebug;\n    } else {\n      message.enableDebug = false;\n    }\n    if (\n      object.disableExposureLogging !== undefined &&\n      object.disableExposureLogging !== null\n    ) {\n      message.disableExposureLogging = object.disableExposureLogging;\n    } else {\n      message.disableExposureLogging = false;\n    }\n    if (\n      object.requestedNamespaces !== undefined &&\n      object.requestedNamespaces !== null\n    ) {\n      for (const e of object.requestedNamespaces) {\n        message.requestedNamespaces.push(e);\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigOverridesByRUIDResponse: object = {};\n\nexport const GetConfigOverridesByRUIDResponse = {\n  encode(\n    message: GetConfigOverridesByRUIDResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.variableOverrides) {\n      COFVariableOverride.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.debugTrace !== undefined) {\n      DebugTrace.encode(message.debugTrace, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigOverridesByRUIDResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigOverridesByRUIDResponse,\n    } as GetConfigOverridesByRUIDResponse;\n    message.variableOverrides = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.variableOverrides.push(\n            COFVariableOverride.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.debugTrace = DebugTrace.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigOverridesByRUIDResponse>\n  ): GetConfigOverridesByRUIDResponse {\n    const message = {\n      ...baseGetConfigOverridesByRUIDResponse,\n    } as GetConfigOverridesByRUIDResponse;\n    message.variableOverrides = [];\n    if (\n      object.variableOverrides !== undefined &&\n      object.variableOverrides !== null\n    ) {\n      for (const e of object.variableOverrides) {\n        message.variableOverrides.push(COFVariableOverride.fromPartial(e));\n      }\n    }\n    if (object.debugTrace !== undefined && object.debugTrace !== null) {\n      message.debugTrace = DebugTrace.fromPartial(object.debugTrace);\n    } else {\n      message.debugTrace = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseCOFVariableOverride: object = {\n  namespace: \"\",\n  configName: \"\",\n  expId: 0,\n  studyName: \"\",\n  servePlatforms: 0,\n  budgetGroupId: 0,\n  canSkipAllocationLogging: false,\n  ruidType: 0,\n  canSkipClientExposureLogging: false,\n};\n\nexport const COFVariableOverride = {\n  encode(\n    message: COFVariableOverride,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.namespace !== \"\") {\n      writer.uint32(10).string(message.namespace);\n    }\n    if (message.configName !== \"\") {\n      writer.uint32(18).string(message.configName);\n    }\n    if (message.expId !== 0) {\n      writer.uint32(24).uint32(message.expId);\n    }\n    if (message.studyName !== \"\") {\n      writer.uint32(34).string(message.studyName);\n    }\n    if (message.override !== undefined) {\n      Value.encode(message.override, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.clientTargetExpression !== undefined) {\n      ClientTargetingExpression.encode(\n        message.clientTargetExpression,\n        writer.uint32(50).fork()\n      ).ldelim();\n    }\n    if (message.abStepInfo !== undefined) {\n      AbStepInfo.encode(message.abStepInfo, writer.uint32(58).fork()).ldelim();\n    }\n    writer.uint32(66).fork();\n    for (const v of message.servePlatforms) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.budgetGroupId !== 0) {\n      writer.uint32(72).uint32(message.budgetGroupId);\n    }\n    if (message.canSkipAllocationLogging === true) {\n      writer.uint32(80).bool(message.canSkipAllocationLogging);\n    }\n    if (message.ruidType !== 0) {\n      writer.uint32(88).int32(message.ruidType);\n    }\n    if (message.canSkipClientExposureLogging === true) {\n      writer.uint32(96).bool(message.canSkipClientExposureLogging);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): COFVariableOverride {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseCOFVariableOverride } as COFVariableOverride;\n    message.servePlatforms = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.namespace = reader.string();\n          break;\n        case 2:\n          message.configName = reader.string();\n          break;\n        case 3:\n          message.expId = reader.uint32();\n          break;\n        case 4:\n          message.studyName = reader.string();\n          break;\n        case 5:\n          message.override = Value.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.clientTargetExpression = ClientTargetingExpression.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 7:\n          message.abStepInfo = AbStepInfo.decode(reader, reader.uint32());\n          break;\n        case 8:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.servePlatforms.push(reader.int32() as any);\n            }\n          } else {\n            message.servePlatforms.push(reader.int32() as any);\n          }\n          break;\n        case 9:\n          message.budgetGroupId = reader.uint32();\n          break;\n        case 10:\n          message.canSkipAllocationLogging = reader.bool();\n          break;\n        case 11:\n          message.ruidType = reader.int32() as any;\n          break;\n        case 12:\n          message.canSkipClientExposureLogging = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<COFVariableOverride>): COFVariableOverride {\n    const message = { ...baseCOFVariableOverride } as COFVariableOverride;\n    message.servePlatforms = [];\n    if (object.namespace !== undefined && object.namespace !== null) {\n      message.namespace = object.namespace;\n    } else {\n      message.namespace = \"\";\n    }\n    if (object.configName !== undefined && object.configName !== null) {\n      message.configName = object.configName;\n    } else {\n      message.configName = \"\";\n    }\n    if (object.expId !== undefined && object.expId !== null) {\n      message.expId = object.expId;\n    } else {\n      message.expId = 0;\n    }\n    if (object.studyName !== undefined && object.studyName !== null) {\n      message.studyName = object.studyName;\n    } else {\n      message.studyName = \"\";\n    }\n    if (object.override !== undefined && object.override !== null) {\n      message.override = Value.fromPartial(object.override);\n    } else {\n      message.override = undefined;\n    }\n    if (\n      object.clientTargetExpression !== undefined &&\n      object.clientTargetExpression !== null\n    ) {\n      message.clientTargetExpression = ClientTargetingExpression.fromPartial(\n        object.clientTargetExpression\n      );\n    } else {\n      message.clientTargetExpression = undefined;\n    }\n    if (object.abStepInfo !== undefined && object.abStepInfo !== null) {\n      message.abStepInfo = AbStepInfo.fromPartial(object.abStepInfo);\n    } else {\n      message.abStepInfo = undefined;\n    }\n    if (object.servePlatforms !== undefined && object.servePlatforms !== null) {\n      for (const e of object.servePlatforms) {\n        message.servePlatforms.push(e);\n      }\n    }\n    if (object.budgetGroupId !== undefined && object.budgetGroupId !== null) {\n      message.budgetGroupId = object.budgetGroupId;\n    } else {\n      message.budgetGroupId = 0;\n    }\n    if (\n      object.canSkipAllocationLogging !== undefined &&\n      object.canSkipAllocationLogging !== null\n    ) {\n      message.canSkipAllocationLogging = object.canSkipAllocationLogging;\n    } else {\n      message.canSkipAllocationLogging = false;\n    }\n    if (object.ruidType !== undefined && object.ruidType !== null) {\n      message.ruidType = object.ruidType;\n    } else {\n      message.ruidType = 0;\n    }\n    if (\n      object.canSkipClientExposureLogging !== undefined &&\n      object.canSkipClientExposureLogging !== null\n    ) {\n      message.canSkipClientExposureLogging =\n        object.canSkipClientExposureLogging;\n    } else {\n      message.canSkipClientExposureLogging = false;\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigOverridesByPropertiesResponse: object = {};\n\nexport const GetConfigOverridesByPropertiesResponse = {\n  encode(\n    message: GetConfigOverridesByPropertiesResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.variableOverrides) {\n      COFVariableOverride.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigOverridesByPropertiesResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigOverridesByPropertiesResponse,\n    } as GetConfigOverridesByPropertiesResponse;\n    message.variableOverrides = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.variableOverrides.push(\n            COFVariableOverride.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigOverridesByPropertiesResponse>\n  ): GetConfigOverridesByPropertiesResponse {\n    const message = {\n      ...baseGetConfigOverridesByPropertiesResponse,\n    } as GetConfigOverridesByPropertiesResponse;\n    message.variableOverrides = [];\n    if (\n      object.variableOverrides !== undefined &&\n      object.variableOverrides !== null\n    ) {\n      for (const e of object.variableOverrides) {\n        message.variableOverrides.push(COFVariableOverride.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseStudyData: object = {\n  name: \"\",\n  experimentId: 0,\n  servePlatforms: 0,\n  canSkipAllocationLogging: false,\n};\n\nexport const StudyData = {\n  encode(\n    message: StudyData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.experimentId !== 0) {\n      writer.uint32(16).uint32(message.experimentId);\n    }\n    Object.entries(message.variables).forEach(([key, value]) => {\n      StudyData_VariablesEntry.encode(\n        { key: key as any, value },\n        writer.uint32(26).fork()\n      ).ldelim();\n    });\n    if (message.abStepInfo !== undefined) {\n      AbStepInfo.encode(message.abStepInfo, writer.uint32(34).fork()).ldelim();\n    }\n    writer.uint32(42).fork();\n    for (const v of message.servePlatforms) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (message.canSkipAllocationLogging === true) {\n      writer.uint32(48).bool(message.canSkipAllocationLogging);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): StudyData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStudyData } as StudyData;\n    message.variables = {};\n    message.servePlatforms = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.experimentId = reader.uint32();\n          break;\n        case 3:\n          const entry3 = StudyData_VariablesEntry.decode(\n            reader,\n            reader.uint32()\n          );\n          if (entry3.value !== undefined) {\n            message.variables[entry3.key] = entry3.value;\n          }\n          break;\n        case 4:\n          message.abStepInfo = AbStepInfo.decode(reader, reader.uint32());\n          break;\n        case 5:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.servePlatforms.push(reader.int32() as any);\n            }\n          } else {\n            message.servePlatforms.push(reader.int32() as any);\n          }\n          break;\n        case 6:\n          message.canSkipAllocationLogging = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<StudyData>): StudyData {\n    const message = { ...baseStudyData } as StudyData;\n    message.variables = {};\n    message.servePlatforms = [];\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n    if (object.experimentId !== undefined && object.experimentId !== null) {\n      message.experimentId = object.experimentId;\n    } else {\n      message.experimentId = 0;\n    }\n    if (object.variables !== undefined && object.variables !== null) {\n      Object.entries(object.variables).forEach(([key, value]) => {\n        if (value !== undefined) {\n          message.variables[key] = String(value);\n        }\n      });\n    }\n    if (object.abStepInfo !== undefined && object.abStepInfo !== null) {\n      message.abStepInfo = AbStepInfo.fromPartial(object.abStepInfo);\n    } else {\n      message.abStepInfo = undefined;\n    }\n    if (object.servePlatforms !== undefined && object.servePlatforms !== null) {\n      for (const e of object.servePlatforms) {\n        message.servePlatforms.push(e);\n      }\n    }\n    if (\n      object.canSkipAllocationLogging !== undefined &&\n      object.canSkipAllocationLogging !== null\n    ) {\n      message.canSkipAllocationLogging = object.canSkipAllocationLogging;\n    } else {\n      message.canSkipAllocationLogging = false;\n    }\n    return message;\n  },\n};\n\nconst baseStudyData_VariablesEntry: object = { key: \"\", value: \"\" };\n\nexport const StudyData_VariablesEntry = {\n  encode(\n    message: StudyData_VariablesEntry,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyData_VariablesEntry {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyData_VariablesEntry,\n    } as StudyData_VariablesEntry;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyData_VariablesEntry>\n  ): StudyData_VariablesEntry {\n    const message = {\n      ...baseStudyData_VariablesEntry,\n    } as StudyData_VariablesEntry;\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseGetConfigsValueByPropertiesResponse: object = {};\n\nexport const GetConfigsValueByPropertiesResponse = {\n  encode(\n    message: GetConfigsValueByPropertiesResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studyData) {\n      StudyData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetConfigsValueByPropertiesResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetConfigsValueByPropertiesResponse,\n    } as GetConfigsValueByPropertiesResponse;\n    message.studyData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyData.push(StudyData.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetConfigsValueByPropertiesResponse>\n  ): GetConfigsValueByPropertiesResponse {\n    const message = {\n      ...baseGetConfigsValueByPropertiesResponse,\n    } as GetConfigsValueByPropertiesResponse;\n    message.studyData = [];\n    if (object.studyData !== undefined && object.studyData !== null) {\n      for (const e of object.studyData) {\n        message.studyData.push(StudyData.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseUpdateStudyMetadataRequest: object = { segmentationStudyName: \"\" };\n\nexport const UpdateStudyMetadataRequest = {\n  encode(\n    message: UpdateStudyMetadataRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studyMetadata) {\n      StudyMetadata.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.segmentationStudyName !== \"\") {\n      writer.uint32(18).string(message.segmentationStudyName);\n    }\n    for (const v of message.deletedSegments) {\n      UpdateStudyMetadataRequest_StudyIdentity.encode(\n        v!,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateStudyMetadataRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateStudyMetadataRequest,\n    } as UpdateStudyMetadataRequest;\n    message.studyMetadata = [];\n    message.deletedSegments = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyMetadata.push(\n            StudyMetadata.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.segmentationStudyName = reader.string();\n          break;\n        case 3:\n          message.deletedSegments.push(\n            UpdateStudyMetadataRequest_StudyIdentity.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<UpdateStudyMetadataRequest>\n  ): UpdateStudyMetadataRequest {\n    const message = {\n      ...baseUpdateStudyMetadataRequest,\n    } as UpdateStudyMetadataRequest;\n    message.studyMetadata = [];\n    message.deletedSegments = [];\n    if (object.studyMetadata !== undefined && object.studyMetadata !== null) {\n      for (const e of object.studyMetadata) {\n        message.studyMetadata.push(StudyMetadata.fromPartial(e));\n      }\n    }\n    if (\n      object.segmentationStudyName !== undefined &&\n      object.segmentationStudyName !== null\n    ) {\n      message.segmentationStudyName = object.segmentationStudyName;\n    } else {\n      message.segmentationStudyName = \"\";\n    }\n    if (\n      object.deletedSegments !== undefined &&\n      object.deletedSegments !== null\n    ) {\n      for (const e of object.deletedSegments) {\n        message.deletedSegments.push(\n          UpdateStudyMetadataRequest_StudyIdentity.fromPartial(e)\n        );\n      }\n    }\n    return message;\n  },\n};\n\nconst baseUpdateStudyMetadataRequest_StudyIdentity: object = {\n  studyId: \"\",\n  version: 0,\n};\n\nexport const UpdateStudyMetadataRequest_StudyIdentity = {\n  encode(\n    message: UpdateStudyMetadataRequest_StudyIdentity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.studyId !== \"\") {\n      writer.uint32(10).string(message.studyId);\n    }\n    if (message.version !== 0) {\n      writer.uint32(16).uint64(message.version);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateStudyMetadataRequest_StudyIdentity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateStudyMetadataRequest_StudyIdentity,\n    } as UpdateStudyMetadataRequest_StudyIdentity;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyId = reader.string();\n          break;\n        case 2:\n          message.version = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<UpdateStudyMetadataRequest_StudyIdentity>\n  ): UpdateStudyMetadataRequest_StudyIdentity {\n    const message = {\n      ...baseUpdateStudyMetadataRequest_StudyIdentity,\n    } as UpdateStudyMetadataRequest_StudyIdentity;\n    if (object.studyId !== undefined && object.studyId !== null) {\n      message.studyId = object.studyId;\n    } else {\n      message.studyId = \"\";\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata: object = {\n  studyId: \"\",\n  version: 0,\n  servePlatforms: 0,\n  studyUpdateTimestamp: 0,\n  studyGuid: 0,\n  segmentationStudyName: \"\",\n  segmentOrdinal: 0,\n  status: 0,\n  ruidType: 0,\n  segmentType: 0,\n};\n\nexport const StudyMetadata = {\n  encode(\n    message: StudyMetadata,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    Object.entries(message.metaValues).forEach(([key, value]) => {\n      StudyMetadata_MetaValuesEntry.encode(\n        { key: key as any, value },\n        writer.uint32(10).fork()\n      ).ldelim();\n    });\n    if (message.studyId !== \"\") {\n      writer.uint32(18).string(message.studyId);\n    }\n    if (message.version !== 0) {\n      writer.uint32(24).uint64(message.version);\n    }\n    writer.uint32(34).fork();\n    for (const v of message.servePlatforms) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    for (const v of message.treatments) {\n      StudyMetadata_Treatment.encode(v!, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.whitelistedCondition !== undefined) {\n      StudyMetadata_WhitelistedCondition.encode(\n        message.whitelistedCondition,\n        writer.uint32(50).fork()\n      ).ldelim();\n    }\n    if (message.sliceRange !== undefined) {\n      StudyMetadata_UserSliceRange.encode(\n        message.sliceRange,\n        writer.uint32(58).fork()\n      ).ldelim();\n    }\n    if (message.options !== undefined) {\n      StudyMetadata_AdvancedOptions.encode(\n        message.options,\n        writer.uint32(66).fork()\n      ).ldelim();\n    }\n    if (message.targetingExpression !== undefined) {\n      StudyMetadata_TargetingExpression.encode(\n        message.targetingExpression,\n        writer.uint32(74).fork()\n      ).ldelim();\n    }\n    if (message.studyUpdateTimestamp !== 0) {\n      writer.uint32(80).uint64(message.studyUpdateTimestamp);\n    }\n    if (message.studyGuid !== 0) {\n      writer.uint32(96).uint64(message.studyGuid);\n    }\n    if (message.segmentationStudyName !== \"\") {\n      writer.uint32(106).string(message.segmentationStudyName);\n    }\n    if (message.segmentOrdinal !== 0) {\n      writer.uint32(112).int32(message.segmentOrdinal);\n    }\n    if (message.status !== 0) {\n      writer.uint32(120).int32(message.status);\n    }\n    if (message.ruidType !== 0) {\n      writer.uint32(128).int32(message.ruidType);\n    }\n    if (message.segmentType !== 0) {\n      writer.uint32(136).int32(message.segmentType);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): StudyMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStudyMetadata } as StudyMetadata;\n    message.metaValues = {};\n    message.servePlatforms = [];\n    message.treatments = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          const entry1 = StudyMetadata_MetaValuesEntry.decode(\n            reader,\n            reader.uint32()\n          );\n          if (entry1.value !== undefined) {\n            message.metaValues[entry1.key] = entry1.value;\n          }\n          break;\n        case 2:\n          message.studyId = reader.string();\n          break;\n        case 3:\n          message.version = longToNumber(reader.uint64() as Long);\n          break;\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.servePlatforms.push(reader.int32() as any);\n            }\n          } else {\n            message.servePlatforms.push(reader.int32() as any);\n          }\n          break;\n        case 5:\n          message.treatments.push(\n            StudyMetadata_Treatment.decode(reader, reader.uint32())\n          );\n          break;\n        case 6:\n          message.whitelistedCondition =\n            StudyMetadata_WhitelistedCondition.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.sliceRange = StudyMetadata_UserSliceRange.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 8:\n          message.options = StudyMetadata_AdvancedOptions.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 9:\n          message.targetingExpression =\n            StudyMetadata_TargetingExpression.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.studyUpdateTimestamp = longToNumber(reader.uint64() as Long);\n          break;\n        case 12:\n          message.studyGuid = longToNumber(reader.uint64() as Long);\n          break;\n        case 13:\n          message.segmentationStudyName = reader.string();\n          break;\n        case 14:\n          message.segmentOrdinal = reader.int32();\n          break;\n        case 15:\n          message.status = reader.int32() as any;\n          break;\n        case 16:\n          message.ruidType = reader.int32() as any;\n          break;\n        case 17:\n          message.segmentType = reader.int32() as any;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<StudyMetadata>): StudyMetadata {\n    const message = { ...baseStudyMetadata } as StudyMetadata;\n    message.metaValues = {};\n    message.servePlatforms = [];\n    message.treatments = [];\n    if (object.metaValues !== undefined && object.metaValues !== null) {\n      Object.entries(object.metaValues).forEach(([key, value]) => {\n        if (value !== undefined) {\n          message.metaValues[key] = String(value);\n        }\n      });\n    }\n    if (object.studyId !== undefined && object.studyId !== null) {\n      message.studyId = object.studyId;\n    } else {\n      message.studyId = \"\";\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    if (object.servePlatforms !== undefined && object.servePlatforms !== null) {\n      for (const e of object.servePlatforms) {\n        message.servePlatforms.push(e);\n      }\n    }\n    if (object.treatments !== undefined && object.treatments !== null) {\n      for (const e of object.treatments) {\n        message.treatments.push(StudyMetadata_Treatment.fromPartial(e));\n      }\n    }\n    if (\n      object.whitelistedCondition !== undefined &&\n      object.whitelistedCondition !== null\n    ) {\n      message.whitelistedCondition =\n        StudyMetadata_WhitelistedCondition.fromPartial(\n          object.whitelistedCondition\n        );\n    } else {\n      message.whitelistedCondition = undefined;\n    }\n    if (object.sliceRange !== undefined && object.sliceRange !== null) {\n      message.sliceRange = StudyMetadata_UserSliceRange.fromPartial(\n        object.sliceRange\n      );\n    } else {\n      message.sliceRange = undefined;\n    }\n    if (object.options !== undefined && object.options !== null) {\n      message.options = StudyMetadata_AdvancedOptions.fromPartial(\n        object.options\n      );\n    } else {\n      message.options = undefined;\n    }\n    if (\n      object.targetingExpression !== undefined &&\n      object.targetingExpression !== null\n    ) {\n      message.targetingExpression =\n        StudyMetadata_TargetingExpression.fromPartial(\n          object.targetingExpression\n        );\n    } else {\n      message.targetingExpression = undefined;\n    }\n    if (\n      object.studyUpdateTimestamp !== undefined &&\n      object.studyUpdateTimestamp !== null\n    ) {\n      message.studyUpdateTimestamp = object.studyUpdateTimestamp;\n    } else {\n      message.studyUpdateTimestamp = 0;\n    }\n    if (object.studyGuid !== undefined && object.studyGuid !== null) {\n      message.studyGuid = object.studyGuid;\n    } else {\n      message.studyGuid = 0;\n    }\n    if (\n      object.segmentationStudyName !== undefined &&\n      object.segmentationStudyName !== null\n    ) {\n      message.segmentationStudyName = object.segmentationStudyName;\n    } else {\n      message.segmentationStudyName = \"\";\n    }\n    if (object.segmentOrdinal !== undefined && object.segmentOrdinal !== null) {\n      message.segmentOrdinal = object.segmentOrdinal;\n    } else {\n      message.segmentOrdinal = 0;\n    }\n    if (object.status !== undefined && object.status !== null) {\n      message.status = object.status;\n    } else {\n      message.status = 0;\n    }\n    if (object.ruidType !== undefined && object.ruidType !== null) {\n      message.ruidType = object.ruidType;\n    } else {\n      message.ruidType = 0;\n    }\n    if (object.segmentType !== undefined && object.segmentType !== null) {\n      message.segmentType = object.segmentType;\n    } else {\n      message.segmentType = 0;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_TargetingExpression: object = {\n  operator: 0,\n  property: 0,\n  predicateOperator: 0,\n  value: \"\",\n};\n\nexport const StudyMetadata_TargetingExpression = {\n  encode(\n    message: StudyMetadata_TargetingExpression,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.operator !== 0) {\n      writer.uint32(8).int32(message.operator);\n    }\n    for (const v of message.children) {\n      StudyMetadata_TargetingExpression.encode(\n        v!,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    if (message.property !== 0) {\n      writer.uint32(24).int32(message.property);\n    }\n    if (message.predicateOperator !== 0) {\n      writer.uint32(32).int32(message.predicateOperator);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(42).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_TargetingExpression {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_TargetingExpression,\n    } as StudyMetadata_TargetingExpression;\n    message.children = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.operator = reader.int32() as any;\n          break;\n        case 2:\n          message.children.push(\n            StudyMetadata_TargetingExpression.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.property = reader.int32() as any;\n          break;\n        case 4:\n          message.predicateOperator = reader.int32() as any;\n          break;\n        case 5:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_TargetingExpression>\n  ): StudyMetadata_TargetingExpression {\n    const message = {\n      ...baseStudyMetadata_TargetingExpression,\n    } as StudyMetadata_TargetingExpression;\n    message.children = [];\n    if (object.operator !== undefined && object.operator !== null) {\n      message.operator = object.operator;\n    } else {\n      message.operator = 0;\n    }\n    if (object.children !== undefined && object.children !== null) {\n      for (const e of object.children) {\n        message.children.push(StudyMetadata_TargetingExpression.fromPartial(e));\n      }\n    }\n    if (object.property !== undefined && object.property !== null) {\n      message.property = object.property;\n    } else {\n      message.property = 0;\n    }\n    if (\n      object.predicateOperator !== undefined &&\n      object.predicateOperator !== null\n    ) {\n      message.predicateOperator = object.predicateOperator;\n    } else {\n      message.predicateOperator = 0;\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_Guid: object = { value: 0 };\n\nexport const StudyMetadata_Guid = {\n  encode(\n    message: StudyMetadata_Guid,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.value !== 0) {\n      writer.uint32(8).uint64(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): StudyMetadata_Guid {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStudyMetadata_Guid } as StudyMetadata_Guid;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<StudyMetadata_Guid>): StudyMetadata_Guid {\n    const message = { ...baseStudyMetadata_Guid } as StudyMetadata_Guid;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = 0;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_Treatment: object = {\n  experimentId: 0,\n  trafficPercentage: 0,\n  groupId: 0,\n  budgetGroupId: 0,\n};\n\nexport const StudyMetadata_Treatment = {\n  encode(\n    message: StudyMetadata_Treatment,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.experimentId !== 0) {\n      writer.uint32(8).uint32(message.experimentId);\n    }\n    if (message.trafficPercentage !== 0) {\n      writer.uint32(16).uint32(message.trafficPercentage);\n    }\n    Object.entries(message.experimentSettings).forEach(([key, value]) => {\n      StudyMetadata_Treatment_ExperimentSettingsEntry.encode(\n        { key: key as any, value },\n        writer.uint32(26).fork()\n      ).ldelim();\n    });\n    if (message.groupId !== 0) {\n      writer.uint32(32).uint32(message.groupId);\n    }\n    for (const v of message.override) {\n      StudyMetadata_Treatment_VariableOverrideMetadata.encode(\n        v!,\n        writer.uint32(42).fork()\n      ).ldelim();\n    }\n    if (message.expGuid !== undefined) {\n      StudyMetadata_Guid.encode(\n        message.expGuid,\n        writer.uint32(50).fork()\n      ).ldelim();\n    }\n    if (message.budgetGroupId !== 0) {\n      writer.uint32(56).uint32(message.budgetGroupId);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_Treatment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_Treatment,\n    } as StudyMetadata_Treatment;\n    message.experimentSettings = {};\n    message.override = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.experimentId = reader.uint32();\n          break;\n        case 2:\n          message.trafficPercentage = reader.uint32();\n          break;\n        case 3:\n          const entry3 = StudyMetadata_Treatment_ExperimentSettingsEntry.decode(\n            reader,\n            reader.uint32()\n          );\n          if (entry3.value !== undefined) {\n            message.experimentSettings[entry3.key] = entry3.value;\n          }\n          break;\n        case 4:\n          message.groupId = reader.uint32();\n          break;\n        case 5:\n          message.override.push(\n            StudyMetadata_Treatment_VariableOverrideMetadata.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        case 6:\n          message.expGuid = StudyMetadata_Guid.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.budgetGroupId = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_Treatment>\n  ): StudyMetadata_Treatment {\n    const message = {\n      ...baseStudyMetadata_Treatment,\n    } as StudyMetadata_Treatment;\n    message.experimentSettings = {};\n    message.override = [];\n    if (object.experimentId !== undefined && object.experimentId !== null) {\n      message.experimentId = object.experimentId;\n    } else {\n      message.experimentId = 0;\n    }\n    if (\n      object.trafficPercentage !== undefined &&\n      object.trafficPercentage !== null\n    ) {\n      message.trafficPercentage = object.trafficPercentage;\n    } else {\n      message.trafficPercentage = 0;\n    }\n    if (\n      object.experimentSettings !== undefined &&\n      object.experimentSettings !== null\n    ) {\n      Object.entries(object.experimentSettings).forEach(([key, value]) => {\n        if (value !== undefined) {\n          message.experimentSettings[key] = String(value);\n        }\n      });\n    }\n    if (object.groupId !== undefined && object.groupId !== null) {\n      message.groupId = object.groupId;\n    } else {\n      message.groupId = 0;\n    }\n    if (object.override !== undefined && object.override !== null) {\n      for (const e of object.override) {\n        message.override.push(\n          StudyMetadata_Treatment_VariableOverrideMetadata.fromPartial(e)\n        );\n      }\n    }\n    if (object.expGuid !== undefined && object.expGuid !== null) {\n      message.expGuid = StudyMetadata_Guid.fromPartial(object.expGuid);\n    } else {\n      message.expGuid = undefined;\n    }\n    if (object.budgetGroupId !== undefined && object.budgetGroupId !== null) {\n      message.budgetGroupId = object.budgetGroupId;\n    } else {\n      message.budgetGroupId = 0;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_Treatment_VariableOverrideMetadata: object = {\n  namespace: \"\",\n  id: \"\",\n  typeName: \"\",\n};\n\nexport const StudyMetadata_Treatment_VariableOverrideMetadata = {\n  encode(\n    message: StudyMetadata_Treatment_VariableOverrideMetadata,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.namespace !== \"\") {\n      writer.uint32(10).string(message.namespace);\n    }\n    if (message.id !== \"\") {\n      writer.uint32(18).string(message.id);\n    }\n    if (message.override !== undefined) {\n      Value.encode(message.override, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.fileDescriptorProto !== undefined) {\n      FileDescriptorProto.encode(\n        message.fileDescriptorProto,\n        writer.uint32(34).fork()\n      ).ldelim();\n    }\n    if (message.typeName !== \"\") {\n      writer.uint32(42).string(message.typeName);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_Treatment_VariableOverrideMetadata {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_Treatment_VariableOverrideMetadata,\n    } as StudyMetadata_Treatment_VariableOverrideMetadata;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.namespace = reader.string();\n          break;\n        case 2:\n          message.id = reader.string();\n          break;\n        case 3:\n          message.override = Value.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.fileDescriptorProto = FileDescriptorProto.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 5:\n          message.typeName = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_Treatment_VariableOverrideMetadata>\n  ): StudyMetadata_Treatment_VariableOverrideMetadata {\n    const message = {\n      ...baseStudyMetadata_Treatment_VariableOverrideMetadata,\n    } as StudyMetadata_Treatment_VariableOverrideMetadata;\n    if (object.namespace !== undefined && object.namespace !== null) {\n      message.namespace = object.namespace;\n    } else {\n      message.namespace = \"\";\n    }\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (object.override !== undefined && object.override !== null) {\n      message.override = Value.fromPartial(object.override);\n    } else {\n      message.override = undefined;\n    }\n    if (\n      object.fileDescriptorProto !== undefined &&\n      object.fileDescriptorProto !== null\n    ) {\n      message.fileDescriptorProto = FileDescriptorProto.fromPartial(\n        object.fileDescriptorProto\n      );\n    } else {\n      message.fileDescriptorProto = undefined;\n    }\n    if (object.typeName !== undefined && object.typeName !== null) {\n      message.typeName = object.typeName;\n    } else {\n      message.typeName = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_Treatment_ExperimentSettingsEntry: object = {\n  key: \"\",\n  value: \"\",\n};\n\nexport const StudyMetadata_Treatment_ExperimentSettingsEntry = {\n  encode(\n    message: StudyMetadata_Treatment_ExperimentSettingsEntry,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_Treatment_ExperimentSettingsEntry {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_Treatment_ExperimentSettingsEntry,\n    } as StudyMetadata_Treatment_ExperimentSettingsEntry;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_Treatment_ExperimentSettingsEntry>\n  ): StudyMetadata_Treatment_ExperimentSettingsEntry {\n    const message = {\n      ...baseStudyMetadata_Treatment_ExperimentSettingsEntry,\n    } as StudyMetadata_Treatment_ExperimentSettingsEntry;\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_UserSliceRange: object = {\n  namespace: \"\",\n  start: 0,\n  end: 0,\n};\n\nexport const StudyMetadata_UserSliceRange = {\n  encode(\n    message: StudyMetadata_UserSliceRange,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.namespace !== \"\") {\n      writer.uint32(10).string(message.namespace);\n    }\n    if (message.start !== 0) {\n      writer.uint32(16).uint32(message.start);\n    }\n    if (message.end !== 0) {\n      writer.uint32(24).uint32(message.end);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_UserSliceRange {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_UserSliceRange,\n    } as StudyMetadata_UserSliceRange;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.namespace = reader.string();\n          break;\n        case 2:\n          message.start = reader.uint32();\n          break;\n        case 3:\n          message.end = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_UserSliceRange>\n  ): StudyMetadata_UserSliceRange {\n    const message = {\n      ...baseStudyMetadata_UserSliceRange,\n    } as StudyMetadata_UserSliceRange;\n    if (object.namespace !== undefined && object.namespace !== null) {\n      message.namespace = object.namespace;\n    } else {\n      message.namespace = \"\";\n    }\n    if (object.start !== undefined && object.start !== null) {\n      message.start = object.start;\n    } else {\n      message.start = 0;\n    }\n    if (object.end !== undefined && object.end !== null) {\n      message.end = object.end;\n    } else {\n      message.end = 0;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_WhitelistedUserGroups: object = {\n  treatmentId: 0,\n  userGroupNames: \"\",\n};\n\nexport const StudyMetadata_WhitelistedUserGroups = {\n  encode(\n    message: StudyMetadata_WhitelistedUserGroups,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.treatmentId !== 0) {\n      writer.uint32(8).uint32(message.treatmentId);\n    }\n    for (const v of message.userGroupNames) {\n      writer.uint32(18).string(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_WhitelistedUserGroups {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_WhitelistedUserGroups,\n    } as StudyMetadata_WhitelistedUserGroups;\n    message.userGroupNames = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.treatmentId = reader.uint32();\n          break;\n        case 2:\n          message.userGroupNames.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_WhitelistedUserGroups>\n  ): StudyMetadata_WhitelistedUserGroups {\n    const message = {\n      ...baseStudyMetadata_WhitelistedUserGroups,\n    } as StudyMetadata_WhitelistedUserGroups;\n    message.userGroupNames = [];\n    if (object.treatmentId !== undefined && object.treatmentId !== null) {\n      message.treatmentId = object.treatmentId;\n    } else {\n      message.treatmentId = 0;\n    }\n    if (object.userGroupNames !== undefined && object.userGroupNames !== null) {\n      for (const e of object.userGroupNames) {\n        message.userGroupNames.push(e);\n      }\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_WhitelistedCondition: object = {};\n\nexport const StudyMetadata_WhitelistedCondition = {\n  encode(\n    message: StudyMetadata_WhitelistedCondition,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    Object.entries(message.whitelistedUserBucketMap).forEach(([key, value]) => {\n      StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry.encode(\n        { key: key as any, value },\n        writer.uint32(10).fork()\n      ).ldelim();\n    });\n    for (const v of message.whitelistedUserGroups) {\n      StudyMetadata_WhitelistedUserGroups.encode(\n        v!,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_WhitelistedCondition {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_WhitelistedCondition,\n    } as StudyMetadata_WhitelistedCondition;\n    message.whitelistedUserBucketMap = {};\n    message.whitelistedUserGroups = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          const entry1 =\n            StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry.decode(\n              reader,\n              reader.uint32()\n            );\n          if (entry1.value !== undefined) {\n            message.whitelistedUserBucketMap[entry1.key] = entry1.value;\n          }\n          break;\n        case 2:\n          message.whitelistedUserGroups.push(\n            StudyMetadata_WhitelistedUserGroups.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_WhitelistedCondition>\n  ): StudyMetadata_WhitelistedCondition {\n    const message = {\n      ...baseStudyMetadata_WhitelistedCondition,\n    } as StudyMetadata_WhitelistedCondition;\n    message.whitelistedUserBucketMap = {};\n    message.whitelistedUserGroups = [];\n    if (\n      object.whitelistedUserBucketMap !== undefined &&\n      object.whitelistedUserBucketMap !== null\n    ) {\n      Object.entries(object.whitelistedUserBucketMap).forEach(\n        ([key, value]) => {\n          if (value !== undefined) {\n            message.whitelistedUserBucketMap[key] = Number(value);\n          }\n        }\n      );\n    }\n    if (\n      object.whitelistedUserGroups !== undefined &&\n      object.whitelistedUserGroups !== null\n    ) {\n      for (const e of object.whitelistedUserGroups) {\n        message.whitelistedUserGroups.push(\n          StudyMetadata_WhitelistedUserGroups.fromPartial(e)\n        );\n      }\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry: object =\n  { key: \"\", value: 0 };\n\nexport const StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry =\n  {\n    encode(\n      message: StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry,\n      writer: _m0.Writer = _m0.Writer.create()\n    ): _m0.Writer {\n      if (message.key !== \"\") {\n        writer.uint32(10).string(message.key);\n      }\n      if (message.value !== 0) {\n        writer.uint32(16).uint32(message.value);\n      }\n      return writer;\n    },\n\n    decode(\n      input: _m0.Reader | Uint8Array,\n      length?: number\n    ): StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry {\n      const reader =\n        input instanceof _m0.Reader ? input : new _m0.Reader(input);\n      let end = length === undefined ? reader.len : reader.pos + length;\n      const message = {\n        ...baseStudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry,\n      } as StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry;\n      while (reader.pos < end) {\n        const tag = reader.uint32();\n        switch (tag >>> 3) {\n          case 1:\n            message.key = reader.string();\n            break;\n          case 2:\n            message.value = reader.uint32();\n            break;\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n      return message;\n    },\n\n    fromPartial(\n      object: DeepPartial<StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry>\n    ): StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry {\n      const message = {\n        ...baseStudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry,\n      } as StudyMetadata_WhitelistedCondition_WhitelistedUserBucketMapEntry;\n      if (object.key !== undefined && object.key !== null) {\n        message.key = object.key;\n      } else {\n        message.key = \"\";\n      }\n      if (object.value !== undefined && object.value !== null) {\n        message.value = object.value;\n      } else {\n        message.value = 0;\n      }\n      return message;\n    },\n  };\n\nconst baseStudyMetadata_AdvancedOptions: object = {\n  seed: \"\",\n  isForNewUser: false,\n  newUserTs: 0,\n  isDeviceLevel: false,\n  isUserIdTargeting: false,\n};\n\nexport const StudyMetadata_AdvancedOptions = {\n  encode(\n    message: StudyMetadata_AdvancedOptions,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.seed !== \"\") {\n      writer.uint32(10).string(message.seed);\n    }\n    if (message.isForNewUser === true) {\n      writer.uint32(16).bool(message.isForNewUser);\n    }\n    if (message.newUserTs !== 0) {\n      writer.uint32(24).uint64(message.newUserTs);\n    }\n    if (message.isDeviceLevel === true) {\n      writer.uint32(32).bool(message.isDeviceLevel);\n    }\n    if (message.isUserIdTargeting === true) {\n      writer.uint32(40).bool(message.isUserIdTargeting);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_AdvancedOptions {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_AdvancedOptions,\n    } as StudyMetadata_AdvancedOptions;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.seed = reader.string();\n          break;\n        case 2:\n          message.isForNewUser = reader.bool();\n          break;\n        case 3:\n          message.newUserTs = longToNumber(reader.uint64() as Long);\n          break;\n        case 4:\n          message.isDeviceLevel = reader.bool();\n          break;\n        case 5:\n          message.isUserIdTargeting = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_AdvancedOptions>\n  ): StudyMetadata_AdvancedOptions {\n    const message = {\n      ...baseStudyMetadata_AdvancedOptions,\n    } as StudyMetadata_AdvancedOptions;\n    if (object.seed !== undefined && object.seed !== null) {\n      message.seed = object.seed;\n    } else {\n      message.seed = \"\";\n    }\n    if (object.isForNewUser !== undefined && object.isForNewUser !== null) {\n      message.isForNewUser = object.isForNewUser;\n    } else {\n      message.isForNewUser = false;\n    }\n    if (object.newUserTs !== undefined && object.newUserTs !== null) {\n      message.newUserTs = object.newUserTs;\n    } else {\n      message.newUserTs = 0;\n    }\n    if (object.isDeviceLevel !== undefined && object.isDeviceLevel !== null) {\n      message.isDeviceLevel = object.isDeviceLevel;\n    } else {\n      message.isDeviceLevel = false;\n    }\n    if (\n      object.isUserIdTargeting !== undefined &&\n      object.isUserIdTargeting !== null\n    ) {\n      message.isUserIdTargeting = object.isUserIdTargeting;\n    } else {\n      message.isUserIdTargeting = false;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_SegmentExperiment: object = {\n  expId: 0,\n  trafficPercentage: 0,\n};\n\nexport const StudyMetadata_SegmentExperiment = {\n  encode(\n    message: StudyMetadata_SegmentExperiment,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.expId !== 0) {\n      writer.uint32(8).uint32(message.expId);\n    }\n    if (message.trafficPercentage !== 0) {\n      writer.uint32(16).uint32(message.trafficPercentage);\n    }\n    Object.entries(message.experimentSettings).forEach(([key, value]) => {\n      StudyMetadata_SegmentExperiment_ExperimentSettingsEntry.encode(\n        { key: key as any, value },\n        writer.uint32(26).fork()\n      ).ldelim();\n    });\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_SegmentExperiment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_SegmentExperiment,\n    } as StudyMetadata_SegmentExperiment;\n    message.experimentSettings = {};\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.expId = reader.uint32();\n          break;\n        case 2:\n          message.trafficPercentage = reader.uint32();\n          break;\n        case 3:\n          const entry3 =\n            StudyMetadata_SegmentExperiment_ExperimentSettingsEntry.decode(\n              reader,\n              reader.uint32()\n            );\n          if (entry3.value !== undefined) {\n            message.experimentSettings[entry3.key] = entry3.value;\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_SegmentExperiment>\n  ): StudyMetadata_SegmentExperiment {\n    const message = {\n      ...baseStudyMetadata_SegmentExperiment,\n    } as StudyMetadata_SegmentExperiment;\n    message.experimentSettings = {};\n    if (object.expId !== undefined && object.expId !== null) {\n      message.expId = object.expId;\n    } else {\n      message.expId = 0;\n    }\n    if (\n      object.trafficPercentage !== undefined &&\n      object.trafficPercentage !== null\n    ) {\n      message.trafficPercentage = object.trafficPercentage;\n    } else {\n      message.trafficPercentage = 0;\n    }\n    if (\n      object.experimentSettings !== undefined &&\n      object.experimentSettings !== null\n    ) {\n      Object.entries(object.experimentSettings).forEach(([key, value]) => {\n        if (value !== undefined) {\n          message.experimentSettings[key] = String(value);\n        }\n      });\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_SegmentExperiment_ExperimentSettingsEntry: object = {\n  key: \"\",\n  value: \"\",\n};\n\nexport const StudyMetadata_SegmentExperiment_ExperimentSettingsEntry = {\n  encode(\n    message: StudyMetadata_SegmentExperiment_ExperimentSettingsEntry,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_SegmentExperiment_ExperimentSettingsEntry {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_SegmentExperiment_ExperimentSettingsEntry,\n    } as StudyMetadata_SegmentExperiment_ExperimentSettingsEntry;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_SegmentExperiment_ExperimentSettingsEntry>\n  ): StudyMetadata_SegmentExperiment_ExperimentSettingsEntry {\n    const message = {\n      ...baseStudyMetadata_SegmentExperiment_ExperimentSettingsEntry,\n    } as StudyMetadata_SegmentExperiment_ExperimentSettingsEntry;\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_Segment: object = { version: 0 };\n\nexport const StudyMetadata_Segment = {\n  encode(\n    message: StudyMetadata_Segment,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.targetingExpression !== undefined) {\n      StudyMetadata_TargetingExpression.encode(\n        message.targetingExpression,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    if (message.sliceRange !== undefined) {\n      StudyMetadata_UserSliceRange.encode(\n        message.sliceRange,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    for (const v of message.experiments) {\n      StudyMetadata_SegmentExperiment.encode(\n        v!,\n        writer.uint32(26).fork()\n      ).ldelim();\n    }\n    if (message.version !== 0) {\n      writer.uint32(32).uint32(message.version);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_Segment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStudyMetadata_Segment } as StudyMetadata_Segment;\n    message.experiments = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.targetingExpression =\n            StudyMetadata_TargetingExpression.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.sliceRange = StudyMetadata_UserSliceRange.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 3:\n          message.experiments.push(\n            StudyMetadata_SegmentExperiment.decode(reader, reader.uint32())\n          );\n          break;\n        case 4:\n          message.version = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_Segment>\n  ): StudyMetadata_Segment {\n    const message = { ...baseStudyMetadata_Segment } as StudyMetadata_Segment;\n    message.experiments = [];\n    if (\n      object.targetingExpression !== undefined &&\n      object.targetingExpression !== null\n    ) {\n      message.targetingExpression =\n        StudyMetadata_TargetingExpression.fromPartial(\n          object.targetingExpression\n        );\n    } else {\n      message.targetingExpression = undefined;\n    }\n    if (object.sliceRange !== undefined && object.sliceRange !== null) {\n      message.sliceRange = StudyMetadata_UserSliceRange.fromPartial(\n        object.sliceRange\n      );\n    } else {\n      message.sliceRange = undefined;\n    }\n    if (object.experiments !== undefined && object.experiments !== null) {\n      for (const e of object.experiments) {\n        message.experiments.push(\n          StudyMetadata_SegmentExperiment.fromPartial(e)\n        );\n      }\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    return message;\n  },\n};\n\nconst baseStudyMetadata_MetaValuesEntry: object = { key: \"\", value: \"\" };\n\nexport const StudyMetadata_MetaValuesEntry = {\n  encode(\n    message: StudyMetadata_MetaValuesEntry,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyMetadata_MetaValuesEntry {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyMetadata_MetaValuesEntry,\n    } as StudyMetadata_MetaValuesEntry;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyMetadata_MetaValuesEntry>\n  ): StudyMetadata_MetaValuesEntry {\n    const message = {\n      ...baseStudyMetadata_MetaValuesEntry,\n    } as StudyMetadata_MetaValuesEntry;\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = \"\";\n    }\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseUpdateStudyMetadataResponse: object = {};\n\nexport const UpdateStudyMetadataResponse = {\n  encode(\n    _: UpdateStudyMetadataResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateStudyMetadataResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateStudyMetadataResponse,\n    } as UpdateStudyMetadataResponse;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    _: DeepPartial<UpdateStudyMetadataResponse>\n  ): UpdateStudyMetadataResponse {\n    const message = {\n      ...baseUpdateStudyMetadataResponse,\n    } as UpdateStudyMetadataResponse;\n    return message;\n  },\n};\n\nconst baseDeleteStudyMetadataRequest: object = { segmentationStudyName: \"\" };\n\nexport const DeleteStudyMetadataRequest = {\n  encode(\n    message: DeleteStudyMetadataRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studiesToDelete) {\n      DeleteStudyMetadataRequest_StudyIdentity.encode(\n        v!,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    if (message.segmentationStudyName !== \"\") {\n      writer.uint32(18).string(message.segmentationStudyName);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): DeleteStudyMetadataRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseDeleteStudyMetadataRequest,\n    } as DeleteStudyMetadataRequest;\n    message.studiesToDelete = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studiesToDelete.push(\n            DeleteStudyMetadataRequest_StudyIdentity.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        case 2:\n          message.segmentationStudyName = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<DeleteStudyMetadataRequest>\n  ): DeleteStudyMetadataRequest {\n    const message = {\n      ...baseDeleteStudyMetadataRequest,\n    } as DeleteStudyMetadataRequest;\n    message.studiesToDelete = [];\n    if (\n      object.studiesToDelete !== undefined &&\n      object.studiesToDelete !== null\n    ) {\n      for (const e of object.studiesToDelete) {\n        message.studiesToDelete.push(\n          DeleteStudyMetadataRequest_StudyIdentity.fromPartial(e)\n        );\n      }\n    }\n    if (\n      object.segmentationStudyName !== undefined &&\n      object.segmentationStudyName !== null\n    ) {\n      message.segmentationStudyName = object.segmentationStudyName;\n    } else {\n      message.segmentationStudyName = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseDeleteStudyMetadataRequest_StudyIdentity: object = {\n  studyId: \"\",\n  version: 0,\n};\n\nexport const DeleteStudyMetadataRequest_StudyIdentity = {\n  encode(\n    message: DeleteStudyMetadataRequest_StudyIdentity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.studyId !== \"\") {\n      writer.uint32(10).string(message.studyId);\n    }\n    if (message.version !== 0) {\n      writer.uint32(16).uint64(message.version);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): DeleteStudyMetadataRequest_StudyIdentity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseDeleteStudyMetadataRequest_StudyIdentity,\n    } as DeleteStudyMetadataRequest_StudyIdentity;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyId = reader.string();\n          break;\n        case 2:\n          message.version = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<DeleteStudyMetadataRequest_StudyIdentity>\n  ): DeleteStudyMetadataRequest_StudyIdentity {\n    const message = {\n      ...baseDeleteStudyMetadataRequest_StudyIdentity,\n    } as DeleteStudyMetadataRequest_StudyIdentity;\n    if (object.studyId !== undefined && object.studyId !== null) {\n      message.studyId = object.studyId;\n    } else {\n      message.studyId = \"\";\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    return message;\n  },\n};\n\nconst baseDeleteStudyMetadataResponse: object = {};\n\nexport const DeleteStudyMetadataResponse = {\n  encode(\n    _: DeleteStudyMetadataResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): DeleteStudyMetadataResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseDeleteStudyMetadataResponse,\n    } as DeleteStudyMetadataResponse;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    _: DeepPartial<DeleteStudyMetadataResponse>\n  ): DeleteStudyMetadataResponse {\n    const message = {\n      ...baseDeleteStudyMetadataResponse,\n    } as DeleteStudyMetadataResponse;\n    return message;\n  },\n};\n\nconst baseFetchStudyMetadataRequest: object = {\n  namespaces: \"\",\n  fetchAllStudies: false,\n};\n\nexport const FetchStudyMetadataRequest = {\n  encode(\n    message: FetchStudyMetadataRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studies) {\n      FetchStudyMetadataRequest_StudyIdentity.encode(\n        v!,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    for (const v of message.namespaces) {\n      writer.uint32(18).string(v!);\n    }\n    if (message.fetchAllStudies === true) {\n      writer.uint32(24).bool(message.fetchAllStudies);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): FetchStudyMetadataRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseFetchStudyMetadataRequest,\n    } as FetchStudyMetadataRequest;\n    message.studies = [];\n    message.namespaces = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studies.push(\n            FetchStudyMetadataRequest_StudyIdentity.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        case 2:\n          message.namespaces.push(reader.string());\n          break;\n        case 3:\n          message.fetchAllStudies = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<FetchStudyMetadataRequest>\n  ): FetchStudyMetadataRequest {\n    const message = {\n      ...baseFetchStudyMetadataRequest,\n    } as FetchStudyMetadataRequest;\n    message.studies = [];\n    message.namespaces = [];\n    if (object.studies !== undefined && object.studies !== null) {\n      for (const e of object.studies) {\n        message.studies.push(\n          FetchStudyMetadataRequest_StudyIdentity.fromPartial(e)\n        );\n      }\n    }\n    if (object.namespaces !== undefined && object.namespaces !== null) {\n      for (const e of object.namespaces) {\n        message.namespaces.push(e);\n      }\n    }\n    if (\n      object.fetchAllStudies !== undefined &&\n      object.fetchAllStudies !== null\n    ) {\n      message.fetchAllStudies = object.fetchAllStudies;\n    } else {\n      message.fetchAllStudies = false;\n    }\n    return message;\n  },\n};\n\nconst baseFetchStudyMetadataRequest_StudyIdentity: object = {\n  studyId: \"\",\n  version: 0,\n};\n\nexport const FetchStudyMetadataRequest_StudyIdentity = {\n  encode(\n    message: FetchStudyMetadataRequest_StudyIdentity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.studyId !== \"\") {\n      writer.uint32(10).string(message.studyId);\n    }\n    if (message.version !== 0) {\n      writer.uint32(16).uint64(message.version);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): FetchStudyMetadataRequest_StudyIdentity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseFetchStudyMetadataRequest_StudyIdentity,\n    } as FetchStudyMetadataRequest_StudyIdentity;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyId = reader.string();\n          break;\n        case 2:\n          message.version = longToNumber(reader.uint64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<FetchStudyMetadataRequest_StudyIdentity>\n  ): FetchStudyMetadataRequest_StudyIdentity {\n    const message = {\n      ...baseFetchStudyMetadataRequest_StudyIdentity,\n    } as FetchStudyMetadataRequest_StudyIdentity;\n    if (object.studyId !== undefined && object.studyId !== null) {\n      message.studyId = object.studyId;\n    } else {\n      message.studyId = \"\";\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = object.version;\n    } else {\n      message.version = 0;\n    }\n    return message;\n  },\n};\n\nconst baseFetchStudyMetadataResponse: object = {};\n\nexport const FetchStudyMetadataResponse = {\n  encode(\n    message: FetchStudyMetadataResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studyMetadata) {\n      StudyMetadata.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): FetchStudyMetadataResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseFetchStudyMetadataResponse,\n    } as FetchStudyMetadataResponse;\n    message.studyMetadata = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyMetadata.push(\n            StudyMetadata.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<FetchStudyMetadataResponse>\n  ): FetchStudyMetadataResponse {\n    const message = {\n      ...baseFetchStudyMetadataResponse,\n    } as FetchStudyMetadataResponse;\n    message.studyMetadata = [];\n    if (object.studyMetadata !== undefined && object.studyMetadata !== null) {\n      for (const e of object.studyMetadata) {\n        message.studyMetadata.push(StudyMetadata.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseHealthCheckRequest: object = {};\n\nexport const HealthCheckRequest = {\n  encode(\n    _: HealthCheckRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): HealthCheckRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseHealthCheckRequest } as HealthCheckRequest;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(_: DeepPartial<HealthCheckRequest>): HealthCheckRequest {\n    const message = { ...baseHealthCheckRequest } as HealthCheckRequest;\n    return message;\n  },\n};\n\nconst baseHealthCheckResponse: object = { healthCheckStatus: \"\" };\n\nexport const HealthCheckResponse = {\n  encode(\n    message: HealthCheckResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.healthCheckStatus !== \"\") {\n      writer.uint32(10).string(message.healthCheckStatus);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): HealthCheckResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseHealthCheckResponse } as HealthCheckResponse;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.healthCheckStatus = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<HealthCheckResponse>): HealthCheckResponse {\n    const message = { ...baseHealthCheckResponse } as HealthCheckResponse;\n    if (\n      object.healthCheckStatus !== undefined &&\n      object.healthCheckStatus !== null\n    ) {\n      message.healthCheckStatus = object.healthCheckStatus;\n    } else {\n      message.healthCheckStatus = \"\";\n    }\n    return message;\n  },\n};\n\n/** The ab config service definition. */\nexport interface ABConfigService {\n  /** Get the study configs using provided properties, called from CE */\n  getConfigsValueByProperties(\n    request: GetConfigsValueByPropertiesRequest\n  ): Promise<GetConfigsValueByPropertiesResponse>;\n  /** Get the segmentation study config overrides using provided properties, called from CE */\n  getConfigOverridesByProperties(\n    request: GetConfigOverridesByPropertiesRequest\n  ): Promise<GetConfigOverridesByPropertiesResponse>;\n  /** Get config overrides using provided properties by RUID, called from CE (segmentation only) */\n  getConfigOverridesByRUID(\n    request: GetConfigOverridesByRUIDRequest\n  ): Promise<GetConfigOverridesByRUIDResponse>;\n  /** Update study metadata */\n  updateStudyMetadata(\n    request: UpdateStudyMetadataRequest\n  ): Promise<UpdateStudyMetadataResponse>;\n  /** Delete study metadata */\n  deleteStudyMetadata(\n    request: DeleteStudyMetadataRequest\n  ): Promise<DeleteStudyMetadataResponse>;\n  /** get study metadata for verification */\n  fetchStudyMetadata(\n    request: FetchStudyMetadataRequest\n  ): Promise<FetchStudyMetadataResponse>;\n  /** Dummy health check */\n  healthCheck(request: HealthCheckRequest): Promise<HealthCheckResponse>;\n}\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Observable } from \"rxjs\";\nimport { Guid } from \"../ab_service/common/guid\";\nimport { UserAgentInfo } from \"../ab_service/ab_config_service\";\n\nexport const protobufPackage = \"snapchat.ab.exposure_service\";\n\n/** ProtoBuf API definition for AB config service. */\n\n/** Type of id */\nexport enum IdType {\n  /** UNKNOWN_UNSET - Default, please don't use. */\n  UNKNOWN_UNSET = 0,\n  /** USER - User Id. */\n  USER = 1,\n  /** SNAPCHAT_CLIENT - Snapchat Client Id. */\n  SNAPCHAT_CLIENT = 2,\n  /** WEB_CLIENT - Web Client Id. */\n  WEB_CLIENT = 3,\n  /** WEB_SNAPCHAT_USER - Web Snapchat User Id. */\n  WEB_SNAPCHAT_USER = 4,\n  /** AD_ACCOUNT - Ad account ID */\n  AD_ACCOUNT = 5,\n  /** AM_ORGANIZATION - Ads Manager organization ID */\n  AM_ORGANIZATION = 6,\n  /** AM_MEMBER - Ads Manager member ID */\n  AM_MEMBER = 7,\n  /** AM_SESSION - Ads Manager session ID */\n  AM_SESSION = 8,\n  /** AM_PROFILE - Ads Manager profile ID */\n  AM_PROFILE = 9,\n  /** AM_SNAPCHAT_USER - Snapchat user ID on Ads Manager */\n  AM_SNAPCHAT_USER = 10,\n  /** SNAPCHAT_ADVERTISING - Snapchat Advertising ID for Budget A/B */\n  SNAPCHAT_ADVERTISING = 11,\n  /** AM_CLIENT - Ads Manager client ID */\n  AM_CLIENT = 12,\n  /** CONFIG_DEVICE - Permanent device ID */\n  CONFIG_DEVICE = 13,\n  UNRECOGNIZED = -1,\n}\n\n/** Type of logging */\nexport enum LoggingType {\n  /** UNSET - Default, please don't use. */\n  UNSET = 0,\n  /** SERVER_TRIGGER - Server trigger. */\n  SERVER_TRIGGER = 1,\n  /** CLIENT_TRIGGER - Client trigger. */\n  CLIENT_TRIGGER = 2,\n  /** ALLOCATION - Allocation logging. */\n  ALLOCATION = 3,\n  UNRECOGNIZED = -1,\n}\n\n/** message of study treatment info */\nexport interface StudyTreatmentInfo {\n  /** Name of the study. */\n  studyName: string;\n  /** Id of the treatment. */\n  treatmentId: number;\n  /** exp Guid of the treatment. As of now it is intended to use internally ab service only. */\n  expGuid: Guid | undefined;\n}\n\n/** Struct holding Id data. */\nexport interface Id {\n  /** Value of the id. */\n  value: string;\n  /** Type of the id. */\n  type: IdType;\n}\n\n/** Struct holding geo data. */\nexport interface GeoData {\n  /** Country code */\n  countryCode: string;\n  /** City */\n  city: string;\n  /** Region */\n  region: string;\n}\n\n/** Request message of AB allocation */\nexport interface UpdateAbExposureRequest {\n  /** List of study treatment info */\n  studyTreatmentInfo: StudyTreatmentInfo[];\n  /** Id this exposure belonging to. */\n  id: Id | undefined;\n  /** User name */\n  userName: string;\n  /** User agent info */\n  userAgentInfo: UserAgentInfo | undefined;\n  /** Geo data */\n  geoData: GeoData | undefined;\n  /** Logging type */\n  loggingType: LoggingType;\n}\n\n/** Extra data for exposure logging */\nexport interface Properties {\n  /** User name */\n  userName: string;\n  /** User agent string */\n  userAgentString: string;\n  /** Geo data */\n  geoData: GeoData | undefined;\n  /**\n   * TODO: Use common user agent protos for the following fields. They are currently deprecated.\n   * OS\n   */\n  os: string;\n  /** Device name (leave empty for desktop) */\n  deviceName: string;\n  /** Browser name (web only) */\n  browserName: string;\n  /** Locale (e.g. en_US) */\n  locale: string;\n  /** os version */\n  osVersion: string;\n  /** app version */\n  appVersion: string;\n  /** app build */\n  appBuild: string;\n}\n\n/** The response message of updateABExposure, empty for now */\nexport interface UpdateAbExposureResponse {}\n\nexport interface AbExposureData {\n  /** Id this exposure belonging to. */\n  id: Id | undefined;\n  /** List of study treatment info. */\n  studyTreatmentInfo: StudyTreatmentInfo[];\n  /** Properties for the exposure. */\n  properties: Properties | undefined;\n  /** Logging type. */\n  loggingType: LoggingType;\n  /** Secondary ids for exposure logging, e.g. config device id or client id. */\n  secondaryIds: Id[];\n}\n\n/** Request message of AB exposures */\nexport interface BatchUpdateAbExposureRequest {\n  /** List of AB exposure data */\n  abExposureData: AbExposureData[];\n  /**\n   * used to disable blizzard logging but user map will be updated\n   * Internal use only ATM\n   */\n  disableLogging: boolean;\n}\n\n/** The response message of BatchUpdateABExposure, empty for now */\nexport interface BatchUpdateAbExposureResponse {}\n\nexport interface AbExposureSizeRequestData {\n  /** Type of logging for usermap */\n  loggingType: LoggingType;\n  /** Name of the study. */\n  segmentStudyName: string[];\n}\n\nexport interface GetAbExposureSizeRequest {\n  /** list of exposure size request data */\n  abExposureSizeRequestData: AbExposureSizeRequestData[];\n}\n\nexport interface StudyTreatmentInfoWithExposureSizeData {\n  /** the study treatment info. */\n  studyTreatmentInfo: StudyTreatmentInfo | undefined;\n  /** the exposure size. */\n  exposureSize: number;\n}\n\nexport interface AbExposureSizeResponseData {\n  /** Type of logging. */\n  loggingType: LoggingType;\n  /** map of study treatment info to exposure size. */\n  studyTreatmentInfoWithExposureSizeData: StudyTreatmentInfoWithExposureSizeData[];\n}\n\nexport interface GetAbExposureSizeResponse {\n  /** list of exposure size reponse data */\n  abExposureSizeResponseData: AbExposureSizeResponseData[];\n}\n\nexport interface GetAbExposureStreamingRequest {\n  /** Type of logging for usermap */\n  loggingType: LoggingType;\n  /** ID to fetch */\n  id: Id | undefined;\n}\n\nexport interface GetAbExposureStreamingResponse {\n  /** List of studies in usermap with assigned treatment */\n  studyTreatmentInfo: StudyTreatmentInfo[];\n  /** Type of logging for usermap */\n  loggingType: LoggingType;\n  /** ID of usermap */\n  id: Id | undefined;\n}\n\nexport interface AbExposureReadRequestData {\n  /** Type of logging for usermap */\n  loggingType: LoggingType;\n  /** ID to fetch */\n  id: Id[];\n}\n\nexport interface GetAbExposureRequest {\n  /** List of ab exposure read request data */\n  abExposureReadRequestData: AbExposureReadRequestData[];\n  /**\n   * The epoch time in seconds for the study update time to be used for fitlering.\n   * We will include only the studies that are updated after this time in our response.\n   */\n  studyUpdateTimeEpochSec: number;\n}\n\nexport interface PerIdExposureData {\n  /** ID that was queried for. */\n  id: Id | undefined;\n  /** List of studies in usermap with assigned treatment */\n  studyTreatmentInfo: StudyTreatmentInfo[];\n}\n\nexport interface AbExposureReadResponseData {\n  /** Type of logging for usermap */\n  loggingType: LoggingType;\n  /** The per id exposure data that was queried. */\n  perIdExposureData: PerIdExposureData[];\n}\n\nexport interface GetAbExposureResponse {\n  /** List of ab exposure read reponse data */\n  abExposureReadResponseData: AbExposureReadResponseData[];\n}\n\n/** Request message of AB exposures */\nexport interface UpdateAbExposureStreamingRequest {\n  /** List of AB exposure data */\n  abExposureData: AbExposureData[];\n  /**\n   * used to disable blizzard logging but user map will be updated\n   * Internal use only ATM\n   */\n  disableLogging: boolean;\n}\n\nexport interface UpdateAbExposureStreamingResponse {\n  /**\n   * Temporary field for testing\n   * TODO: remove this\n   */\n  message: string;\n}\n\nconst baseStudyTreatmentInfo: object = { studyName: \"\", treatmentId: 0 };\n\nexport const StudyTreatmentInfo = {\n  encode(\n    message: StudyTreatmentInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.studyName !== \"\") {\n      writer.uint32(10).string(message.studyName);\n    }\n    if (message.treatmentId !== 0) {\n      writer.uint32(16).uint32(message.treatmentId);\n    }\n    if (message.expGuid !== undefined) {\n      Guid.encode(message.expGuid, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): StudyTreatmentInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStudyTreatmentInfo } as StudyTreatmentInfo;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyName = reader.string();\n          break;\n        case 2:\n          message.treatmentId = reader.uint32();\n          break;\n        case 3:\n          message.expGuid = Guid.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<StudyTreatmentInfo>): StudyTreatmentInfo {\n    const message = { ...baseStudyTreatmentInfo } as StudyTreatmentInfo;\n    if (object.studyName !== undefined && object.studyName !== null) {\n      message.studyName = object.studyName;\n    } else {\n      message.studyName = \"\";\n    }\n    if (object.treatmentId !== undefined && object.treatmentId !== null) {\n      message.treatmentId = object.treatmentId;\n    } else {\n      message.treatmentId = 0;\n    }\n    if (object.expGuid !== undefined && object.expGuid !== null) {\n      message.expGuid = Guid.fromPartial(object.expGuid);\n    } else {\n      message.expGuid = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseId: object = { value: \"\", type: 0 };\n\nexport const Id = {\n  encode(message: Id, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.value !== \"\") {\n      writer.uint32(10).string(message.value);\n    }\n    if (message.type !== 0) {\n      writer.uint32(16).int32(message.type);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Id {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseId } as Id;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.string();\n          break;\n        case 2:\n          message.type = reader.int32() as any;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Id>): Id {\n    const message = { ...baseId } as Id;\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = \"\";\n    }\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = 0;\n    }\n    return message;\n  },\n};\n\nconst baseGeoData: object = { countryCode: \"\", city: \"\", region: \"\" };\n\nexport const GeoData = {\n  encode(\n    message: GeoData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.countryCode !== \"\") {\n      writer.uint32(10).string(message.countryCode);\n    }\n    if (message.city !== \"\") {\n      writer.uint32(18).string(message.city);\n    }\n    if (message.region !== \"\") {\n      writer.uint32(26).string(message.region);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): GeoData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGeoData } as GeoData;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.countryCode = reader.string();\n          break;\n        case 2:\n          message.city = reader.string();\n          break;\n        case 3:\n          message.region = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<GeoData>): GeoData {\n    const message = { ...baseGeoData } as GeoData;\n    if (object.countryCode !== undefined && object.countryCode !== null) {\n      message.countryCode = object.countryCode;\n    } else {\n      message.countryCode = \"\";\n    }\n    if (object.city !== undefined && object.city !== null) {\n      message.city = object.city;\n    } else {\n      message.city = \"\";\n    }\n    if (object.region !== undefined && object.region !== null) {\n      message.region = object.region;\n    } else {\n      message.region = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseUpdateAbExposureRequest: object = { userName: \"\", loggingType: 0 };\n\nexport const UpdateAbExposureRequest = {\n  encode(\n    message: UpdateAbExposureRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studyTreatmentInfo) {\n      StudyTreatmentInfo.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.id !== undefined) {\n      Id.encode(message.id, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.userName !== \"\") {\n      writer.uint32(26).string(message.userName);\n    }\n    if (message.userAgentInfo !== undefined) {\n      UserAgentInfo.encode(\n        message.userAgentInfo,\n        writer.uint32(34).fork()\n      ).ldelim();\n    }\n    if (message.geoData !== undefined) {\n      GeoData.encode(message.geoData, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.loggingType !== 0) {\n      writer.uint32(48).int32(message.loggingType);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateAbExposureRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateAbExposureRequest,\n    } as UpdateAbExposureRequest;\n    message.studyTreatmentInfo = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyTreatmentInfo.push(\n            StudyTreatmentInfo.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.id = Id.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.userName = reader.string();\n          break;\n        case 4:\n          message.userAgentInfo = UserAgentInfo.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.geoData = GeoData.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.loggingType = reader.int32() as any;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<UpdateAbExposureRequest>\n  ): UpdateAbExposureRequest {\n    const message = {\n      ...baseUpdateAbExposureRequest,\n    } as UpdateAbExposureRequest;\n    message.studyTreatmentInfo = [];\n    if (\n      object.studyTreatmentInfo !== undefined &&\n      object.studyTreatmentInfo !== null\n    ) {\n      for (const e of object.studyTreatmentInfo) {\n        message.studyTreatmentInfo.push(StudyTreatmentInfo.fromPartial(e));\n      }\n    }\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Id.fromPartial(object.id);\n    } else {\n      message.id = undefined;\n    }\n    if (object.userName !== undefined && object.userName !== null) {\n      message.userName = object.userName;\n    } else {\n      message.userName = \"\";\n    }\n    if (object.userAgentInfo !== undefined && object.userAgentInfo !== null) {\n      message.userAgentInfo = UserAgentInfo.fromPartial(object.userAgentInfo);\n    } else {\n      message.userAgentInfo = undefined;\n    }\n    if (object.geoData !== undefined && object.geoData !== null) {\n      message.geoData = GeoData.fromPartial(object.geoData);\n    } else {\n      message.geoData = undefined;\n    }\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    return message;\n  },\n};\n\nconst baseProperties: object = {\n  userName: \"\",\n  userAgentString: \"\",\n  os: \"\",\n  deviceName: \"\",\n  browserName: \"\",\n  locale: \"\",\n  osVersion: \"\",\n  appVersion: \"\",\n  appBuild: \"\",\n};\n\nexport const Properties = {\n  encode(\n    message: Properties,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.userName !== \"\") {\n      writer.uint32(10).string(message.userName);\n    }\n    if (message.userAgentString !== \"\") {\n      writer.uint32(18).string(message.userAgentString);\n    }\n    if (message.geoData !== undefined) {\n      GeoData.encode(message.geoData, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.os !== \"\") {\n      writer.uint32(34).string(message.os);\n    }\n    if (message.deviceName !== \"\") {\n      writer.uint32(42).string(message.deviceName);\n    }\n    if (message.browserName !== \"\") {\n      writer.uint32(50).string(message.browserName);\n    }\n    if (message.locale !== \"\") {\n      writer.uint32(58).string(message.locale);\n    }\n    if (message.osVersion !== \"\") {\n      writer.uint32(66).string(message.osVersion);\n    }\n    if (message.appVersion !== \"\") {\n      writer.uint32(74).string(message.appVersion);\n    }\n    if (message.appBuild !== \"\") {\n      writer.uint32(82).string(message.appBuild);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Properties {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseProperties } as Properties;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userName = reader.string();\n          break;\n        case 2:\n          message.userAgentString = reader.string();\n          break;\n        case 3:\n          message.geoData = GeoData.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.os = reader.string();\n          break;\n        case 5:\n          message.deviceName = reader.string();\n          break;\n        case 6:\n          message.browserName = reader.string();\n          break;\n        case 7:\n          message.locale = reader.string();\n          break;\n        case 8:\n          message.osVersion = reader.string();\n          break;\n        case 9:\n          message.appVersion = reader.string();\n          break;\n        case 10:\n          message.appBuild = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<Properties>): Properties {\n    const message = { ...baseProperties } as Properties;\n    if (object.userName !== undefined && object.userName !== null) {\n      message.userName = object.userName;\n    } else {\n      message.userName = \"\";\n    }\n    if (\n      object.userAgentString !== undefined &&\n      object.userAgentString !== null\n    ) {\n      message.userAgentString = object.userAgentString;\n    } else {\n      message.userAgentString = \"\";\n    }\n    if (object.geoData !== undefined && object.geoData !== null) {\n      message.geoData = GeoData.fromPartial(object.geoData);\n    } else {\n      message.geoData = undefined;\n    }\n    if (object.os !== undefined && object.os !== null) {\n      message.os = object.os;\n    } else {\n      message.os = \"\";\n    }\n    if (object.deviceName !== undefined && object.deviceName !== null) {\n      message.deviceName = object.deviceName;\n    } else {\n      message.deviceName = \"\";\n    }\n    if (object.browserName !== undefined && object.browserName !== null) {\n      message.browserName = object.browserName;\n    } else {\n      message.browserName = \"\";\n    }\n    if (object.locale !== undefined && object.locale !== null) {\n      message.locale = object.locale;\n    } else {\n      message.locale = \"\";\n    }\n    if (object.osVersion !== undefined && object.osVersion !== null) {\n      message.osVersion = object.osVersion;\n    } else {\n      message.osVersion = \"\";\n    }\n    if (object.appVersion !== undefined && object.appVersion !== null) {\n      message.appVersion = object.appVersion;\n    } else {\n      message.appVersion = \"\";\n    }\n    if (object.appBuild !== undefined && object.appBuild !== null) {\n      message.appBuild = object.appBuild;\n    } else {\n      message.appBuild = \"\";\n    }\n    return message;\n  },\n};\n\nconst baseUpdateAbExposureResponse: object = {};\n\nexport const UpdateAbExposureResponse = {\n  encode(\n    _: UpdateAbExposureResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateAbExposureResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateAbExposureResponse,\n    } as UpdateAbExposureResponse;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    _: DeepPartial<UpdateAbExposureResponse>\n  ): UpdateAbExposureResponse {\n    const message = {\n      ...baseUpdateAbExposureResponse,\n    } as UpdateAbExposureResponse;\n    return message;\n  },\n};\n\nconst baseAbExposureData: object = { loggingType: 0 };\n\nexport const AbExposureData = {\n  encode(\n    message: AbExposureData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.id !== undefined) {\n      Id.encode(message.id, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.studyTreatmentInfo) {\n      StudyTreatmentInfo.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.properties !== undefined) {\n      Properties.encode(message.properties, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.loggingType !== 0) {\n      writer.uint32(32).int32(message.loggingType);\n    }\n    for (const v of message.secondaryIds) {\n      Id.encode(v!, writer.uint32(42).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): AbExposureData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseAbExposureData } as AbExposureData;\n    message.studyTreatmentInfo = [];\n    message.secondaryIds = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = Id.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.studyTreatmentInfo.push(\n            StudyTreatmentInfo.decode(reader, reader.uint32())\n          );\n          break;\n        case 3:\n          message.properties = Properties.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 5:\n          message.secondaryIds.push(Id.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<AbExposureData>): AbExposureData {\n    const message = { ...baseAbExposureData } as AbExposureData;\n    message.studyTreatmentInfo = [];\n    message.secondaryIds = [];\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Id.fromPartial(object.id);\n    } else {\n      message.id = undefined;\n    }\n    if (\n      object.studyTreatmentInfo !== undefined &&\n      object.studyTreatmentInfo !== null\n    ) {\n      for (const e of object.studyTreatmentInfo) {\n        message.studyTreatmentInfo.push(StudyTreatmentInfo.fromPartial(e));\n      }\n    }\n    if (object.properties !== undefined && object.properties !== null) {\n      message.properties = Properties.fromPartial(object.properties);\n    } else {\n      message.properties = undefined;\n    }\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (object.secondaryIds !== undefined && object.secondaryIds !== null) {\n      for (const e of object.secondaryIds) {\n        message.secondaryIds.push(Id.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseBatchUpdateAbExposureRequest: object = { disableLogging: false };\n\nexport const BatchUpdateAbExposureRequest = {\n  encode(\n    message: BatchUpdateAbExposureRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.abExposureData) {\n      AbExposureData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.disableLogging === true) {\n      writer.uint32(16).bool(message.disableLogging);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): BatchUpdateAbExposureRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseBatchUpdateAbExposureRequest,\n    } as BatchUpdateAbExposureRequest;\n    message.abExposureData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abExposureData.push(\n            AbExposureData.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.disableLogging = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<BatchUpdateAbExposureRequest>\n  ): BatchUpdateAbExposureRequest {\n    const message = {\n      ...baseBatchUpdateAbExposureRequest,\n    } as BatchUpdateAbExposureRequest;\n    message.abExposureData = [];\n    if (object.abExposureData !== undefined && object.abExposureData !== null) {\n      for (const e of object.abExposureData) {\n        message.abExposureData.push(AbExposureData.fromPartial(e));\n      }\n    }\n    if (object.disableLogging !== undefined && object.disableLogging !== null) {\n      message.disableLogging = object.disableLogging;\n    } else {\n      message.disableLogging = false;\n    }\n    return message;\n  },\n};\n\nconst baseBatchUpdateAbExposureResponse: object = {};\n\nexport const BatchUpdateAbExposureResponse = {\n  encode(\n    _: BatchUpdateAbExposureResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): BatchUpdateAbExposureResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseBatchUpdateAbExposureResponse,\n    } as BatchUpdateAbExposureResponse;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    _: DeepPartial<BatchUpdateAbExposureResponse>\n  ): BatchUpdateAbExposureResponse {\n    const message = {\n      ...baseBatchUpdateAbExposureResponse,\n    } as BatchUpdateAbExposureResponse;\n    return message;\n  },\n};\n\nconst baseAbExposureSizeRequestData: object = {\n  loggingType: 0,\n  segmentStudyName: \"\",\n};\n\nexport const AbExposureSizeRequestData = {\n  encode(\n    message: AbExposureSizeRequestData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.loggingType !== 0) {\n      writer.uint32(8).int32(message.loggingType);\n    }\n    for (const v of message.segmentStudyName) {\n      writer.uint32(18).string(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): AbExposureSizeRequestData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseAbExposureSizeRequestData,\n    } as AbExposureSizeRequestData;\n    message.segmentStudyName = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 2:\n          message.segmentStudyName.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<AbExposureSizeRequestData>\n  ): AbExposureSizeRequestData {\n    const message = {\n      ...baseAbExposureSizeRequestData,\n    } as AbExposureSizeRequestData;\n    message.segmentStudyName = [];\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (\n      object.segmentStudyName !== undefined &&\n      object.segmentStudyName !== null\n    ) {\n      for (const e of object.segmentStudyName) {\n        message.segmentStudyName.push(e);\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGetAbExposureSizeRequest: object = {};\n\nexport const GetAbExposureSizeRequest = {\n  encode(\n    message: GetAbExposureSizeRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.abExposureSizeRequestData) {\n      AbExposureSizeRequestData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetAbExposureSizeRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetAbExposureSizeRequest,\n    } as GetAbExposureSizeRequest;\n    message.abExposureSizeRequestData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abExposureSizeRequestData.push(\n            AbExposureSizeRequestData.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetAbExposureSizeRequest>\n  ): GetAbExposureSizeRequest {\n    const message = {\n      ...baseGetAbExposureSizeRequest,\n    } as GetAbExposureSizeRequest;\n    message.abExposureSizeRequestData = [];\n    if (\n      object.abExposureSizeRequestData !== undefined &&\n      object.abExposureSizeRequestData !== null\n    ) {\n      for (const e of object.abExposureSizeRequestData) {\n        message.abExposureSizeRequestData.push(\n          AbExposureSizeRequestData.fromPartial(e)\n        );\n      }\n    }\n    return message;\n  },\n};\n\nconst baseStudyTreatmentInfoWithExposureSizeData: object = { exposureSize: 0 };\n\nexport const StudyTreatmentInfoWithExposureSizeData = {\n  encode(\n    message: StudyTreatmentInfoWithExposureSizeData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.studyTreatmentInfo !== undefined) {\n      StudyTreatmentInfo.encode(\n        message.studyTreatmentInfo,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    if (message.exposureSize !== 0) {\n      writer.uint32(16).int64(message.exposureSize);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): StudyTreatmentInfoWithExposureSizeData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseStudyTreatmentInfoWithExposureSizeData,\n    } as StudyTreatmentInfoWithExposureSizeData;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyTreatmentInfo = StudyTreatmentInfo.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 2:\n          message.exposureSize = longToNumber(reader.int64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<StudyTreatmentInfoWithExposureSizeData>\n  ): StudyTreatmentInfoWithExposureSizeData {\n    const message = {\n      ...baseStudyTreatmentInfoWithExposureSizeData,\n    } as StudyTreatmentInfoWithExposureSizeData;\n    if (\n      object.studyTreatmentInfo !== undefined &&\n      object.studyTreatmentInfo !== null\n    ) {\n      message.studyTreatmentInfo = StudyTreatmentInfo.fromPartial(\n        object.studyTreatmentInfo\n      );\n    } else {\n      message.studyTreatmentInfo = undefined;\n    }\n    if (object.exposureSize !== undefined && object.exposureSize !== null) {\n      message.exposureSize = object.exposureSize;\n    } else {\n      message.exposureSize = 0;\n    }\n    return message;\n  },\n};\n\nconst baseAbExposureSizeResponseData: object = { loggingType: 0 };\n\nexport const AbExposureSizeResponseData = {\n  encode(\n    message: AbExposureSizeResponseData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.loggingType !== 0) {\n      writer.uint32(8).int32(message.loggingType);\n    }\n    for (const v of message.studyTreatmentInfoWithExposureSizeData) {\n      StudyTreatmentInfoWithExposureSizeData.encode(\n        v!,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): AbExposureSizeResponseData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseAbExposureSizeResponseData,\n    } as AbExposureSizeResponseData;\n    message.studyTreatmentInfoWithExposureSizeData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 2:\n          message.studyTreatmentInfoWithExposureSizeData.push(\n            StudyTreatmentInfoWithExposureSizeData.decode(\n              reader,\n              reader.uint32()\n            )\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<AbExposureSizeResponseData>\n  ): AbExposureSizeResponseData {\n    const message = {\n      ...baseAbExposureSizeResponseData,\n    } as AbExposureSizeResponseData;\n    message.studyTreatmentInfoWithExposureSizeData = [];\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (\n      object.studyTreatmentInfoWithExposureSizeData !== undefined &&\n      object.studyTreatmentInfoWithExposureSizeData !== null\n    ) {\n      for (const e of object.studyTreatmentInfoWithExposureSizeData) {\n        message.studyTreatmentInfoWithExposureSizeData.push(\n          StudyTreatmentInfoWithExposureSizeData.fromPartial(e)\n        );\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGetAbExposureSizeResponse: object = {};\n\nexport const GetAbExposureSizeResponse = {\n  encode(\n    message: GetAbExposureSizeResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.abExposureSizeResponseData) {\n      AbExposureSizeResponseData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetAbExposureSizeResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetAbExposureSizeResponse,\n    } as GetAbExposureSizeResponse;\n    message.abExposureSizeResponseData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abExposureSizeResponseData.push(\n            AbExposureSizeResponseData.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetAbExposureSizeResponse>\n  ): GetAbExposureSizeResponse {\n    const message = {\n      ...baseGetAbExposureSizeResponse,\n    } as GetAbExposureSizeResponse;\n    message.abExposureSizeResponseData = [];\n    if (\n      object.abExposureSizeResponseData !== undefined &&\n      object.abExposureSizeResponseData !== null\n    ) {\n      for (const e of object.abExposureSizeResponseData) {\n        message.abExposureSizeResponseData.push(\n          AbExposureSizeResponseData.fromPartial(e)\n        );\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGetAbExposureStreamingRequest: object = { loggingType: 0 };\n\nexport const GetAbExposureStreamingRequest = {\n  encode(\n    message: GetAbExposureStreamingRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.loggingType !== 0) {\n      writer.uint32(8).int32(message.loggingType);\n    }\n    if (message.id !== undefined) {\n      Id.encode(message.id, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetAbExposureStreamingRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetAbExposureStreamingRequest,\n    } as GetAbExposureStreamingRequest;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 2:\n          message.id = Id.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetAbExposureStreamingRequest>\n  ): GetAbExposureStreamingRequest {\n    const message = {\n      ...baseGetAbExposureStreamingRequest,\n    } as GetAbExposureStreamingRequest;\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Id.fromPartial(object.id);\n    } else {\n      message.id = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseGetAbExposureStreamingResponse: object = { loggingType: 0 };\n\nexport const GetAbExposureStreamingResponse = {\n  encode(\n    message: GetAbExposureStreamingResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.studyTreatmentInfo) {\n      StudyTreatmentInfo.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.loggingType !== 0) {\n      writer.uint32(16).int32(message.loggingType);\n    }\n    if (message.id !== undefined) {\n      Id.encode(message.id, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetAbExposureStreamingResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseGetAbExposureStreamingResponse,\n    } as GetAbExposureStreamingResponse;\n    message.studyTreatmentInfo = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.studyTreatmentInfo.push(\n            StudyTreatmentInfo.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 3:\n          message.id = Id.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetAbExposureStreamingResponse>\n  ): GetAbExposureStreamingResponse {\n    const message = {\n      ...baseGetAbExposureStreamingResponse,\n    } as GetAbExposureStreamingResponse;\n    message.studyTreatmentInfo = [];\n    if (\n      object.studyTreatmentInfo !== undefined &&\n      object.studyTreatmentInfo !== null\n    ) {\n      for (const e of object.studyTreatmentInfo) {\n        message.studyTreatmentInfo.push(StudyTreatmentInfo.fromPartial(e));\n      }\n    }\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Id.fromPartial(object.id);\n    } else {\n      message.id = undefined;\n    }\n    return message;\n  },\n};\n\nconst baseAbExposureReadRequestData: object = { loggingType: 0 };\n\nexport const AbExposureReadRequestData = {\n  encode(\n    message: AbExposureReadRequestData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.loggingType !== 0) {\n      writer.uint32(8).int32(message.loggingType);\n    }\n    for (const v of message.id) {\n      Id.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): AbExposureReadRequestData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseAbExposureReadRequestData,\n    } as AbExposureReadRequestData;\n    message.id = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 2:\n          message.id.push(Id.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<AbExposureReadRequestData>\n  ): AbExposureReadRequestData {\n    const message = {\n      ...baseAbExposureReadRequestData,\n    } as AbExposureReadRequestData;\n    message.id = [];\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (object.id !== undefined && object.id !== null) {\n      for (const e of object.id) {\n        message.id.push(Id.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGetAbExposureRequest: object = { studyUpdateTimeEpochSec: 0 };\n\nexport const GetAbExposureRequest = {\n  encode(\n    message: GetAbExposureRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.abExposureReadRequestData) {\n      AbExposureReadRequestData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.studyUpdateTimeEpochSec !== 0) {\n      writer.uint32(16).int64(message.studyUpdateTimeEpochSec);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetAbExposureRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGetAbExposureRequest } as GetAbExposureRequest;\n    message.abExposureReadRequestData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abExposureReadRequestData.push(\n            AbExposureReadRequestData.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.studyUpdateTimeEpochSec = longToNumber(\n            reader.int64() as Long\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<GetAbExposureRequest>): GetAbExposureRequest {\n    const message = { ...baseGetAbExposureRequest } as GetAbExposureRequest;\n    message.abExposureReadRequestData = [];\n    if (\n      object.abExposureReadRequestData !== undefined &&\n      object.abExposureReadRequestData !== null\n    ) {\n      for (const e of object.abExposureReadRequestData) {\n        message.abExposureReadRequestData.push(\n          AbExposureReadRequestData.fromPartial(e)\n        );\n      }\n    }\n    if (\n      object.studyUpdateTimeEpochSec !== undefined &&\n      object.studyUpdateTimeEpochSec !== null\n    ) {\n      message.studyUpdateTimeEpochSec = object.studyUpdateTimeEpochSec;\n    } else {\n      message.studyUpdateTimeEpochSec = 0;\n    }\n    return message;\n  },\n};\n\nconst basePerIdExposureData: object = {};\n\nexport const PerIdExposureData = {\n  encode(\n    message: PerIdExposureData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.id !== undefined) {\n      Id.encode(message.id, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.studyTreatmentInfo) {\n      StudyTreatmentInfo.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PerIdExposureData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...basePerIdExposureData } as PerIdExposureData;\n    message.studyTreatmentInfo = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = Id.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.studyTreatmentInfo.push(\n            StudyTreatmentInfo.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(object: DeepPartial<PerIdExposureData>): PerIdExposureData {\n    const message = { ...basePerIdExposureData } as PerIdExposureData;\n    message.studyTreatmentInfo = [];\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Id.fromPartial(object.id);\n    } else {\n      message.id = undefined;\n    }\n    if (\n      object.studyTreatmentInfo !== undefined &&\n      object.studyTreatmentInfo !== null\n    ) {\n      for (const e of object.studyTreatmentInfo) {\n        message.studyTreatmentInfo.push(StudyTreatmentInfo.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseAbExposureReadResponseData: object = { loggingType: 0 };\n\nexport const AbExposureReadResponseData = {\n  encode(\n    message: AbExposureReadResponseData,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.loggingType !== 0) {\n      writer.uint32(8).int32(message.loggingType);\n    }\n    for (const v of message.perIdExposureData) {\n      PerIdExposureData.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): AbExposureReadResponseData {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseAbExposureReadResponseData,\n    } as AbExposureReadResponseData;\n    message.perIdExposureData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.loggingType = reader.int32() as any;\n          break;\n        case 2:\n          message.perIdExposureData.push(\n            PerIdExposureData.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<AbExposureReadResponseData>\n  ): AbExposureReadResponseData {\n    const message = {\n      ...baseAbExposureReadResponseData,\n    } as AbExposureReadResponseData;\n    message.perIdExposureData = [];\n    if (object.loggingType !== undefined && object.loggingType !== null) {\n      message.loggingType = object.loggingType;\n    } else {\n      message.loggingType = 0;\n    }\n    if (\n      object.perIdExposureData !== undefined &&\n      object.perIdExposureData !== null\n    ) {\n      for (const e of object.perIdExposureData) {\n        message.perIdExposureData.push(PerIdExposureData.fromPartial(e));\n      }\n    }\n    return message;\n  },\n};\n\nconst baseGetAbExposureResponse: object = {};\n\nexport const GetAbExposureResponse = {\n  encode(\n    message: GetAbExposureResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.abExposureReadResponseData) {\n      AbExposureReadResponseData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): GetAbExposureResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGetAbExposureResponse } as GetAbExposureResponse;\n    message.abExposureReadResponseData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abExposureReadResponseData.push(\n            AbExposureReadResponseData.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<GetAbExposureResponse>\n  ): GetAbExposureResponse {\n    const message = { ...baseGetAbExposureResponse } as GetAbExposureResponse;\n    message.abExposureReadResponseData = [];\n    if (\n      object.abExposureReadResponseData !== undefined &&\n      object.abExposureReadResponseData !== null\n    ) {\n      for (const e of object.abExposureReadResponseData) {\n        message.abExposureReadResponseData.push(\n          AbExposureReadResponseData.fromPartial(e)\n        );\n      }\n    }\n    return message;\n  },\n};\n\nconst baseUpdateAbExposureStreamingRequest: object = { disableLogging: false };\n\nexport const UpdateAbExposureStreamingRequest = {\n  encode(\n    message: UpdateAbExposureStreamingRequest,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.abExposureData) {\n      AbExposureData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.disableLogging === true) {\n      writer.uint32(16).bool(message.disableLogging);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateAbExposureStreamingRequest {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateAbExposureStreamingRequest,\n    } as UpdateAbExposureStreamingRequest;\n    message.abExposureData = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.abExposureData.push(\n            AbExposureData.decode(reader, reader.uint32())\n          );\n          break;\n        case 2:\n          message.disableLogging = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<UpdateAbExposureStreamingRequest>\n  ): UpdateAbExposureStreamingRequest {\n    const message = {\n      ...baseUpdateAbExposureStreamingRequest,\n    } as UpdateAbExposureStreamingRequest;\n    message.abExposureData = [];\n    if (object.abExposureData !== undefined && object.abExposureData !== null) {\n      for (const e of object.abExposureData) {\n        message.abExposureData.push(AbExposureData.fromPartial(e));\n      }\n    }\n    if (object.disableLogging !== undefined && object.disableLogging !== null) {\n      message.disableLogging = object.disableLogging;\n    } else {\n      message.disableLogging = false;\n    }\n    return message;\n  },\n};\n\nconst baseUpdateAbExposureStreamingResponse: object = { message: \"\" };\n\nexport const UpdateAbExposureStreamingResponse = {\n  encode(\n    message: UpdateAbExposureStreamingResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): UpdateAbExposureStreamingResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = {\n      ...baseUpdateAbExposureStreamingResponse,\n    } as UpdateAbExposureStreamingResponse;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.message = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromPartial(\n    object: DeepPartial<UpdateAbExposureStreamingResponse>\n  ): UpdateAbExposureStreamingResponse {\n    const message = {\n      ...baseUpdateAbExposureStreamingResponse,\n    } as UpdateAbExposureStreamingResponse;\n    if (object.message !== undefined && object.message !== null) {\n      message.message = object.message;\n    } else {\n      message.message = \"\";\n    }\n    return message;\n  },\n};\n\n/** The ab exposure service definition. */\nexport interface ExposureService {\n  /** Update AB exposure (Legacy) */\n  updateAbExposure(\n    request: UpdateAbExposureRequest\n  ): Promise<UpdateAbExposureResponse>;\n  /**\n   * Fetch AB exposure (streaming)\n   * Internal use only ATM\n   */\n  getAbExposureStreaming(\n    request: Observable<GetAbExposureStreamingRequest>\n  ): Observable<GetAbExposureStreamingResponse>;\n  /**\n   * Fetch AB exposure (batch)\n   * Internal use only ATM\n   */\n  getAbExposure(request: GetAbExposureRequest): Promise<GetAbExposureResponse>;\n  /** Update AB exposure in batch */\n  batchUpdateAbExposure(\n    request: BatchUpdateAbExposureRequest\n  ): Promise<BatchUpdateAbExposureResponse>;\n  /**\n   * Update AB exposure in batch (streaming)\n   * Internal use only ATM\n   */\n  updateAbExposureStreaming(\n    request: Observable<UpdateAbExposureStreamingRequest>\n  ): Observable<UpdateAbExposureStreamingResponse>;\n  /**\n   * Get AB exposure size in batch\n   * Internal use only ATM\n   */\n  getAbExposureSize(\n    request: GetAbExposureSizeRequest\n  ): Promise<GetAbExposureSizeResponse>;\n}\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n","import { createContext, useContext } from \"react\";\nimport type { Value } from \"../generated/common/value\";\nimport type {\n  ConfigResult,\n  ClientTargetingExpression,\n} from \"../generated/cdp/cof/config_result\";\nimport { getEvaluatedCofConfig } from \"../targeting_evaluation/evaluator\";\nimport { CustomExposureLogger } from \"./ConfigProvider\";\n\nexport type CofConfig = Pick<\n  ConfigResult,\n  \"configId\" | \"experimentId\" | \"priority\" | \"ruidType\" | \"studyName\"\n> & {\n  value: Partial<Value>;\n  ruidValue?: string;\n  targetingExpression?: ClientTargetingExpression;\n};\n\nexport type NormalizedConfigs = Record<string, CofConfig[]>;\n\ntype ConfigContextValue = {\n  configs: NormalizedConfigs;\n  overrides: Map<string, string>;\n  isExposureLoggingDisabled: boolean;\n  customExposureLogger: CustomExposureLogger;\n};\n\nconst ConfigContext = createContext<ConfigContextValue | null>(null);\n\nexport const ConfigContextProvider = ConfigContext.Provider;\n\nexport const useConfigFromContext = (\n  configId: string\n): CofConfig | undefined => {\n  const context = useContext(ConfigContext);\n\n  if (!context) {\n    throw new Error(\n      \"Context is not set. Please add a ConfigProvider in your app\"\n    );\n  }\n\n  const potentialConfigs = context.configs[configId];\n\n  return potentialConfigs\n    ? (getEvaluatedCofConfig(potentialConfigs, configId) as\n        | CofConfig\n        | undefined)\n    : undefined;\n};\n\nexport const useOverride = (configId: string): string | undefined => {\n  const context = useContext(ConfigContext);\n  if (!context) {\n    throw new Error(\n      \"Context is not set. Please add a ConfigProvider in your app\"\n    );\n  }\n\n  return context.overrides.get(configId);\n};\n\nexport const useIsExposureLoggingDisabled = (): boolean => {\n  const context = useContext(ConfigContext);\n  if (!context) {\n    throw new Error(\n      \"Context is not set. Please add a ConfigProvider in your app\"\n    );\n  }\n\n  return context.isExposureLoggingDisabled;\n};\n\nexport const useCustomExposureLogger = (): CustomExposureLogger => {\n  const context = useContext(ConfigContext);\n  if (!context) {\n    throw new Error(\n      \"Context is not set. Please add a ConfigProvider in your app\"\n    );\n  }\n\n  return context.customExposureLogger;\n};\n","import React, { ReactElement, useMemo } from \"react\";\nimport { CofConfig, ConfigContextProvider, NormalizedConfigs } from \"./context\";\n\nexport type ConfigProviderProps = {\n  configs: CofConfig[];\n  children: ReactElement;\n  disableExposureLogging?: boolean;\n  customExposureLogger?: CustomExposureLogger;\n  enableOverrides?: boolean;\n};\n\n/**\n * NOOP = default value doesn't do anything\n * CONSOLE = log to console, useful for debugging\n */\nexport enum CustomExposureLogger {\n  NOOP,\n  CONSOLE,\n}\n\nexport const ConfigProvider = ({\n  configs,\n  children,\n  disableExposureLogging = false,\n  customExposureLogger = CustomExposureLogger.NOOP,\n  enableOverrides,\n}: ConfigProviderProps): ReactElement => {\n  const normalizedConfigs = useMemo(() => {\n    const configMap: NormalizedConfigs = {};\n\n    configs.forEach((config) => {\n      if (!configMap[config.configId]) {\n        configMap[config.configId] = [config];\n      } else {\n        configMap[config.configId]!.push(config);\n      }\n    });\n\n    return configMap;\n  }, [configs]);\n\n  const overrides = useMemo(() => {\n    if (!enableOverrides) {\n      return new Map<string, string>();\n    }\n\n    const queryParams = new URLSearchParams(window.location.search);\n    const overrides = queryParams.get(\"overrides\") ?? \"\";\n    const overridePairs = overrides\n      .split(\",\")\n      .map((pairs) => pairs.split(\":\") as [string, string]);\n\n    return new Map<string, string>(overridePairs);\n  }, [enableOverrides, window.location.search]);\n\n  return (\n    <ConfigContextProvider\n      value={{\n        configs: normalizedConfigs,\n        overrides,\n        isExposureLoggingDisabled: disableExposureLogging,\n        customExposureLogger,\n      }}\n    >\n      {children}\n    </ConfigContextProvider>\n  );\n};\n","import {useEffect} from \"react\";\nimport {Ruid_Type as RuidType} from \"../generated/common/ruid\";\nimport {batchUpdateAbExposure, BatchUpdateAbExposureRequest, IdType, LoggingType} from \"../grpc-wrappers\";\nimport {\n  CofConfig,\n  useConfigFromContext, useCustomExposureLogger,\n  useIsExposureLoggingDisabled,\n  useOverride,\n} from \"./context\";\nimport {CustomExposureLogger} from \"./ConfigProvider\";\nimport {DeepPartial} from \"../generated/ab_service/exposure_service\";\n\nfunction isConfigAnExperiment(\n  config: { studyName?: string; experimentId?: number } | null | undefined\n): config is CofConfig {\n  return Boolean(config && config.studyName && config.experimentId);\n}\n\nfunction isRuidMissing(config: CofConfig): boolean {\n  // 0 is a valid ruidType => RuidType.UNSET, empty string is not a valid ruidValue\n  return config.ruidType == null || !config.ruidValue;\n}\n\nfunction convertRuidToIdType(ruidType: RuidType): IdType {\n  switch (ruidType) {\n    case RuidType.AD_ACCOUNT:\n      return IdType.AD_ACCOUNT;\n    case RuidType.AD_MODERATION_AD:\n    case RuidType.AM_MEMBER:\n      return IdType.AM_MEMBER;\n    case RuidType.AM_CLIENT:\n      return IdType.AM_CLIENT;\n    case RuidType.AM_ORGANIZATION:\n      return IdType.AM_ORGANIZATION;\n    case RuidType.AM_PROFILE:\n      return IdType.AM_PROFILE;\n    case RuidType.AM_SESSION:\n      return IdType.AM_SESSION;\n    case RuidType.AM_SNAPCHAT_USER:\n      return IdType.AM_SNAPCHAT_USER;\n    case RuidType.SNAPCHAT_ADVERTISING:\n      return IdType.SNAPCHAT_ADVERTISING;\n    case RuidType.USER:\n    case RuidType.USERNAME:\n      return IdType.WEB_SNAPCHAT_USER;\n    case RuidType.WEB_CLIENT:\n      return IdType.WEB_CLIENT;\n    case RuidType.WEB_SNAPCHAT_USER:\n      return IdType.WEB_SNAPCHAT_USER;\n    case RuidType.DEVICE:\n    case RuidType.INTERNAL:\n    case RuidType.UNRECOGNIZED:\n    case RuidType.UNSET:\n      return IdType.UNRECOGNIZED;\n    default: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const ruid: never = ruidType; // used for exhaustive typechecking\n      return IdType.UNRECOGNIZED;\n    }\n  }\n}\n\nexport type ConfigValue = CofConfig[\"value\"];\n\nexport const useConfigValue = (configId: string): ConfigValue | undefined => {\n  const override = useOverride(configId);\n  const config = useConfigFromContext(configId);\n  const isExposureLoggingDisabled = useIsExposureLoggingDisabled();\n  const customExposureLogger = useCustomExposureLogger();\n\n  useEffect(() => {\n    if (\n      override ||\n      isExposureLoggingDisabled ||\n      !isConfigAnExperiment(config) ||\n      isRuidMissing(config)\n    ) {\n      // skip logging the exposure\n      return;\n    }\n\n    const request: DeepPartial<BatchUpdateAbExposureRequest> = {\n      abExposureData: [\n        {\n          id: {\n            type: convertRuidToIdType(config.ruidType),\n            value: config.ruidValue,\n          },\n          properties: {\n            userAgentString: navigator.userAgent,\n          },\n          loggingType: LoggingType.CLIENT_TRIGGER,\n          studyTreatmentInfo: [\n            { studyName: config.studyName, treatmentId: config.experimentId },\n          ],\n        },\n      ],\n    };\n\n    if (customExposureLogger === CustomExposureLogger.CONSOLE) {\n      console.log(`Logging exposure event to console ${JSON.stringify(request)}`)\n    }\n\n    batchUpdateAbExposure(request);\n  }, [override, config, isExposureLoggingDisabled, customExposureLogger]);\n\n  // TODO: improve the useOverride hook to recognize multiple data types and map then to the Values object\n  if (override) {\n    return { stringValue: override };\n  }\n\n  return config?.value;\n};\n","import { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\ntype ArrayBufferResponse = [ArrayBuffer, Response];\ntype ChainableArrayBufferHandler<Req, Meta extends RequestMetadata> = ChainableHandler<\n    Req,\n    ArrayBufferResponse,\n    Req,\n    Response,\n    Meta\n>;\n\n/**\n * Parse a Fetch Response body into an ArrayBuffer.\n *\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createArrayBufferParsingHandler = <Req, Meta extends RequestMetadata>(): ChainableArrayBufferHandler<\n    Req,\n    Meta\n> => (next) => async (req, metadata) => {\n    const response = await next(req, metadata);\n    let buffer: ArrayBuffer;\n    try {\n        buffer = await response.arrayBuffer();\n    } catch (_) {\n        buffer = new ArrayBuffer(0);\n    }\n    return [buffer, response];\n};\n","/**\n * Different persistence mechanisms (e.g. localStorage, IndexedDB) may support different key types. This type should be\n * a valid key across all concrete Persistence implementations.\n */\nexport type ValidKey = string | number;\n\nexport const isValidKey = (key: unknown): key is ValidKey => typeof key === \"string\" || typeof key === \"number\";\n\n/**\n * The abstract Persistence class defines an async interface for interacting with persistent client-side storage. This\n * is modeled as a simple key/value store.\n *\n * Subclasses may be implemented to support a variety of persistence mechanisms – e.g. localStorage, IndexedDB, etc.\n */\nexport abstract class Persistence<T> {\n    abstract size: number;\n\n    abstract retrieve(key: ValidKey): Promise<T | undefined>;\n\n    abstract retrieveAll(): Promise<T[]>;\n\n    abstract remove(key: ValidKey): Promise<void>;\n\n    abstract removeAll(): Promise<T[]>;\n\n    /**\n     * Persistence implementations must be capable of generating unique keys, or accepting a unique key from the\n     * caller.\n     */\n    abstract store(value: T): Promise<ValidKey>;\n    abstract store(key: ValidKey, value: T): Promise<ValidKey>;\n}\n","import { isValidKey, Persistence, ValidKey } from \"./Persistence\";\n\ntype IDBRequestPromise<T = any> = Promise<T> & { request: IDBRequest<T> };\n\ninterface EnhancedIDBTransaction {\n    tx: IDBTransaction;\n    store: IDBObjectStore;\n    done: Promise<void>;\n}\n\ninterface EnhancedIDBCursor<T> {\n    cursor: (IDBCursor & { readonly value: T }) | null;\n    continue: () => Promise<EnhancedIDBCursor<T>>;\n}\n\n/**\n * The IndexedDB API makes use of event callbacks that can be cumbersome to use. This method wraps an IDBRequest in a\n * Promise, making it easier to use.\n */\nfunction wrapRequest(request: IDBOpenDBRequest): Promise<IDBDatabase> & { request: IDBOpenDBRequest };\nfunction wrapRequest<T>(request: IDBRequest<T>): IDBRequestPromise<T>;\nfunction wrapRequest(request: IDBRequest): IDBRequestPromise {\n    const p = new Promise((resolve, reject) => {\n        request.onsuccess = () => resolve(request.result);\n        request.onerror = () => reject(request.error);\n    });\n    (p as IDBRequestPromise).request = request;\n    return p as IDBRequestPromise;\n}\n\n/**\n * IndexedDB cursor requests are unique, in that their `onsuccess` handler may be called multiple times. To support\n * this, and allow for an easier-to-use Promise-based API, we wrap the cursor request to support usage like:\n * ```ts\n * let request = await wrapCursorRequest(store.openCursor())\n * while (request.cursor) {\n *   console.log(request.cursor.key, request.cursor.value)\n *   request = await request.continue()\n * }\n * ```\n */\nfunction wrapCursorRequest<T>(request: IDBRequest<IDBCursorWithValue | null>): Promise<EnhancedIDBCursor<T>> {\n    return new Promise((resolve, reject) => {\n        request.onsuccess = () => {\n            const cursor = request.result;\n            if (!cursor) resolve({ cursor: null, continue: () => Promise.reject() });\n            else\n                resolve({\n                    cursor,\n                    continue: () => {\n                        cursor.continue();\n                        return wrapCursorRequest<T>(request);\n                    },\n                });\n        };\n        request.onerror = () => reject(request.error);\n    });\n}\n\n/**\n * Specify a database name for this {@link IndexedDBPersistence} instance to use.\n * This will be prefixed by `Snap.CameraKit`.\n *\n * A databaseVersion and objectStore may also be specified. Keep in mind the following limitations:\n * - IndexedDBPersistence currently does nothing to migrate data between versions.\n * - If two different IndexedDBPersistence instances use the same databaseName, they must also use the same objectStore.\n * Otherwise a race condition will occur which prevents the creation of all but one objectStore per database.\n */\nexport interface IndexedDBPersistenceOptions {\n    databaseName: string;\n    databaseVersion?: number;\n    objectStore?: string;\n}\n\n/**\n * A simple key/value persistence using an IndexedDB storage backend.\n *\n * See [Using IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB) for an\n * introduction to how IndexedDB works, its APIs, and how to use it.\n *\n * Note: Currently there is no support for database upgrades. Each instance of this class uses a single IDBObjectStore\n * object set at instantiation time, and there are no hooks for performing migrations between versions. This may be\n * added in the future if such functionality is needed.\n */\nexport class IndexedDBPersistence<T> implements Persistence<T> {\n    size: number;\n\n    private db: Promise<IDBDatabase>;\n    private readonly databaseName: string;\n    private readonly databaseVersion?: number;\n    private readonly objectStore: string;\n\n    /**\n     * Construct an {@link IndexedDBPersistence} instance corresponding to a given IndexedDB database version.\n     *\n     * Throws `ConstraintError` if the version number is invalid (e.g. NaN, or less than 1).\n     */\n    constructor(options: IndexedDBPersistenceOptions) {\n        // We'll namespace our DB names to A) avoid collisions with host applications and B) be transparent about who\n        // is using persistence.\n        this.databaseName = `Snap.CameraKit.${options.databaseName}`;\n        this.databaseVersion = options.databaseVersion;\n        this.objectStore = options.objectStore ?? options.databaseName;\n\n        // `open()` will throw if the version is invalid -- this is desirable vs. rejecting the `db` promise, since then\n        // the error is only reported when callers try to perform some operation. Instead, we want the instantiating\n        // code to see the error.\n        this.db = this.openDatabase(indexedDB.open(this.databaseName, this.databaseVersion));\n        this.size = 0;\n    }\n\n    retrieve(key: ValidKey): Promise<T | undefined> {\n        return this.simpleTransaction(\"readonly\", (store) => store.get(key));\n    }\n\n    retrieveAll(): Promise<T[]> {\n        return this.simpleTransaction(\"readonly\", (store) => store.getAll());\n    }\n\n    async remove(key: ValidKey): Promise<void> {\n        await this.simpleTransaction(\"readwrite\", (store) => store.delete(key));\n        this.size--;\n    }\n\n    async removeAll(): Promise<T[]> {\n        const results: T[] = [];\n        const { store, done } = await this.transaction(\"readwrite\");\n        let request = await wrapCursorRequest<T>(store.openCursor());\n        const deleteRequests: Promise<any>[] = [];\n        while (request.cursor) {\n            results.push(request.cursor.value);\n            // If any of the deletes fail (e.g. if the user deletes the object store during the transaction), it will\n            // fail the whole transaction. Since the primary expected cause of this failure mode is that the entire\n            // object store no longer exists, it's unlikely this will result in unbounded DB growth. That said, callers\n            // may want to attempt to retry the removal, or raise an alarm if the persistence size grows unexpectedly.\n            deleteRequests.push(wrapRequest(store.delete(request.cursor.key)));\n            request = await request.continue();\n        }\n        await Promise.all(deleteRequests.concat(done));\n        this.size = 0;\n        return results;\n    }\n\n    async store(value: T): Promise<ValidKey>;\n    async store(key: ValidKey, value: T): Promise<ValidKey>;\n    async store(keyOrValue: T | ValidKey, maybeValue?: T): Promise<ValidKey> {\n        const key = typeof maybeValue === \"undefined\" ? undefined : keyOrValue;\n        const value = typeof maybeValue === \"undefined\" ? keyOrValue : maybeValue;\n\n        // The key must be ValidKey | undefined.\n        if (!isValidKey(key) && typeof key !== \"undefined\")\n            throw new TypeError(`IndexedDBPersistence failed to ` + `store a value. Invalid key type: ${typeof key}`);\n\n        const storedKey = await this.simpleTransaction(\"readwrite\", (store) => store.put(value, key));\n        this.size++;\n\n        // Type safety: we already assert any given key is valid, and if the key is undefined IndexedDB will generate\n        // a numeric key (https://w3c.github.io/IndexedDB/#key-generator).\n        return storedKey as ValidKey;\n    }\n\n    private async openDatabase(request: IDBOpenDBRequest): Promise<IDBDatabase> {\n        // The `open()` call will throw if databaseVersion is invalid (e.g. < 1).\n        const dbPromise = wrapRequest(request);\n        dbPromise.request.onupgradeneeded = () => {\n            try {\n                // The following DOMExceptions may be thrown by `createObjectStore()` – they should all be logically\n                // impossible. We handle the one recoverable exception which could occur below.\n                //\n                // TransactionInactiveError: the database does not exist.\n                // InvalidStateError: `createObjectStore` was called outside a `versionchange` transaction.\n                // InvalidAccessError: `autoIncrement` is true and `keyPath` contains an empty string.\n                dbPromise.request.result.createObjectStore(this.objectStore, { autoIncrement: true });\n            } catch (error) {\n                // ConstraintError is thrown if the object store already exists. Could happen if multiple tabs to the\n                // same domain are opened and race to create the object store. In this case we can safely ignore the\n                // error and continue.\n                if (error instanceof DOMException && error.name === \"ConstraintError\") return;\n                throw error;\n            }\n        };\n        const db = await dbPromise;\n        db.onclose = () => {\n            // The 'close` event fires when the DB is unexpectedly closed (e.g. user clears application data). We'll\n            // attempt to re-open it (which may fail, in which case no further attempts will be made, and all future\n            // transactions will fail).\n            this.db = this.openDatabase(indexedDB.open(this.databaseName, this.databaseVersion));\n        };\n        return db;\n    }\n\n    private async simpleTransaction<R>(\n        mode: IDBTransactionMode,\n        operation: (tx: IDBObjectStore) => IDBRequest<R>\n    ): Promise<R> {\n        const { store, done } = await this.transaction(mode);\n        const [result] = await Promise.all([wrapRequest(operation(store)), done]);\n        return result;\n    }\n\n    private async transaction(mode: IDBTransactionMode): Promise<EnhancedIDBTransaction> {\n        const db = await this.db;\n        // The following DOMExceptions may be thrown – they should all be logically impossible, or could be\n        // triggered by the user deleting or modifying the database (e.g. via DevTools) at the right time. We won't\n        // attempt to recover from them now, but may decide to do so in the future (if we see them in the wild).\n        //\n        // InvalidStateError: `close()` has previously been called on the IDBDatabase\n        // NotFoundError: the object store does not exist.\n        // TypeError: the `mode` parameter is invalid.\n        // InvalidAccessError: the function was called with an empty list of object stores.\n        const tx = db.transaction(this.objectStore, mode);\n\n        // Similarly, the following DOMExceptions may be thrown by `objectStore()`:\n        //\n        // InvalidStateError: the transaction has already completed.\n        // NotFoundError: the object store is not in the transaction's scope.\n        const store = tx.objectStore(this.objectStore);\n        const done = new Promise<void>((resolve, reject) => {\n            tx.oncomplete = () => resolve();\n            tx.onerror = () => reject(tx.error);\n            tx.onabort = () => reject(new DOMException(\"The transaction was aborted\", \"AbortError\"));\n        });\n        return { tx, store, done };\n    }\n}\n","import { getLogger } from \"../logger\";\nimport { Persistence, ValidKey } from \"../persistence/Persistence\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\n\nconst logger = getLogger(\"responseCacheHandler\");\n\n/**\n * Each cache entry is a tuple of [timestamp, response] values.\n */\ntype CacheEntry<T> = [number, T];\n\n/**\n * Handler params.\n */\ninterface Params<Req, Res, Meta> {\n    /**\n     * Response cache implementation.\n     */\n    cache: Persistence<CacheEntry<Res>>;\n\n    /**\n     * A function to resolve a cache key.\n     */\n    keyResolver: (req: Req, metadata: Meta | undefined) => ValidKey;\n\n    /**\n     * Number of seconds a response remains fresh.\n     */\n    maxAge: number;\n}\n\n/**\n * The handler calls inner handler to retrieve a response. If that succeeds, it returns the response.\n * Otherwise it returns previosly stored response. If the previous response is not available,\n * the handler re-throws original error.\n *\n * That is stale-when-error caching strategy:\n * https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-first-falling-back-to-cache\n *\n * TODO: when revisiting caching approaches check this PR comment out:\n * https://github.sc-corp.net/Snapchat/camera-kit-web-sdk/pull/265#pullrequestreview-3793011\n *\n * @returns Received or cached response object.\n */\nexport const staleIfErrorCachingHandler = <Req, Res, Meta extends RequestMetadata>({\n    cache,\n    keyResolver,\n    maxAge,\n}: Params<Req, Res, Meta>): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    return (next) => async (req, metadata) => {\n        let key: ValidKey;\n        try {\n            key = keyResolver(req, metadata);\n        } catch (error) {\n            logger.warn(\"Could not resolve cache key due to error\", error);\n            return next(req, metadata);\n        }\n        try {\n            const response = await next(req, metadata);\n            await cache\n                .store(key, [Date.now(), response])\n                .catch((err) => logger.warn(`Could not cache response with key ${key}`, err));\n            logger.debug(\"Added/updated cache entry for key\", key);\n            return response;\n        } catch (error) {\n            logger.debug(\"Inner handler threw\", error, \"\\nWill try to lookup cache...\");\n            const entry = await cache\n                .retrieve(key)\n                .catch((err) => logger.warn(\"Unable to retrieve response from cache\", err));\n            if (entry) {\n                const [timestamp, response] = entry;\n                if (timestamp + maxAge * 1000 > Date.now()) {\n                    return response;\n                }\n                logger.debug(\"Stale cache entry for key\", key, \", re-throwing original error...\");\n                throw error;\n            }\n            logger.debug(\"No cache entry for key\", key, \", re-throwing original error...\");\n            throw error;\n        }\n    };\n};\n","import { ConfigTargetingResponse, initConfigsClient, targetingQuery } from \"@snapchat/configs-web\";\nimport { cameraKitUserAgent } from \"../common/cameraKitUserAgent\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { IndexedDBPersistence } from \"../persistence/IndexedDBPersistence\";\nimport { ensureError } from \"../common/errors\";\nimport { ChainableHandler, HandlerChainBuilder, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createRetryingHandler } from \"./retryingHandler\";\nimport { createTimeoutHandler } from \"./timeoutHandler\";\nimport { staleIfErrorCachingHandler } from \"./staleIfErrorCachingHandler\";\nimport {\n    dispatchRequestCompleted,\n    dispatchRequestErrored,\n    dispatchRequestStarted,\n} from \"./requestStateEmittingHandler\";\n\nconst doCofRequest: CofHandler = async ([cofRequest, cofMetadata]) => {\n    const response = await targetingQuery(cofRequest, {\n        \"x-snap-client-user-agent\": cameraKitUserAgent.userAgent,\n        ...cofMetadata,\n    });\n    // NOTE: in order for cache persistance to work, we need to make the object cloneable,\n    // i.e. with no methods (it appears targetingQuery() attaches toObject() to response object).\n    delete response[\"toObject\"];\n    return response;\n};\n\n/**\n * Request emitting handler similar to createRequestStateEmittingHandler,\n * but which works with COF (given configs-web hides its transport).\n * TODO: once https://jira.sc-corp.net/browse/CAMKIT-2840 is in,\n * remove this handler and supply our default fetch handler chain to COF.\n */\nconst createCofRequestStateEmittingHandler = (): ChainableHandler<\n    CofRequest,\n    CofResponse,\n    CofRequest,\n    CofResponse,\n    RequestMetadata\n> => (next) => async (request, metadata) => {\n    const dimensions = { requestType: COF_REQUEST_TYPE };\n    const { requestId } = dispatchRequestStarted({ dimensions });\n    try {\n        const response = await next(request, metadata);\n        // TODO: We hardcode status code and sizeByte values because we do not have access to underlying\n        // transport of configs-web.\n        // When this ticket is done https://jira.sc-corp.net/browse/CAMKIT-2840,\n        // we will remove this handler and benefit from existing ones.\n        const status = 200;\n        let sizeByte = 0;\n        try {\n            sizeByte = new TextEncoder().encode(JSON.stringify(response)).byteLength;\n        } finally {\n            dispatchRequestCompleted({ requestId, dimensions, status, sizeByte });\n            return response;\n        }\n    } catch (error) {\n        dispatchRequestErrored({ requestId, dimensions, error: ensureError(error) });\n        throw error;\n    }\n};\n\ntype CofRequest = Parameters<typeof targetingQuery>;\ntype CofResponse = ConfigTargetingResponse;\n\nexport const COF_REQUEST_TYPE = \"cof\";\nexport type CofDimensions = { requestType: typeof COF_REQUEST_TYPE };\n\nexport type CofHandler = (params: CofRequest) => Promise<CofResponse>;\n\n/**\n * COF fetch client retries COF requests for 5 seconds and if unsuccessful it looks for previously stored response.\n *\n * @internal\n */\nexport const cofHandlerFactory = Injectable(\"cofHandler\", () => {\n    initConfigsClient();\n    return new HandlerChainBuilder(doCofRequest)\n        .map(createCofRequestStateEmittingHandler())\n        .map(\n            createRetryingHandler({\n                // NOTE: targetingQuery() always converts failed responses into errors unlike fetch\n                retryPredicate: (res) => res instanceof Error,\n            })\n        )\n        .map(createTimeoutHandler({ timeout: 5 * 1000 }))\n        .map(\n            staleIfErrorCachingHandler({\n                cache: new IndexedDBPersistence({ databaseName: \"COFCache\" }),\n                keyResolver: (req) => JSON.stringify(req),\n                // NOTE: we cache COF responses for 1 week for now\n                maxAge: 7 * 24 * 60 * 60,\n            })\n        ).handler;\n});\n","import { ConfigResult, ConfigTargetingResponse, Namespace } from \"@snapchat/configs-web\";\nimport { wrapError } from \"../../common/errors\";\nimport { memoize } from \"../../common/memoize\";\nimport { isRecord, isString } from \"../../common/typeguards\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { AssetDescriptor } from \"../../lens-core-module\";\nimport { CofHandler, cofHandlerFactory } from \"../../handlers/cofHandler\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { getLogger } from \"../../logger\";\nimport { AssetLoader, AssetResponse } from \"./LensAssetsProvider\";\n\ninterface AssetConfig {\n    url: string;\n    checksum?: string;\n}\n\nconst logger = getLogger(\"deviceDependentAssetLoader\");\n\nconst hasStringValue = (value: unknown): value is { stringValue: string } => {\n    return isRecord(value) && isString(value.stringValue);\n};\n\nconst isAssetConfig = (value: unknown): value is AssetConfig => {\n    return isRecord(value) && isString(value.url) && (value.checksum === undefined || isString(value.checksum));\n};\n\nfunction createAssetIdToUrlMap(configResults: ConfigResult[]) {\n    return configResults.reduce<Map<string, AssetConfig>>((configs, { configId, value }) => {\n        // Asset configurations are all JSON-encoded in the `stringValue` property. If it doesn't exists, we can skip\n        // this configuration here.\n        if (!hasStringValue(value)) return configs;\n\n        try {\n            const config = JSON.parse(value.stringValue);\n\n            // Asset configurations have a `url` and `checksum` property. Otherwise we're dealing with some other kind\n            // of configuration, which we can skip.\n            if (!isAssetConfig(config)) return configs;\n\n            configs.set(configId, config);\n            return configs;\n        } catch (error) {\n            logger.warn(\n                `COF config with id=${configId} has \"stringValue\" that can't be parsed as JSON. If this is a ` +\n                    `device-dependent asset configuration with malformed JSON, we may be unable to fetch the ` +\n                    `corresponding asset.`\n            );\n        }\n\n        return configs;\n    }, new Map());\n}\n\n/**\n * @internal\n */\nexport const deviceDependentAssetLoaderFactory = Injectable(\n    \"deviceDependentAssetLoader\",\n    [defaultFetchHandlerFactory.token, cofHandlerFactory.token, configurationToken] as const,\n    (fetchHandler: FetchHandler, cofHandler: CofHandler, config: CameraKitConfiguration): AssetLoader => {\n        const assetHandler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        const cofConfigPromise = new Promise<ConfigTargetingResponse>(async (resolve, reject) => {\n            const lensPerformance = await config.lensPerformance;\n            // -1 is interpreted as \"no cluster could be computed\", so we'll omit in that case.\n            const lensClusterOrig4 = lensPerformance?.cluster === -1 ? undefined : lensPerformance?.cluster;\n            cofHandler([{ namespaces: [Namespace.LENS_CORE], lensClusterOrig4 }])\n                .then(resolve)\n                .catch(reject);\n        });\n\n        const memoizedCreateAssetIdToUrlMap = memoize(createAssetIdToUrlMap);\n\n        return async function deviceDependentAssetLoader({ assetId }: AssetDescriptor): Promise<AssetResponse> {\n            const cofConfig = await cofConfigPromise.catch((error) => {\n                throw wrapError(new Error(\"Failed to fetch lens asset configuration from COF.\"), error);\n            });\n            const assetConfig = memoizedCreateAssetIdToUrlMap(cofConfig.configResults).get(assetId);\n            if (!assetConfig) {\n                throw new Error(`Cannot load lens asset ${assetId}. No config found in COF for this asset.`);\n            }\n            const [buffer, response] = await assetHandler(assetConfig.url);\n            if (!response.ok) throw response;\n            return { data: buffer, checksum: assetConfig.checksum };\n        };\n    }\n);\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"snapchat.lenses.snappable\";\n\nexport interface EncryptionData {\n  key: Uint8Array;\n  /** mapping from asset id to iv */\n  ivStore: { [key: string]: Uint8Array };\n  /** Indicates whether this key has been encrypted on server */\n  isKeyServerEncrypted: boolean;\n  isKeyE2eEncrypted: boolean;\n  encryptionScheme: EncryptionData_EncryptionScheme;\n}\n\nexport enum EncryptionData_EncryptionScheme {\n  NOT_APPLICABLE = \"NOT_APPLICABLE\",\n  SPOOKEY = \"SPOOKEY\",\n  REGISTRY = \"REGISTRY\",\n  /** FIDELIUS - Add others as necessary */\n  FIDELIUS = \"FIDELIUS\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function encryptionData_EncryptionSchemeFromJSON(object: any): EncryptionData_EncryptionScheme {\n  switch (object) {\n    case 0:\n    case \"NOT_APPLICABLE\":\n      return EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n    case 1:\n    case \"SPOOKEY\":\n      return EncryptionData_EncryptionScheme.SPOOKEY;\n    case 2:\n    case \"REGISTRY\":\n      return EncryptionData_EncryptionScheme.REGISTRY;\n    case 3:\n    case \"FIDELIUS\":\n      return EncryptionData_EncryptionScheme.FIDELIUS;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return EncryptionData_EncryptionScheme.UNRECOGNIZED;\n  }\n}\n\nexport function encryptionData_EncryptionSchemeToJSON(object: EncryptionData_EncryptionScheme): string {\n  switch (object) {\n    case EncryptionData_EncryptionScheme.NOT_APPLICABLE:\n      return \"NOT_APPLICABLE\";\n    case EncryptionData_EncryptionScheme.SPOOKEY:\n      return \"SPOOKEY\";\n    case EncryptionData_EncryptionScheme.REGISTRY:\n      return \"REGISTRY\";\n    case EncryptionData_EncryptionScheme.FIDELIUS:\n      return \"FIDELIUS\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function encryptionData_EncryptionSchemeToNumber(object: EncryptionData_EncryptionScheme): number {\n  switch (object) {\n    case EncryptionData_EncryptionScheme.NOT_APPLICABLE:\n      return 0;\n    case EncryptionData_EncryptionScheme.SPOOKEY:\n      return 1;\n    case EncryptionData_EncryptionScheme.REGISTRY:\n      return 2;\n    case EncryptionData_EncryptionScheme.FIDELIUS:\n      return 3;\n    default:\n      return 0;\n  }\n}\n\nexport interface EncryptionData_IvStoreEntry {\n  key: string;\n  value: Uint8Array;\n}\n\nexport interface PlayerData {\n  /** key, value data */\n  store: { [key: string]: string };\n  serializedStore: Uint8Array;\n}\n\nexport interface PlayerData_StoreEntry {\n  key: string;\n  value: string;\n}\n\nexport interface SessionData {\n  playerData: { [key: string]: PlayerData };\n}\n\nexport interface SessionData_PlayerDataEntry {\n  key: string;\n  value: PlayerData | undefined;\n}\n\nexport interface SnappableMedia {\n  sessionId: string;\n  playerId: string;\n  url: string;\n  key: string;\n  /** Unix milliseconds epoch time */\n  createdTime: number;\n}\n\nexport interface Snap3DData {\n  /** Whether we should allow a 3D snap with zipped media on the server */\n  allowZippedMedia: boolean;\n}\n\nexport interface UsesCameraRoll {\n  /** Indicates if snap was taken with some option from ImagePicker */\n  usesCameraRoll: boolean;\n}\n\nexport interface SnappableMessage {\n  snappable: Snappable | undefined;\n  media: SnappableMedia[];\n  effectId: string;\n  userIds: string[];\n  /** specify the focus point for the reply interstitial, values are [0-1] with 0,0 as top left */\n  focusPointX: number;\n  focusPointY: number;\n  focusPointWidth: number;\n  replyType: SnappableMessage_ReplyType;\n  snap3dData: Snap3DData | undefined;\n  usesCameraRollData: UsesCameraRoll | undefined;\n  assetBatchId: string;\n}\n\nexport enum SnappableMessage_ReplyType {\n  NOT_APPLICABLE = \"NOT_APPLICABLE\",\n  CONTEXT = \"CONTEXT\",\n  INTERSTITIAL = \"INTERSTITIAL\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function snappableMessage_ReplyTypeFromJSON(object: any): SnappableMessage_ReplyType {\n  switch (object) {\n    case 0:\n    case \"NOT_APPLICABLE\":\n      return SnappableMessage_ReplyType.NOT_APPLICABLE;\n    case 1:\n    case \"CONTEXT\":\n      return SnappableMessage_ReplyType.CONTEXT;\n    case 2:\n    case \"INTERSTITIAL\":\n      return SnappableMessage_ReplyType.INTERSTITIAL;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SnappableMessage_ReplyType.UNRECOGNIZED;\n  }\n}\n\nexport function snappableMessage_ReplyTypeToJSON(object: SnappableMessage_ReplyType): string {\n  switch (object) {\n    case SnappableMessage_ReplyType.NOT_APPLICABLE:\n      return \"NOT_APPLICABLE\";\n    case SnappableMessage_ReplyType.CONTEXT:\n      return \"CONTEXT\";\n    case SnappableMessage_ReplyType.INTERSTITIAL:\n      return \"INTERSTITIAL\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function snappableMessage_ReplyTypeToNumber(object: SnappableMessage_ReplyType): number {\n  switch (object) {\n    case SnappableMessage_ReplyType.NOT_APPLICABLE:\n      return 0;\n    case SnappableMessage_ReplyType.CONTEXT:\n      return 1;\n    case SnappableMessage_ReplyType.INTERSTITIAL:\n      return 2;\n    default:\n      return 0;\n  }\n}\n\nexport interface Snappable {\n  /** Generated by server */\n  id: string;\n  /** Uniquely identifies an instance of the game. Transparent to the lens developer. */\n  sessionId: string;\n  /** Unique ID representing a player */\n  playerId: string;\n  /** Map of player_ids to MetaData */\n  sessionData: SessionData | undefined;\n  /** Unix milliseconds epoch time */\n  createdTime: number;\n  /** Unix milliseconds epoch time */\n  expireTime: number;\n  /** Schema version */\n  version: number;\n  encryptionData: EncryptionData | undefined;\n  /** session depth. Used to determine things like how many times a snappable has been forwarded */\n  sessionDepth: number;\n}\n\n/** Request to add a snappable. */\nexport interface PutSnappableRequest {\n  snappable: Snappable | undefined;\n  media: SnappableMedia[];\n}\n\nexport interface PutSnappableResponse {\n  id: string;\n}\n\nexport interface GetSnappableRequest {\n  /** Datastore ID, optional */\n  id: string;\n}\n\nexport interface GetSnappableResponse {\n  data: Snappable | undefined;\n  /** Stored at top level to enable prefetch if required */\n  media: SnappableMedia[];\n}\n\nexport interface SnappableEncryptedKey {\n  encryptedKey: Uint8Array;\n  encryptionKeyId: string;\n  encryptionKeyIv: Uint8Array;\n}\n\nfunction createBaseEncryptionData(): EncryptionData {\n  return {\n    key: new Uint8Array(),\n    ivStore: {},\n    isKeyServerEncrypted: false,\n    isKeyE2eEncrypted: false,\n    encryptionScheme: EncryptionData_EncryptionScheme.NOT_APPLICABLE,\n  };\n}\n\nexport const EncryptionData = {\n  encode(message: EncryptionData, writer: Writer = Writer.create()): Writer {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    Object.entries(message.ivStore).forEach(([key, value]) => {\n      EncryptionData_IvStoreEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).ldelim();\n    });\n    if (message.isKeyServerEncrypted === true) {\n      writer.uint32(24).bool(message.isKeyServerEncrypted);\n    }\n    if (message.isKeyE2eEncrypted === true) {\n      writer.uint32(32).bool(message.isKeyE2eEncrypted);\n    }\n    if (message.encryptionScheme !== EncryptionData_EncryptionScheme.NOT_APPLICABLE) {\n      writer.uint32(40).int32(encryptionData_EncryptionSchemeToNumber(message.encryptionScheme));\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): EncryptionData {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEncryptionData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        case 2:\n          const entry2 = EncryptionData_IvStoreEntry.decode(reader, reader.uint32());\n          if (entry2.value !== undefined) {\n            message.ivStore[entry2.key] = entry2.value;\n          }\n          break;\n        case 3:\n          message.isKeyServerEncrypted = reader.bool();\n          break;\n        case 4:\n          message.isKeyE2eEncrypted = reader.bool();\n          break;\n        case 5:\n          message.encryptionScheme = encryptionData_EncryptionSchemeFromJSON(reader.int32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): EncryptionData {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n      ivStore: isObject(object.ivStore)\n        ? Object.entries(object.ivStore).reduce<{ [key: string]: Uint8Array }>((acc, [key, value]) => {\n            acc[key] = bytesFromBase64(value as string);\n            return acc;\n          }, {})\n        : {},\n      isKeyServerEncrypted: isSet(object.isKeyServerEncrypted) ? Boolean(object.isKeyServerEncrypted) : false,\n      isKeyE2eEncrypted: isSet(object.isKeyE2eEncrypted) ? Boolean(object.isKeyE2eEncrypted) : false,\n      encryptionScheme: isSet(object.encryptionScheme)\n        ? encryptionData_EncryptionSchemeFromJSON(object.encryptionScheme)\n        : EncryptionData_EncryptionScheme.NOT_APPLICABLE,\n    };\n  },\n\n  toJSON(message: EncryptionData): unknown {\n    const obj: any = {};\n    message.key !== undefined &&\n      (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    obj.ivStore = {};\n    if (message.ivStore) {\n      Object.entries(message.ivStore).forEach(([k, v]) => {\n        obj.ivStore[k] = base64FromBytes(v);\n      });\n    }\n    message.isKeyServerEncrypted !== undefined && (obj.isKeyServerEncrypted = message.isKeyServerEncrypted);\n    message.isKeyE2eEncrypted !== undefined && (obj.isKeyE2eEncrypted = message.isKeyE2eEncrypted);\n    message.encryptionScheme !== undefined &&\n      (obj.encryptionScheme = encryptionData_EncryptionSchemeToJSON(message.encryptionScheme));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<EncryptionData>, I>>(object: I): EncryptionData {\n    const message = createBaseEncryptionData();\n    message.key = object.key ?? new Uint8Array();\n    message.ivStore = Object.entries(object.ivStore ?? {}).reduce<{ [key: string]: Uint8Array }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = value;\n        }\n        return acc;\n      },\n      {}\n    );\n    message.isKeyServerEncrypted = object.isKeyServerEncrypted ?? false;\n    message.isKeyE2eEncrypted = object.isKeyE2eEncrypted ?? false;\n    message.encryptionScheme = object.encryptionScheme ?? EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n    return message;\n  },\n};\n\nfunction createBaseEncryptionData_IvStoreEntry(): EncryptionData_IvStoreEntry {\n  return { key: \"\", value: new Uint8Array() };\n}\n\nexport const EncryptionData_IvStoreEntry = {\n  encode(message: EncryptionData_IvStoreEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): EncryptionData_IvStoreEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEncryptionData_IvStoreEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): EncryptionData_IvStoreEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: EncryptionData_IvStoreEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined &&\n      (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<EncryptionData_IvStoreEntry>, I>>(object: I): EncryptionData_IvStoreEntry {\n    const message = createBaseEncryptionData_IvStoreEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBasePlayerData(): PlayerData {\n  return { store: {}, serializedStore: new Uint8Array() };\n}\n\nexport const PlayerData = {\n  encode(message: PlayerData, writer: Writer = Writer.create()): Writer {\n    Object.entries(message.store).forEach(([key, value]) => {\n      PlayerData_StoreEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n    });\n    if (message.serializedStore.length !== 0) {\n      writer.uint32(18).bytes(message.serializedStore);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): PlayerData {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePlayerData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          const entry1 = PlayerData_StoreEntry.decode(reader, reader.uint32());\n          if (entry1.value !== undefined) {\n            message.store[entry1.key] = entry1.value;\n          }\n          break;\n        case 2:\n          message.serializedStore = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PlayerData {\n    return {\n      store: isObject(object.store)\n        ? Object.entries(object.store).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n            acc[key] = String(value);\n            return acc;\n          }, {})\n        : {},\n      serializedStore: isSet(object.serializedStore) ? bytesFromBase64(object.serializedStore) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: PlayerData): unknown {\n    const obj: any = {};\n    obj.store = {};\n    if (message.store) {\n      Object.entries(message.store).forEach(([k, v]) => {\n        obj.store[k] = v;\n      });\n    }\n    message.serializedStore !== undefined &&\n      (obj.serializedStore = base64FromBytes(\n        message.serializedStore !== undefined ? message.serializedStore : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PlayerData>, I>>(object: I): PlayerData {\n    const message = createBasePlayerData();\n    message.store = Object.entries(object.store ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n      if (value !== undefined) {\n        acc[key] = String(value);\n      }\n      return acc;\n    }, {});\n    message.serializedStore = object.serializedStore ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBasePlayerData_StoreEntry(): PlayerData_StoreEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const PlayerData_StoreEntry = {\n  encode(message: PlayerData_StoreEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): PlayerData_StoreEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePlayerData_StoreEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PlayerData_StoreEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: PlayerData_StoreEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PlayerData_StoreEntry>, I>>(object: I): PlayerData_StoreEntry {\n    const message = createBasePlayerData_StoreEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseSessionData(): SessionData {\n  return { playerData: {} };\n}\n\nexport const SessionData = {\n  encode(message: SessionData, writer: Writer = Writer.create()): Writer {\n    Object.entries(message.playerData).forEach(([key, value]) => {\n      SessionData_PlayerDataEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n    });\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SessionData {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSessionData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          const entry1 = SessionData_PlayerDataEntry.decode(reader, reader.uint32());\n          if (entry1.value !== undefined) {\n            message.playerData[entry1.key] = entry1.value;\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SessionData {\n    return {\n      playerData: isObject(object.playerData)\n        ? Object.entries(object.playerData).reduce<{ [key: string]: PlayerData }>((acc, [key, value]) => {\n            acc[key] = PlayerData.fromJSON(value);\n            return acc;\n          }, {})\n        : {},\n    };\n  },\n\n  toJSON(message: SessionData): unknown {\n    const obj: any = {};\n    obj.playerData = {};\n    if (message.playerData) {\n      Object.entries(message.playerData).forEach(([k, v]) => {\n        obj.playerData[k] = PlayerData.toJSON(v);\n      });\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SessionData>, I>>(object: I): SessionData {\n    const message = createBaseSessionData();\n    message.playerData = Object.entries(object.playerData ?? {}).reduce<{ [key: string]: PlayerData }>(\n      (acc, [key, value]) => {\n        if (value !== undefined) {\n          acc[key] = PlayerData.fromPartial(value);\n        }\n        return acc;\n      },\n      {}\n    );\n    return message;\n  },\n};\n\nfunction createBaseSessionData_PlayerDataEntry(): SessionData_PlayerDataEntry {\n  return { key: \"\", value: undefined };\n}\n\nexport const SessionData_PlayerDataEntry = {\n  encode(message: SessionData_PlayerDataEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== undefined) {\n      PlayerData.encode(message.value, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SessionData_PlayerDataEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSessionData_PlayerDataEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = PlayerData.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SessionData_PlayerDataEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? PlayerData.fromJSON(object.value) : undefined,\n    };\n  },\n\n  toJSON(message: SessionData_PlayerDataEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value ? PlayerData.toJSON(message.value) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SessionData_PlayerDataEntry>, I>>(object: I): SessionData_PlayerDataEntry {\n    const message = createBaseSessionData_PlayerDataEntry();\n    message.key = object.key ?? \"\";\n    message.value =\n      object.value !== undefined && object.value !== null ? PlayerData.fromPartial(object.value) : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSnappableMedia(): SnappableMedia {\n  return { sessionId: \"\", playerId: \"\", url: \"\", key: \"\", createdTime: 0 };\n}\n\nexport const SnappableMedia = {\n  encode(message: SnappableMedia, writer: Writer = Writer.create()): Writer {\n    if (message.sessionId !== \"\") {\n      writer.uint32(10).string(message.sessionId);\n    }\n    if (message.playerId !== \"\") {\n      writer.uint32(18).string(message.playerId);\n    }\n    if (message.url !== \"\") {\n      writer.uint32(26).string(message.url);\n    }\n    if (message.key !== \"\") {\n      writer.uint32(34).string(message.key);\n    }\n    if (message.createdTime !== 0) {\n      writer.uint32(40).int64(message.createdTime);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SnappableMedia {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSnappableMedia();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.sessionId = reader.string();\n          break;\n        case 2:\n          message.playerId = reader.string();\n          break;\n        case 3:\n          message.url = reader.string();\n          break;\n        case 4:\n          message.key = reader.string();\n          break;\n        case 5:\n          message.createdTime = longToNumber(reader.int64() as Long);\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SnappableMedia {\n    return {\n      sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n      playerId: isSet(object.playerId) ? String(object.playerId) : \"\",\n      url: isSet(object.url) ? String(object.url) : \"\",\n      key: isSet(object.key) ? String(object.key) : \"\",\n      createdTime: isSet(object.createdTime) ? Number(object.createdTime) : 0,\n    };\n  },\n\n  toJSON(message: SnappableMedia): unknown {\n    const obj: any = {};\n    message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n    message.playerId !== undefined && (obj.playerId = message.playerId);\n    message.url !== undefined && (obj.url = message.url);\n    message.key !== undefined && (obj.key = message.key);\n    message.createdTime !== undefined && (obj.createdTime = Math.round(message.createdTime));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SnappableMedia>, I>>(object: I): SnappableMedia {\n    const message = createBaseSnappableMedia();\n    message.sessionId = object.sessionId ?? \"\";\n    message.playerId = object.playerId ?? \"\";\n    message.url = object.url ?? \"\";\n    message.key = object.key ?? \"\";\n    message.createdTime = object.createdTime ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseSnap3DData(): Snap3DData {\n  return { allowZippedMedia: false };\n}\n\nexport const Snap3DData = {\n  encode(message: Snap3DData, writer: Writer = Writer.create()): Writer {\n    if (message.allowZippedMedia === true) {\n      writer.uint32(8).bool(message.allowZippedMedia);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Snap3DData {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSnap3DData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.allowZippedMedia = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Snap3DData {\n    return {\n      allowZippedMedia: isSet(object.allowZippedMedia) ? Boolean(object.allowZippedMedia) : false,\n    };\n  },\n\n  toJSON(message: Snap3DData): unknown {\n    const obj: any = {};\n    message.allowZippedMedia !== undefined && (obj.allowZippedMedia = message.allowZippedMedia);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Snap3DData>, I>>(object: I): Snap3DData {\n    const message = createBaseSnap3DData();\n    message.allowZippedMedia = object.allowZippedMedia ?? false;\n    return message;\n  },\n};\n\nfunction createBaseUsesCameraRoll(): UsesCameraRoll {\n  return { usesCameraRoll: false };\n}\n\nexport const UsesCameraRoll = {\n  encode(message: UsesCameraRoll, writer: Writer = Writer.create()): Writer {\n    if (message.usesCameraRoll === true) {\n      writer.uint32(8).bool(message.usesCameraRoll);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): UsesCameraRoll {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUsesCameraRoll();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.usesCameraRoll = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UsesCameraRoll {\n    return {\n      usesCameraRoll: isSet(object.usesCameraRoll) ? Boolean(object.usesCameraRoll) : false,\n    };\n  },\n\n  toJSON(message: UsesCameraRoll): unknown {\n    const obj: any = {};\n    message.usesCameraRoll !== undefined && (obj.usesCameraRoll = message.usesCameraRoll);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<UsesCameraRoll>, I>>(object: I): UsesCameraRoll {\n    const message = createBaseUsesCameraRoll();\n    message.usesCameraRoll = object.usesCameraRoll ?? false;\n    return message;\n  },\n};\n\nfunction createBaseSnappableMessage(): SnappableMessage {\n  return {\n    snappable: undefined,\n    media: [],\n    effectId: \"\",\n    userIds: [],\n    focusPointX: 0,\n    focusPointY: 0,\n    focusPointWidth: 0,\n    replyType: SnappableMessage_ReplyType.NOT_APPLICABLE,\n    snap3dData: undefined,\n    usesCameraRollData: undefined,\n    assetBatchId: \"\",\n  };\n}\n\nexport const SnappableMessage = {\n  encode(message: SnappableMessage, writer: Writer = Writer.create()): Writer {\n    if (message.snappable !== undefined) {\n      Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.media) {\n      SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.effectId !== \"\") {\n      writer.uint32(26).string(message.effectId);\n    }\n    for (const v of message.userIds) {\n      writer.uint32(34).string(v!);\n    }\n    if (message.focusPointX !== 0) {\n      writer.uint32(45).float(message.focusPointX);\n    }\n    if (message.focusPointY !== 0) {\n      writer.uint32(53).float(message.focusPointY);\n    }\n    if (message.focusPointWidth !== 0) {\n      writer.uint32(61).float(message.focusPointWidth);\n    }\n    if (message.replyType !== SnappableMessage_ReplyType.NOT_APPLICABLE) {\n      writer.uint32(64).int32(snappableMessage_ReplyTypeToNumber(message.replyType));\n    }\n    if (message.snap3dData !== undefined) {\n      Snap3DData.encode(message.snap3dData, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.usesCameraRollData !== undefined) {\n      UsesCameraRoll.encode(message.usesCameraRollData, writer.uint32(82).fork()).ldelim();\n    }\n    if (message.assetBatchId !== \"\") {\n      writer.uint32(4002).string(message.assetBatchId);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SnappableMessage {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSnappableMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snappable = Snappable.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.effectId = reader.string();\n          break;\n        case 4:\n          message.userIds.push(reader.string());\n          break;\n        case 5:\n          message.focusPointX = reader.float();\n          break;\n        case 6:\n          message.focusPointY = reader.float();\n          break;\n        case 7:\n          message.focusPointWidth = reader.float();\n          break;\n        case 8:\n          message.replyType = snappableMessage_ReplyTypeFromJSON(reader.int32());\n          break;\n        case 9:\n          message.snap3dData = Snap3DData.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.usesCameraRollData = UsesCameraRoll.decode(reader, reader.uint32());\n          break;\n        case 500:\n          message.assetBatchId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SnappableMessage {\n    return {\n      snappable: isSet(object.snappable) ? Snappable.fromJSON(object.snappable) : undefined,\n      media: Array.isArray(object?.media) ? object.media.map((e: any) => SnappableMedia.fromJSON(e)) : [],\n      effectId: isSet(object.effectId) ? String(object.effectId) : \"\",\n      userIds: Array.isArray(object?.userIds) ? object.userIds.map((e: any) => String(e)) : [],\n      focusPointX: isSet(object.focusPointX) ? Number(object.focusPointX) : 0,\n      focusPointY: isSet(object.focusPointY) ? Number(object.focusPointY) : 0,\n      focusPointWidth: isSet(object.focusPointWidth) ? Number(object.focusPointWidth) : 0,\n      replyType: isSet(object.replyType)\n        ? snappableMessage_ReplyTypeFromJSON(object.replyType)\n        : SnappableMessage_ReplyType.NOT_APPLICABLE,\n      snap3dData: isSet(object.snap3dData) ? Snap3DData.fromJSON(object.snap3dData) : undefined,\n      usesCameraRollData: isSet(object.usesCameraRollData)\n        ? UsesCameraRoll.fromJSON(object.usesCameraRollData)\n        : undefined,\n      assetBatchId: isSet(object.assetBatchId) ? String(object.assetBatchId) : \"\",\n    };\n  },\n\n  toJSON(message: SnappableMessage): unknown {\n    const obj: any = {};\n    message.snappable !== undefined &&\n      (obj.snappable = message.snappable ? Snappable.toJSON(message.snappable) : undefined);\n    if (message.media) {\n      obj.media = message.media.map((e) => (e ? SnappableMedia.toJSON(e) : undefined));\n    } else {\n      obj.media = [];\n    }\n    message.effectId !== undefined && (obj.effectId = message.effectId);\n    if (message.userIds) {\n      obj.userIds = message.userIds.map((e) => e);\n    } else {\n      obj.userIds = [];\n    }\n    message.focusPointX !== undefined && (obj.focusPointX = message.focusPointX);\n    message.focusPointY !== undefined && (obj.focusPointY = message.focusPointY);\n    message.focusPointWidth !== undefined && (obj.focusPointWidth = message.focusPointWidth);\n    message.replyType !== undefined && (obj.replyType = snappableMessage_ReplyTypeToJSON(message.replyType));\n    message.snap3dData !== undefined &&\n      (obj.snap3dData = message.snap3dData ? Snap3DData.toJSON(message.snap3dData) : undefined);\n    message.usesCameraRollData !== undefined &&\n      (obj.usesCameraRollData = message.usesCameraRollData\n        ? UsesCameraRoll.toJSON(message.usesCameraRollData)\n        : undefined);\n    message.assetBatchId !== undefined && (obj.assetBatchId = message.assetBatchId);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SnappableMessage>, I>>(object: I): SnappableMessage {\n    const message = createBaseSnappableMessage();\n    message.snappable =\n      object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n    message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n    message.effectId = object.effectId ?? \"\";\n    message.userIds = object.userIds?.map((e) => e) || [];\n    message.focusPointX = object.focusPointX ?? 0;\n    message.focusPointY = object.focusPointY ?? 0;\n    message.focusPointWidth = object.focusPointWidth ?? 0;\n    message.replyType = object.replyType ?? SnappableMessage_ReplyType.NOT_APPLICABLE;\n    message.snap3dData =\n      object.snap3dData !== undefined && object.snap3dData !== null\n        ? Snap3DData.fromPartial(object.snap3dData)\n        : undefined;\n    message.usesCameraRollData =\n      object.usesCameraRollData !== undefined && object.usesCameraRollData !== null\n        ? UsesCameraRoll.fromPartial(object.usesCameraRollData)\n        : undefined;\n    message.assetBatchId = object.assetBatchId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseSnappable(): Snappable {\n  return {\n    id: \"\",\n    sessionId: \"\",\n    playerId: \"\",\n    sessionData: undefined,\n    createdTime: 0,\n    expireTime: 0,\n    version: 0,\n    encryptionData: undefined,\n    sessionDepth: 0,\n  };\n}\n\nexport const Snappable = {\n  encode(message: Snappable, writer: Writer = Writer.create()): Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.sessionId !== \"\") {\n      writer.uint32(18).string(message.sessionId);\n    }\n    if (message.playerId !== \"\") {\n      writer.uint32(26).string(message.playerId);\n    }\n    if (message.sessionData !== undefined) {\n      SessionData.encode(message.sessionData, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.createdTime !== 0) {\n      writer.uint32(40).int64(message.createdTime);\n    }\n    if (message.expireTime !== 0) {\n      writer.uint32(48).int64(message.expireTime);\n    }\n    if (message.version !== 0) {\n      writer.uint32(56).int32(message.version);\n    }\n    if (message.encryptionData !== undefined) {\n      EncryptionData.encode(message.encryptionData, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.sessionDepth !== 0) {\n      writer.uint32(72).int32(message.sessionDepth);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Snappable {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSnappable();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.sessionId = reader.string();\n          break;\n        case 3:\n          message.playerId = reader.string();\n          break;\n        case 4:\n          message.sessionData = SessionData.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.createdTime = longToNumber(reader.int64() as Long);\n          break;\n        case 6:\n          message.expireTime = longToNumber(reader.int64() as Long);\n          break;\n        case 7:\n          message.version = reader.int32();\n          break;\n        case 8:\n          message.encryptionData = EncryptionData.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.sessionDepth = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Snappable {\n    return {\n      id: isSet(object.id) ? String(object.id) : \"\",\n      sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n      playerId: isSet(object.playerId) ? String(object.playerId) : \"\",\n      sessionData: isSet(object.sessionData) ? SessionData.fromJSON(object.sessionData) : undefined,\n      createdTime: isSet(object.createdTime) ? Number(object.createdTime) : 0,\n      expireTime: isSet(object.expireTime) ? Number(object.expireTime) : 0,\n      version: isSet(object.version) ? Number(object.version) : 0,\n      encryptionData: isSet(object.encryptionData) ? EncryptionData.fromJSON(object.encryptionData) : undefined,\n      sessionDepth: isSet(object.sessionDepth) ? Number(object.sessionDepth) : 0,\n    };\n  },\n\n  toJSON(message: Snappable): unknown {\n    const obj: any = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n    message.playerId !== undefined && (obj.playerId = message.playerId);\n    message.sessionData !== undefined &&\n      (obj.sessionData = message.sessionData ? SessionData.toJSON(message.sessionData) : undefined);\n    message.createdTime !== undefined && (obj.createdTime = Math.round(message.createdTime));\n    message.expireTime !== undefined && (obj.expireTime = Math.round(message.expireTime));\n    message.version !== undefined && (obj.version = Math.round(message.version));\n    message.encryptionData !== undefined &&\n      (obj.encryptionData = message.encryptionData ? EncryptionData.toJSON(message.encryptionData) : undefined);\n    message.sessionDepth !== undefined && (obj.sessionDepth = Math.round(message.sessionDepth));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Snappable>, I>>(object: I): Snappable {\n    const message = createBaseSnappable();\n    message.id = object.id ?? \"\";\n    message.sessionId = object.sessionId ?? \"\";\n    message.playerId = object.playerId ?? \"\";\n    message.sessionData =\n      object.sessionData !== undefined && object.sessionData !== null\n        ? SessionData.fromPartial(object.sessionData)\n        : undefined;\n    message.createdTime = object.createdTime ?? 0;\n    message.expireTime = object.expireTime ?? 0;\n    message.version = object.version ?? 0;\n    message.encryptionData =\n      object.encryptionData !== undefined && object.encryptionData !== null\n        ? EncryptionData.fromPartial(object.encryptionData)\n        : undefined;\n    message.sessionDepth = object.sessionDepth ?? 0;\n    return message;\n  },\n};\n\nfunction createBasePutSnappableRequest(): PutSnappableRequest {\n  return { snappable: undefined, media: [] };\n}\n\nexport const PutSnappableRequest = {\n  encode(message: PutSnappableRequest, writer: Writer = Writer.create()): Writer {\n    if (message.snappable !== undefined) {\n      Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.media) {\n      SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): PutSnappableRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePutSnappableRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snappable = Snappable.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PutSnappableRequest {\n    return {\n      snappable: isSet(object.snappable) ? Snappable.fromJSON(object.snappable) : undefined,\n      media: Array.isArray(object?.media) ? object.media.map((e: any) => SnappableMedia.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: PutSnappableRequest): unknown {\n    const obj: any = {};\n    message.snappable !== undefined &&\n      (obj.snappable = message.snappable ? Snappable.toJSON(message.snappable) : undefined);\n    if (message.media) {\n      obj.media = message.media.map((e) => (e ? SnappableMedia.toJSON(e) : undefined));\n    } else {\n      obj.media = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PutSnappableRequest>, I>>(object: I): PutSnappableRequest {\n    const message = createBasePutSnappableRequest();\n    message.snappable =\n      object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n    message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBasePutSnappableResponse(): PutSnappableResponse {\n  return { id: \"\" };\n}\n\nexport const PutSnappableResponse = {\n  encode(message: PutSnappableResponse, writer: Writer = Writer.create()): Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): PutSnappableResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePutSnappableResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PutSnappableResponse {\n    return {\n      id: isSet(object.id) ? String(object.id) : \"\",\n    };\n  },\n\n  toJSON(message: PutSnappableResponse): unknown {\n    const obj: any = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PutSnappableResponse>, I>>(object: I): PutSnappableResponse {\n    const message = createBasePutSnappableResponse();\n    message.id = object.id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetSnappableRequest(): GetSnappableRequest {\n  return { id: \"\" };\n}\n\nexport const GetSnappableRequest = {\n  encode(message: GetSnappableRequest, writer: Writer = Writer.create()): Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetSnappableRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetSnappableRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetSnappableRequest {\n    return {\n      id: isSet(object.id) ? String(object.id) : \"\",\n    };\n  },\n\n  toJSON(message: GetSnappableRequest): unknown {\n    const obj: any = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetSnappableRequest>, I>>(object: I): GetSnappableRequest {\n    const message = createBaseGetSnappableRequest();\n    message.id = object.id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetSnappableResponse(): GetSnappableResponse {\n  return { data: undefined, media: [] };\n}\n\nexport const GetSnappableResponse = {\n  encode(message: GetSnappableResponse, writer: Writer = Writer.create()): Writer {\n    if (message.data !== undefined) {\n      Snappable.encode(message.data, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.media) {\n      SnappableMedia.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetSnappableResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetSnappableResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = Snappable.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetSnappableResponse {\n    return {\n      data: isSet(object.data) ? Snappable.fromJSON(object.data) : undefined,\n      media: Array.isArray(object?.media) ? object.media.map((e: any) => SnappableMedia.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: GetSnappableResponse): unknown {\n    const obj: any = {};\n    message.data !== undefined && (obj.data = message.data ? Snappable.toJSON(message.data) : undefined);\n    if (message.media) {\n      obj.media = message.media.map((e) => (e ? SnappableMedia.toJSON(e) : undefined));\n    } else {\n      obj.media = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetSnappableResponse>, I>>(object: I): GetSnappableResponse {\n    const message = createBaseGetSnappableResponse();\n    message.data = object.data !== undefined && object.data !== null ? Snappable.fromPartial(object.data) : undefined;\n    message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseSnappableEncryptedKey(): SnappableEncryptedKey {\n  return { encryptedKey: new Uint8Array(), encryptionKeyId: \"\", encryptionKeyIv: new Uint8Array() };\n}\n\nexport const SnappableEncryptedKey = {\n  encode(message: SnappableEncryptedKey, writer: Writer = Writer.create()): Writer {\n    if (message.encryptedKey.length !== 0) {\n      writer.uint32(10).bytes(message.encryptedKey);\n    }\n    if (message.encryptionKeyId !== \"\") {\n      writer.uint32(18).string(message.encryptionKeyId);\n    }\n    if (message.encryptionKeyIv.length !== 0) {\n      writer.uint32(26).bytes(message.encryptionKeyIv);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SnappableEncryptedKey {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSnappableEncryptedKey();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.encryptedKey = reader.bytes();\n          break;\n        case 2:\n          message.encryptionKeyId = reader.string();\n          break;\n        case 3:\n          message.encryptionKeyIv = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SnappableEncryptedKey {\n    return {\n      encryptedKey: isSet(object.encryptedKey) ? bytesFromBase64(object.encryptedKey) : new Uint8Array(),\n      encryptionKeyId: isSet(object.encryptionKeyId) ? String(object.encryptionKeyId) : \"\",\n      encryptionKeyIv: isSet(object.encryptionKeyIv) ? bytesFromBase64(object.encryptionKeyIv) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: SnappableEncryptedKey): unknown {\n    const obj: any = {};\n    message.encryptedKey !== undefined &&\n      (obj.encryptedKey = base64FromBytes(\n        message.encryptedKey !== undefined ? message.encryptedKey : new Uint8Array()\n      ));\n    message.encryptionKeyId !== undefined && (obj.encryptionKeyId = message.encryptionKeyId);\n    message.encryptionKeyIv !== undefined &&\n      (obj.encryptionKeyIv = base64FromBytes(\n        message.encryptionKeyIv !== undefined ? message.encryptionKeyIv : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SnappableEncryptedKey>, I>>(object: I): SnappableEncryptedKey {\n    const message = createBaseSnappableEncryptedKey();\n    message.encryptedKey = object.encryptedKey ?? new Uint8Array();\n    message.encryptionKeyId = object.encryptionKeyId ?? \"\";\n    message.encryptionKeyIv = object.encryptionKeyIv ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { AssetDescriptor } from \"../../lens-core-module\";\nimport { AssetLoader } from \"./LensAssetsProvider\";\n\n/**\n * @internal\n */\nexport const remoteMediaAssetLoaderFactory = Injectable(\n    \"remoteMediaAssetLoader\",\n    [defaultFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler): AssetLoader => {\n        const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async function remoteMediaAssetLoader(asset: AssetDescriptor) {\n            // as a default option assuming that RemoteMedia asset type contains asset url in assetId\n            // this behaviour could be changed by providing own implementation for RemoteMedia asset loader\n            //   const cameraKit = bootstrapCameraKit(config, container => {\n            //     return container.provides(Injectable(\n            //       remoteMediaAssetLoaderFactory.token, ...\n            const [buffer, response] = await handler(asset.assetId);\n            if (!response.ok) throw response;\n            return buffer;\n        };\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { createArrayBufferParsingHandler } from \"../../handlers/arrayBufferParsingHandler\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../../handlers/HandlerChainBuilder\";\nimport { LensRepository, lensRepositoryFactory } from \"../LensRepository\";\nimport { AssetLoader } from \"./LensAssetsProvider\";\n\n/**\n * @internal\n */\nexport const staticAssetLoaderFactory = Injectable(\n    \"staticAssetLoader\",\n    [defaultFetchHandlerFactory.token, lensRepositoryFactory.token] as const,\n    (fetchHandler: FetchHandler, lensRepository: LensRepository): AssetLoader => {\n        const handler = new HandlerChainBuilder(fetchHandler).map(createArrayBufferParsingHandler()).handler;\n\n        return async (asset, lens) => {\n            const lensContent = lensRepository.getCachedLens(lens.id)?.content;\n            const assetUrl = lensContent?.assetManifest.find((manifest) => manifest.id === asset.assetId)?.assetUrl;\n            if (!assetUrl) {\n                throw new Error(`Cannot load lens asset ${asset.assetId}. Static asset URL could not be found.`);\n            }\n            const [buffer, response] = await handler(assetUrl);\n            if (!response.ok) throw response;\n            return buffer;\n        };\n    }\n);\n","import { assertUnreachable } from \"../../common/assertions\";\nimport { wrapError } from \"../../common/errors\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport {\n    AssetDescriptor,\n    AssetType,\n    lensCoreFactory,\n    LensCoreModule,\n    ProvideRemoteAssetsResponseInput,\n} from \"../../lens-core-module\";\nimport {\n    LensAssetManifestItem,\n    LensAssetManifestItem_RequestTiming,\n    LensAssetManifestItem_Type,\n} from \"../../generated-proto/pb_schema/camera_kit/v3/lens\";\nimport { Lens, toPublicLens } from \"../Lens\";\nimport {\n    dispatchRequestCompleted,\n    dispatchRequestErrored,\n    dispatchRequestStarted,\n} from \"../../handlers/requestStateEmittingHandler\";\nimport { AssetDownloadDimensions } from \"../../metrics/reporters/reportLensAndAssetDownload\";\nimport { LensContext, lensContextFactory } from \"../../session/LensContext\";\nimport { getLogger } from \"../../logger\";\nimport { SessionStateEventTarget, sessionStateEventTargetFactory } from \"../../session/sessionStateEventTarget\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { deviceDependentAssetLoaderFactory } from \"./deviceDependentAssetLoader\";\nimport { remoteMediaAssetLoaderFactory } from \"./remoteMediaAssetLoaderFactory\";\nimport { staticAssetLoaderFactory } from \"./staticAssetLoader\";\n\nconst logger = getLogger(\"LensAssetProvider\");\n\n// Request timings that are allowed to be pre-loaded\nconst assetRequestTimingsToPreload = new Set([\n    LensAssetManifestItem_RequestTiming.PRELOAD_UNSET,\n    LensAssetManifestItem_RequestTiming.REQUIRED,\n]);\n\nexport type AssetResponse =\n    | ArrayBuffer\n    | {\n          data: ArrayBuffer;\n          checksum?: string;\n      };\n\n/**\n * An AssetLoader is used to retrieve assets. A separate loader may be defined to retrieve different asset types.\n */\nexport type AssetLoader = (asset: AssetDescriptor, lens: Lens) => Promise<AssetResponse> | AssetResponse;\n\n/**\n * Registers a remote asset provider function with a given instance of LensCore, and uses a provided mapping of asset\n * types to loading functions to acquire remote asset data and pass it to LensCore.\n *\n * *Note:* LensCoreModule.initialize must be called on the desired LensCoreModule instance **prior** to passing it\n * to the LensAssetsProvider constructor. If this class is instantiated with a LensCoreModule that has not been\n * initialized, the registry of the asset provider function will fail silently and no remote assets will be loaded.\n */\nexport class LensAssetsProvider {\n    constructor(\n        private readonly lensCore: LensCoreModule,\n        private readonly assetLoaders: Map<AssetType, [keyof LensCoreModule[\"AssetType\"], AssetLoader]>,\n        private readonly lensContext: LensContext,\n        private readonly stateTarget: SessionStateEventTarget\n    ) {\n        lensCore.setRemoteAssetsProvider((assetDescriptor) => {\n            // Catch errors and no-op – if an error occurs, LensCore handles things in different ways depending on the\n            // active lens. It might: 1) retry 2) gracefully degrade lens behavior 3) lens JS might throw, which will\n            // be passed to the exceptionHandler we register with LensCore.\n            this.provideRemoteAsset(assetDescriptor).catch((error) => logger.warn(error));\n        });\n    }\n\n    /**\n     * Returns asset data if it is eligible to be preloaded.\n     *\n     * @param assets An array of asset manifest items to preload.\n     * @returns Promise rejects if any required assets could not be loaded – if this occurs, it's very likely the Lens\n     * with this manifest will not function.\n     */\n    async preloadManifestData(assets: LensAssetManifestItem[]): Promise<void> {\n        await Promise.all(\n            assets\n                .filter((asset) => {\n                    return assetRequestTimingsToPreload.has(asset.requestTiming);\n                })\n                .map(({ id, type }) => {\n                    // When preloading, we *do* want load failures to reject Promise.all (assets listed in the manifest\n                    // are known to be hard requirements of the lens).\n                    return this.provideRemoteAsset({\n                        assetId: id,\n                        assetType: this.convertToLensCoreAssetType(type),\n                    });\n                })\n        );\n    }\n\n    private convertToLensCoreAssetType(type: LensAssetManifestItem_Type): AssetType {\n        switch (type) {\n            case LensAssetManifestItem_Type.ASSET:\n                return this.lensCore.AssetType.Static;\n            case LensAssetManifestItem_Type.DEVICE_DEPENDENT_ASSET_UNSET:\n            case LensAssetManifestItem_Type.UNRECOGNIZED:\n                return this.lensCore.AssetType.DeviceDependent;\n            default:\n                return assertUnreachable(type);\n        }\n    }\n\n    /**\n     * Depending on the requested asset's type, calls the correct asset loader to fetch the asset's data.\n     */\n    private async getAsset(assetDescriptor: AssetDescriptor): Promise<ProvideRemoteAssetsResponseInput> {\n        const { assetId, assetType } = assetDescriptor;\n        const [assetTypeName, assetLoader] = this.assetLoaders.get(assetType) ?? [];\n        const dimensions: AssetDownloadDimensions = {\n            requestType: \"asset\",\n            assetId: assetId,\n            assetType: assetTypeName ?? \"unknown\",\n            lensId: this.lensContext.activeLens?.id ?? \"unknown\",\n        };\n\n        const { requestId } = dispatchRequestStarted({ dimensions });\n\n        try {\n            if (!assetLoader) {\n                throw new Error(`Cannot get asset ${assetId}. Asset type \"${assetType.value}\" is not supported.`);\n            }\n\n            if (!this.lensContext.activeLens) {\n                throw new Error(\n                    `Cannot get asset ${assetId}. Request must be made while a lens is applied, but no lens is ` +\n                        `currently applied.`\n                );\n            }\n\n            const assetResponse = await assetLoader(assetDescriptor, toPublicLens(this.lensContext.activeLens));\n            const assetBuffer = assetResponse instanceof ArrayBuffer ? assetResponse : assetResponse.data;\n            const assetChecksum = assetResponse instanceof ArrayBuffer ? undefined : assetResponse.checksum;\n\n            const sizeByte = assetBuffer.byteLength;\n            if (sizeByte === 0) {\n                // We want to replace empty strings with \"anonymous\" (i.e. use of logical OR instead of the nullish\n                // coalescing operator is intentional).\n                const assetLoaderName = assetLoader.name || \"anonymous\";\n                throw new Error(\n                    `Got empty response for asset ${assetId} of type ${assetTypeName ?? \"unknown\"} from ` +\n                        `assetLoader ${assetLoaderName}.`\n                );\n            }\n\n            dispatchRequestCompleted({ requestId, dimensions, status: 200, sizeByte });\n\n            return {\n                assetId,\n                assetBuffer,\n                assetType,\n                assetChecksum,\n                onFailure: (error) => {\n                    if (/Checksum validation failed/.test(error.message)) {\n                        this.stateTarget.dispatchEvent(new TypedCustomEvent(\"assetValidationFailure\", assetDescriptor));\n                    }\n                },\n            };\n        } catch (error) {\n            const wrappedError = wrapError(new Error(`Failed to load lens asset ${assetId}.`), error);\n            dispatchRequestErrored({ requestId, dimensions, error: wrappedError });\n            throw wrappedError;\n        }\n    }\n\n    /**\n     * Fetch an asset and provide it to LensCore. If fetching the asset fails we give LensCore an empty response (which\n     * it may handle in a variety of ways, e.g. retry, gracefully degrade lens behavior, throw error) and then reject.\n     */\n    private async provideRemoteAsset(assetDescriptor: AssetDescriptor): Promise<void> {\n        try {\n            const asset = await this.getAsset(assetDescriptor);\n            this.lensCore.provideRemoteAssetsResponse(asset);\n        } catch (error) {\n            this.lensCore.provideRemoteAssetsResponse({\n                assetId: assetDescriptor.assetId,\n                assetType: assetDescriptor.assetType,\n            });\n            throw error;\n        }\n    }\n}\n\n/**\n * @internal\n */\nexport const lensAssetsProviderFactory = Injectable(\n    \"lensAssetsProvider\",\n    [\n        lensCoreFactory.token,\n        lensContextFactory.token,\n        deviceDependentAssetLoaderFactory.token,\n        remoteMediaAssetLoaderFactory.token,\n        staticAssetLoaderFactory.token,\n        sessionStateEventTargetFactory.token,\n    ] as const,\n    (\n        lensCore: LensCoreModule,\n        lensContext: LensContext,\n        deviceDependentAssetLoader: AssetLoader,\n        remoteMediaAssetLoader: AssetLoader,\n        staticAssetLoaderFactory: AssetLoader,\n        stateTarget: SessionStateEventTarget\n    ) =>\n        new LensAssetsProvider(\n            lensCore,\n            new Map([\n                [lensCore.AssetType.DeviceDependent, [\"DeviceDependent\", deviceDependentAssetLoader]],\n                [lensCore.AssetType.RemoteMediaByUrl, [\"RemoteMediaByUrl\", remoteMediaAssetLoader]],\n                // URL type is deprecated and was introduced before RemoteMediaByURL\n                // however, there are some lenses still using it so we need to support it\n                [lensCore.AssetType.URL, [\"URL\", remoteMediaAssetLoader]],\n                [lensCore.AssetType.Static, [\"Static\", staticAssetLoaderFactory]],\n            ]),\n            lensContext,\n            stateTarget\n        )\n);\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\nexport interface Geopoint {\n  latitude: number;\n  longitude: number;\n}\n\nfunction createBaseGeopoint(): Geopoint {\n  return { latitude: 0, longitude: 0 };\n}\n\nexport const Geopoint = {\n  encode(message: Geopoint, writer: Writer = Writer.create()): Writer {\n    if (message.latitude !== 0) {\n      writer.uint32(9).double(message.latitude);\n    }\n    if (message.longitude !== 0) {\n      writer.uint32(17).double(message.longitude);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Geopoint {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGeopoint();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.latitude = reader.double();\n          break;\n        case 2:\n          message.longitude = reader.double();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Geopoint {\n    return {\n      latitude: isSet(object.latitude) ? Number(object.latitude) : 0,\n      longitude: isSet(object.longitude) ? Number(object.longitude) : 0,\n    };\n  },\n\n  toJSON(message: Geopoint): unknown {\n    const obj: any = {};\n    message.latitude !== undefined && (obj.latitude = message.latitude);\n    message.longitude !== undefined && (obj.longitude = message.longitude);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Geopoint>, I>>(object: I): Geopoint {\n    const message = createBaseGeopoint();\n    message.latitude = object.latitude ?? 0;\n    message.longitude = object.longitude ?? 0;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Geopoint } from \"../lenses/geopoint\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\nexport interface Geocircle {\n  radius: number;\n  center: Geopoint | undefined;\n}\n\nfunction createBaseGeocircle(): Geocircle {\n  return { radius: 0, center: undefined };\n}\n\nexport const Geocircle = {\n  encode(message: Geocircle, writer: Writer = Writer.create()): Writer {\n    if (message.radius !== 0) {\n      writer.uint32(9).double(message.radius);\n    }\n    if (message.center !== undefined) {\n      Geopoint.encode(message.center, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Geocircle {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGeocircle();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.radius = reader.double();\n          break;\n        case 2:\n          message.center = Geopoint.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Geocircle {\n    return {\n      radius: isSet(object.radius) ? Number(object.radius) : 0,\n      center: isSet(object.center) ? Geopoint.fromJSON(object.center) : undefined,\n    };\n  },\n\n  toJSON(message: Geocircle): unknown {\n    const obj: any = {};\n    message.radius !== undefined && (obj.radius = message.radius);\n    message.center !== undefined && (obj.center = message.center ? Geopoint.toJSON(message.center) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Geocircle>, I>>(object: I): Geocircle {\n    const message = createBaseGeocircle();\n    message.radius = object.radius ?? 0;\n    message.center =\n      object.center !== undefined && object.center !== null ? Geopoint.fromPartial(object.center) : undefined;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Geocircle } from \"../lenses/geocircle\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\nexport interface Lures {\n  locations: Geocircle[];\n  /** Optional: lure which was activated (from map) */\n  activeLure: Geocircle | undefined;\n  /** Optional: lure which is closest to user */\n  closestLure: Geocircle | undefined;\n}\n\nfunction createBaseLures(): Lures {\n  return { locations: [], activeLure: undefined, closestLure: undefined };\n}\n\nexport const Lures = {\n  encode(message: Lures, writer: Writer = Writer.create()): Writer {\n    for (const v of message.locations) {\n      Geocircle.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.activeLure !== undefined) {\n      Geocircle.encode(message.activeLure, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.closestLure !== undefined) {\n      Geocircle.encode(message.closestLure, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Lures {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLures();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.locations.push(Geocircle.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.activeLure = Geocircle.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.closestLure = Geocircle.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Lures {\n    return {\n      locations: Array.isArray(object?.locations) ? object.locations.map((e: any) => Geocircle.fromJSON(e)) : [],\n      activeLure: isSet(object.activeLure) ? Geocircle.fromJSON(object.activeLure) : undefined,\n      closestLure: isSet(object.closestLure) ? Geocircle.fromJSON(object.closestLure) : undefined,\n    };\n  },\n\n  toJSON(message: Lures): unknown {\n    const obj: any = {};\n    if (message.locations) {\n      obj.locations = message.locations.map((e) => (e ? Geocircle.toJSON(e) : undefined));\n    } else {\n      obj.locations = [];\n    }\n    message.activeLure !== undefined &&\n      (obj.activeLure = message.activeLure ? Geocircle.toJSON(message.activeLure) : undefined);\n    message.closestLure !== undefined &&\n      (obj.closestLure = message.closestLure ? Geocircle.toJSON(message.closestLure) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Lures>, I>>(object: I): Lures {\n    const message = createBaseLures();\n    message.locations = object.locations?.map((e) => Geocircle.fromPartial(e)) || [];\n    message.activeLure =\n      object.activeLure !== undefined && object.activeLure !== null\n        ? Geocircle.fromPartial(object.activeLure)\n        : undefined;\n    message.closestLure =\n      object.closestLure !== undefined && object.closestLure !== null\n        ? Geocircle.fromPartial(object.closestLure)\n        : undefined;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * A Timestamp represents a point in time independent of any time zone\n * or calendar, represented as seconds and fractions of seconds at\n * nanosecond resolution in UTC Epoch time. It is encoded using the\n * Proleptic Gregorian Calendar which extends the Gregorian calendar\n * backwards to year one. It is encoded assuming all minutes are 60\n * seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from\n * 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.\n * By restricting to that range, we ensure that we can convert to\n * and from  RFC 3339 date strings.\n * See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n *\n * Example 5: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n */\nexport interface Timestamp {\n  /**\n   * Represents seconds of UTC time since Unix epoch\n   * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   * 9999-12-31T23:59:59Z inclusive.\n   */\n  seconds: number;\n  /**\n   * Non-negative fractions of a second at nanosecond resolution. Negative\n   * second values with fractions must still have non-negative nanos values\n   * that count forward in time. Must be from 0 to 999,999,999\n   * inclusive.\n   */\n  nanos: number;\n}\n\nfunction createBaseTimestamp(): Timestamp {\n  return { seconds: 0, nanos: 0 };\n}\n\nexport const Timestamp = {\n  encode(message: Timestamp, writer: Writer = Writer.create()): Writer {\n    if (message.seconds !== 0) {\n      writer.uint32(8).int64(message.seconds);\n    }\n    if (message.nanos !== 0) {\n      writer.uint32(16).int32(message.nanos);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): Timestamp {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTimestamp();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.seconds = longToNumber(reader.int64() as Long);\n          break;\n        case 2:\n          message.nanos = reader.int32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Timestamp {\n    return {\n      seconds: isSet(object.seconds) ? Number(object.seconds) : 0,\n      nanos: isSet(object.nanos) ? Number(object.nanos) : 0,\n    };\n  },\n\n  toJSON(message: Timestamp): unknown {\n    const obj: any = {};\n    message.seconds !== undefined && (obj.seconds = Math.round(message.seconds));\n    message.nanos !== undefined && (obj.nanos = Math.round(message.nanos));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Timestamp>, I>>(object: I): Timestamp {\n    const message = createBaseTimestamp();\n    message.seconds = object.seconds ?? 0;\n    message.nanos = object.nanos ?? 0;\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Timestamp } from \"../google/protobuf/timestamp\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\n/** denotes user's bitmoji related data. */\nexport interface BitmojiUserInfo {\n  /** unique avatar id for a user's bitmoji */\n  avatarId: string;\n  /** selfie id for a user's bitmoji */\n  selfieId: string;\n}\n\n/** denotes information related to friendship if userdata is representing a friend. */\nexport interface FriendUserInfo {\n  /** time when friendship started , represented in time(seconds) since epoch */\n  friendshipStart: Date | undefined;\n  /** optional time when last interacted , represented in time(seconds) since epoch */\n  lastInteraction: Date | undefined;\n  /** optional streak count with current user. */\n  streak: number;\n}\n\n/** model representing all user related info */\nexport interface UserData {\n  /** unique user id for a user */\n  userId: string;\n  /** user name for a user */\n  username: string;\n  /** optional birthdate of the user if its shared represented in %d-%d-%d(year-month-day). */\n  birthdate: string;\n  /** optional display name of the user if its shared. */\n  displayName: string;\n  /** optional country code of the user if its shared. */\n  countrycode: string;\n  /** snap score of the user if its available. */\n  score: number;\n  /** optional bitmoji related info if user is a bitmoji user. */\n  bitmojiInfo: BitmojiUserInfo | undefined;\n  /** optional friendship related info if user is a friend user. */\n  friendInfo: FriendUserInfo | undefined;\n  /** optional zodiac of a user */\n  zodiac: UserData_Zodiac;\n}\n\nexport enum UserData_Zodiac {\n  Invalid = \"Invalid\",\n  Aquarius = \"Aquarius\",\n  Aries = \"Aries\",\n  Cancer = \"Cancer\",\n  Capricorn = \"Capricorn\",\n  Gemini = \"Gemini\",\n  Leo = \"Leo\",\n  Libra = \"Libra\",\n  Pisces = \"Pisces\",\n  Sagittarius = \"Sagittarius\",\n  Scorpio = \"Scorpio\",\n  Taurus = \"Taurus\",\n  Virgo = \"Virgo\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function userData_ZodiacFromJSON(object: any): UserData_Zodiac {\n  switch (object) {\n    case 0:\n    case \"Invalid\":\n      return UserData_Zodiac.Invalid;\n    case 1:\n    case \"Aquarius\":\n      return UserData_Zodiac.Aquarius;\n    case 2:\n    case \"Aries\":\n      return UserData_Zodiac.Aries;\n    case 3:\n    case \"Cancer\":\n      return UserData_Zodiac.Cancer;\n    case 4:\n    case \"Capricorn\":\n      return UserData_Zodiac.Capricorn;\n    case 5:\n    case \"Gemini\":\n      return UserData_Zodiac.Gemini;\n    case 6:\n    case \"Leo\":\n      return UserData_Zodiac.Leo;\n    case 7:\n    case \"Libra\":\n      return UserData_Zodiac.Libra;\n    case 8:\n    case \"Pisces\":\n      return UserData_Zodiac.Pisces;\n    case 9:\n    case \"Sagittarius\":\n      return UserData_Zodiac.Sagittarius;\n    case 10:\n    case \"Scorpio\":\n      return UserData_Zodiac.Scorpio;\n    case 11:\n    case \"Taurus\":\n      return UserData_Zodiac.Taurus;\n    case 12:\n    case \"Virgo\":\n      return UserData_Zodiac.Virgo;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return UserData_Zodiac.UNRECOGNIZED;\n  }\n}\n\nexport function userData_ZodiacToJSON(object: UserData_Zodiac): string {\n  switch (object) {\n    case UserData_Zodiac.Invalid:\n      return \"Invalid\";\n    case UserData_Zodiac.Aquarius:\n      return \"Aquarius\";\n    case UserData_Zodiac.Aries:\n      return \"Aries\";\n    case UserData_Zodiac.Cancer:\n      return \"Cancer\";\n    case UserData_Zodiac.Capricorn:\n      return \"Capricorn\";\n    case UserData_Zodiac.Gemini:\n      return \"Gemini\";\n    case UserData_Zodiac.Leo:\n      return \"Leo\";\n    case UserData_Zodiac.Libra:\n      return \"Libra\";\n    case UserData_Zodiac.Pisces:\n      return \"Pisces\";\n    case UserData_Zodiac.Sagittarius:\n      return \"Sagittarius\";\n    case UserData_Zodiac.Scorpio:\n      return \"Scorpio\";\n    case UserData_Zodiac.Taurus:\n      return \"Taurus\";\n    case UserData_Zodiac.Virgo:\n      return \"Virgo\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function userData_ZodiacToNumber(object: UserData_Zodiac): number {\n  switch (object) {\n    case UserData_Zodiac.Invalid:\n      return 0;\n    case UserData_Zodiac.Aquarius:\n      return 1;\n    case UserData_Zodiac.Aries:\n      return 2;\n    case UserData_Zodiac.Cancer:\n      return 3;\n    case UserData_Zodiac.Capricorn:\n      return 4;\n    case UserData_Zodiac.Gemini:\n      return 5;\n    case UserData_Zodiac.Leo:\n      return 6;\n    case UserData_Zodiac.Libra:\n      return 7;\n    case UserData_Zodiac.Pisces:\n      return 8;\n    case UserData_Zodiac.Sagittarius:\n      return 9;\n    case UserData_Zodiac.Scorpio:\n      return 10;\n    case UserData_Zodiac.Taurus:\n      return 11;\n    case UserData_Zodiac.Virgo:\n      return 12;\n    default:\n      return 0;\n  }\n}\n\n/** model representing list of users to help wrapping in api */\nexport interface UserDataList {\n  userData: UserData[];\n}\n\nfunction createBaseBitmojiUserInfo(): BitmojiUserInfo {\n  return { avatarId: \"\", selfieId: \"\" };\n}\n\nexport const BitmojiUserInfo = {\n  encode(message: BitmojiUserInfo, writer: Writer = Writer.create()): Writer {\n    if (message.avatarId !== \"\") {\n      writer.uint32(10).string(message.avatarId);\n    }\n    if (message.selfieId !== \"\") {\n      writer.uint32(18).string(message.selfieId);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): BitmojiUserInfo {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBitmojiUserInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.avatarId = reader.string();\n          break;\n        case 2:\n          message.selfieId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): BitmojiUserInfo {\n    return {\n      avatarId: isSet(object.avatarId) ? String(object.avatarId) : \"\",\n      selfieId: isSet(object.selfieId) ? String(object.selfieId) : \"\",\n    };\n  },\n\n  toJSON(message: BitmojiUserInfo): unknown {\n    const obj: any = {};\n    message.avatarId !== undefined && (obj.avatarId = message.avatarId);\n    message.selfieId !== undefined && (obj.selfieId = message.selfieId);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<BitmojiUserInfo>, I>>(object: I): BitmojiUserInfo {\n    const message = createBaseBitmojiUserInfo();\n    message.avatarId = object.avatarId ?? \"\";\n    message.selfieId = object.selfieId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseFriendUserInfo(): FriendUserInfo {\n  return { friendshipStart: undefined, lastInteraction: undefined, streak: 0 };\n}\n\nexport const FriendUserInfo = {\n  encode(message: FriendUserInfo, writer: Writer = Writer.create()): Writer {\n    if (message.friendshipStart !== undefined) {\n      Timestamp.encode(toTimestamp(message.friendshipStart), writer.uint32(10).fork()).ldelim();\n    }\n    if (message.lastInteraction !== undefined) {\n      Timestamp.encode(toTimestamp(message.lastInteraction), writer.uint32(18).fork()).ldelim();\n    }\n    if (message.streak !== 0) {\n      writer.uint32(24).uint32(message.streak);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): FriendUserInfo {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFriendUserInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.friendshipStart = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.lastInteraction = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.streak = reader.uint32();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FriendUserInfo {\n    return {\n      friendshipStart: isSet(object.friendshipStart) ? fromJsonTimestamp(object.friendshipStart) : undefined,\n      lastInteraction: isSet(object.lastInteraction) ? fromJsonTimestamp(object.lastInteraction) : undefined,\n      streak: isSet(object.streak) ? Number(object.streak) : 0,\n    };\n  },\n\n  toJSON(message: FriendUserInfo): unknown {\n    const obj: any = {};\n    message.friendshipStart !== undefined && (obj.friendshipStart = message.friendshipStart.toISOString());\n    message.lastInteraction !== undefined && (obj.lastInteraction = message.lastInteraction.toISOString());\n    message.streak !== undefined && (obj.streak = Math.round(message.streak));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<FriendUserInfo>, I>>(object: I): FriendUserInfo {\n    const message = createBaseFriendUserInfo();\n    message.friendshipStart = object.friendshipStart ?? undefined;\n    message.lastInteraction = object.lastInteraction ?? undefined;\n    message.streak = object.streak ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseUserData(): UserData {\n  return {\n    userId: \"\",\n    username: \"\",\n    birthdate: \"\",\n    displayName: \"\",\n    countrycode: \"\",\n    score: 0,\n    bitmojiInfo: undefined,\n    friendInfo: undefined,\n    zodiac: UserData_Zodiac.Invalid,\n  };\n}\n\nexport const UserData = {\n  encode(message: UserData, writer: Writer = Writer.create()): Writer {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.username !== \"\") {\n      writer.uint32(18).string(message.username);\n    }\n    if (message.birthdate !== \"\") {\n      writer.uint32(26).string(message.birthdate);\n    }\n    if (message.displayName !== \"\") {\n      writer.uint32(34).string(message.displayName);\n    }\n    if (message.countrycode !== \"\") {\n      writer.uint32(42).string(message.countrycode);\n    }\n    if (message.score !== 0) {\n      writer.uint32(56).uint64(message.score);\n    }\n    if (message.bitmojiInfo !== undefined) {\n      BitmojiUserInfo.encode(message.bitmojiInfo, writer.uint32(66).fork()).ldelim();\n    }\n    if (message.friendInfo !== undefined) {\n      FriendUserInfo.encode(message.friendInfo, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.zodiac !== UserData_Zodiac.Invalid) {\n      writer.uint32(80).int32(userData_ZodiacToNumber(message.zodiac));\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): UserData {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUserData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userId = reader.string();\n          break;\n        case 2:\n          message.username = reader.string();\n          break;\n        case 3:\n          message.birthdate = reader.string();\n          break;\n        case 4:\n          message.displayName = reader.string();\n          break;\n        case 5:\n          message.countrycode = reader.string();\n          break;\n        case 7:\n          message.score = longToNumber(reader.uint64() as Long);\n          break;\n        case 8:\n          message.bitmojiInfo = BitmojiUserInfo.decode(reader, reader.uint32());\n          break;\n        case 9:\n          message.friendInfo = FriendUserInfo.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.zodiac = userData_ZodiacFromJSON(reader.int32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UserData {\n    return {\n      userId: isSet(object.userId) ? String(object.userId) : \"\",\n      username: isSet(object.username) ? String(object.username) : \"\",\n      birthdate: isSet(object.birthdate) ? String(object.birthdate) : \"\",\n      displayName: isSet(object.displayName) ? String(object.displayName) : \"\",\n      countrycode: isSet(object.countrycode) ? String(object.countrycode) : \"\",\n      score: isSet(object.score) ? Number(object.score) : 0,\n      bitmojiInfo: isSet(object.bitmojiInfo) ? BitmojiUserInfo.fromJSON(object.bitmojiInfo) : undefined,\n      friendInfo: isSet(object.friendInfo) ? FriendUserInfo.fromJSON(object.friendInfo) : undefined,\n      zodiac: isSet(object.zodiac) ? userData_ZodiacFromJSON(object.zodiac) : UserData_Zodiac.Invalid,\n    };\n  },\n\n  toJSON(message: UserData): unknown {\n    const obj: any = {};\n    message.userId !== undefined && (obj.userId = message.userId);\n    message.username !== undefined && (obj.username = message.username);\n    message.birthdate !== undefined && (obj.birthdate = message.birthdate);\n    message.displayName !== undefined && (obj.displayName = message.displayName);\n    message.countrycode !== undefined && (obj.countrycode = message.countrycode);\n    message.score !== undefined && (obj.score = Math.round(message.score));\n    message.bitmojiInfo !== undefined &&\n      (obj.bitmojiInfo = message.bitmojiInfo ? BitmojiUserInfo.toJSON(message.bitmojiInfo) : undefined);\n    message.friendInfo !== undefined &&\n      (obj.friendInfo = message.friendInfo ? FriendUserInfo.toJSON(message.friendInfo) : undefined);\n    message.zodiac !== undefined && (obj.zodiac = userData_ZodiacToJSON(message.zodiac));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<UserData>, I>>(object: I): UserData {\n    const message = createBaseUserData();\n    message.userId = object.userId ?? \"\";\n    message.username = object.username ?? \"\";\n    message.birthdate = object.birthdate ?? \"\";\n    message.displayName = object.displayName ?? \"\";\n    message.countrycode = object.countrycode ?? \"\";\n    message.score = object.score ?? 0;\n    message.bitmojiInfo =\n      object.bitmojiInfo !== undefined && object.bitmojiInfo !== null\n        ? BitmojiUserInfo.fromPartial(object.bitmojiInfo)\n        : undefined;\n    message.friendInfo =\n      object.friendInfo !== undefined && object.friendInfo !== null\n        ? FriendUserInfo.fromPartial(object.friendInfo)\n        : undefined;\n    message.zodiac = object.zodiac ?? UserData_Zodiac.Invalid;\n    return message;\n  },\n};\n\nfunction createBaseUserDataList(): UserDataList {\n  return { userData: [] };\n}\n\nexport const UserDataList = {\n  encode(message: UserDataList, writer: Writer = Writer.create()): Writer {\n    for (const v of message.userData) {\n      UserData.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): UserDataList {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUserDataList();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.userData.push(UserData.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UserDataList {\n    return {\n      userData: Array.isArray(object?.userData) ? object.userData.map((e: any) => UserData.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: UserDataList): unknown {\n    const obj: any = {};\n    if (message.userData) {\n      obj.userData = message.userData.map((e) => (e ? UserData.toJSON(e) : undefined));\n    } else {\n      obj.userData = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<UserDataList>, I>>(object: I): UserDataList {\n    const message = createBaseUserDataList();\n    message.userData = object.userData?.map((e) => UserData.fromPartial(e)) || [];\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = date.getTime() / 1_000;\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = t.seconds * 1_000;\n  millis += t.nanos / 1_000_000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\nexport interface PersistentStore {\n  store: Uint8Array;\n}\n\nfunction createBasePersistentStore(): PersistentStore {\n  return { store: new Uint8Array() };\n}\n\nexport const PersistentStore = {\n  encode(message: PersistentStore, writer: Writer = Writer.create()): Writer {\n    if (message.store.length !== 0) {\n      writer.uint32(10).bytes(message.store);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): PersistentStore {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePersistentStore();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.store = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PersistentStore {\n    return {\n      store: isSet(object.store) ? bytesFromBase64(object.store) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: PersistentStore): unknown {\n    const obj: any = {};\n    message.store !== undefined &&\n      (obj.store = base64FromBytes(message.store !== undefined ? message.store : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PersistentStore>, I>>(object: I): PersistentStore {\n    const message = createBasePersistentStore();\n    message.store = object.store ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\nexport interface LaunchParams {\n  data: Uint8Array;\n}\n\nfunction createBaseLaunchParams(): LaunchParams {\n  return { data: new Uint8Array() };\n}\n\nexport const LaunchParams = {\n  encode(message: LaunchParams, writer: Writer = Writer.create()): Writer {\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): LaunchParams {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLaunchParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LaunchParams {\n    return {\n      data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: LaunchParams): unknown {\n    const obj: any = {};\n    message.data !== undefined &&\n      (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<LaunchParams>, I>>(object: I): LaunchParams {\n    const message = createBaseLaunchParams();\n    message.data = object.data ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Snappable } from \"../lenses/snappable\";\nimport { Lures } from \"../lenses/lures\";\nimport { UserData } from \"../lenses/user_data\";\nimport { PersistentStore } from \"../lenses/persistent_store\";\nimport { LaunchParams } from \"../lenses/launch_params\";\n\nexport const protobufPackage = \"snapchat.lenses\";\n\nexport interface LaunchData {\n  snappable: Snappable | undefined;\n  lures: Lures | undefined;\n  userId: string;\n  entryPoint: LaunchData_EntryPoint;\n  userData: UserData | undefined;\n  persistentStore: PersistentStore | undefined;\n  launchParams: LaunchParams | undefined;\n  apiDescriptors: LaunchData_ApiDescriptor[];\n}\n\nexport enum LaunchData_EntryPoint {\n  LIVE_CAMERA = \"LIVE_CAMERA\",\n  STORY_REPLY = \"STORY_REPLY\",\n  CHAT_REPLY = \"CHAT_REPLY\",\n  RESTART = \"RESTART\",\n  PREVIEW_CANCEL = \"PREVIEW_CANCEL\",\n  MAP = \"MAP\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function launchData_EntryPointFromJSON(object: any): LaunchData_EntryPoint {\n  switch (object) {\n    case 0:\n    case \"LIVE_CAMERA\":\n      return LaunchData_EntryPoint.LIVE_CAMERA;\n    case 1:\n    case \"STORY_REPLY\":\n      return LaunchData_EntryPoint.STORY_REPLY;\n    case 2:\n    case \"CHAT_REPLY\":\n      return LaunchData_EntryPoint.CHAT_REPLY;\n    case 3:\n    case \"RESTART\":\n      return LaunchData_EntryPoint.RESTART;\n    case 4:\n    case \"PREVIEW_CANCEL\":\n      return LaunchData_EntryPoint.PREVIEW_CANCEL;\n    case 5:\n    case \"MAP\":\n      return LaunchData_EntryPoint.MAP;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LaunchData_EntryPoint.UNRECOGNIZED;\n  }\n}\n\nexport function launchData_EntryPointToJSON(object: LaunchData_EntryPoint): string {\n  switch (object) {\n    case LaunchData_EntryPoint.LIVE_CAMERA:\n      return \"LIVE_CAMERA\";\n    case LaunchData_EntryPoint.STORY_REPLY:\n      return \"STORY_REPLY\";\n    case LaunchData_EntryPoint.CHAT_REPLY:\n      return \"CHAT_REPLY\";\n    case LaunchData_EntryPoint.RESTART:\n      return \"RESTART\";\n    case LaunchData_EntryPoint.PREVIEW_CANCEL:\n      return \"PREVIEW_CANCEL\";\n    case LaunchData_EntryPoint.MAP:\n      return \"MAP\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function launchData_EntryPointToNumber(object: LaunchData_EntryPoint): number {\n  switch (object) {\n    case LaunchData_EntryPoint.LIVE_CAMERA:\n      return 0;\n    case LaunchData_EntryPoint.STORY_REPLY:\n      return 1;\n    case LaunchData_EntryPoint.CHAT_REPLY:\n      return 2;\n    case LaunchData_EntryPoint.RESTART:\n      return 3;\n    case LaunchData_EntryPoint.PREVIEW_CANCEL:\n      return 4;\n    case LaunchData_EntryPoint.MAP:\n      return 5;\n    default:\n      return 0;\n  }\n}\n\nexport enum LaunchData_ApiDescriptor {\n  /** NONE - Extend as appropriate */\n  NONE = \"NONE\",\n  /** EXPERIMENTAL - https://snapchat.quip.com/Z6pNAfq26OKk */\n  EXPERIMENTAL = \"EXPERIMENTAL\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function launchData_ApiDescriptorFromJSON(object: any): LaunchData_ApiDescriptor {\n  switch (object) {\n    case 0:\n    case \"NONE\":\n      return LaunchData_ApiDescriptor.NONE;\n    case 1:\n    case \"EXPERIMENTAL\":\n      return LaunchData_ApiDescriptor.EXPERIMENTAL;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return LaunchData_ApiDescriptor.UNRECOGNIZED;\n  }\n}\n\nexport function launchData_ApiDescriptorToJSON(object: LaunchData_ApiDescriptor): string {\n  switch (object) {\n    case LaunchData_ApiDescriptor.NONE:\n      return \"NONE\";\n    case LaunchData_ApiDescriptor.EXPERIMENTAL:\n      return \"EXPERIMENTAL\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function launchData_ApiDescriptorToNumber(object: LaunchData_ApiDescriptor): number {\n  switch (object) {\n    case LaunchData_ApiDescriptor.NONE:\n      return 0;\n    case LaunchData_ApiDescriptor.EXPERIMENTAL:\n      return 1;\n    default:\n      return 0;\n  }\n}\n\nfunction createBaseLaunchData(): LaunchData {\n  return {\n    snappable: undefined,\n    lures: undefined,\n    userId: \"\",\n    entryPoint: LaunchData_EntryPoint.LIVE_CAMERA,\n    userData: undefined,\n    persistentStore: undefined,\n    launchParams: undefined,\n    apiDescriptors: [],\n  };\n}\n\nexport const LaunchData = {\n  encode(message: LaunchData, writer: Writer = Writer.create()): Writer {\n    if (message.snappable !== undefined) {\n      Snappable.encode(message.snappable, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.lures !== undefined) {\n      Lures.encode(message.lures, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(26).string(message.userId);\n    }\n    if (message.entryPoint !== LaunchData_EntryPoint.LIVE_CAMERA) {\n      writer.uint32(32).int32(launchData_EntryPointToNumber(message.entryPoint));\n    }\n    if (message.userData !== undefined) {\n      UserData.encode(message.userData, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.persistentStore !== undefined) {\n      PersistentStore.encode(message.persistentStore, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.launchParams !== undefined) {\n      LaunchParams.encode(message.launchParams, writer.uint32(58).fork()).ldelim();\n    }\n    writer.uint32(66).fork();\n    for (const v of message.apiDescriptors) {\n      writer.int32(launchData_ApiDescriptorToNumber(v));\n    }\n    writer.ldelim();\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): LaunchData {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseLaunchData();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.snappable = Snappable.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.lures = Lures.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.userId = reader.string();\n          break;\n        case 4:\n          message.entryPoint = launchData_EntryPointFromJSON(reader.int32());\n          break;\n        case 5:\n          message.userData = UserData.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.persistentStore = PersistentStore.decode(reader, reader.uint32());\n          break;\n        case 7:\n          message.launchParams = LaunchParams.decode(reader, reader.uint32());\n          break;\n        case 8:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.apiDescriptors.push(launchData_ApiDescriptorFromJSON(reader.int32()));\n            }\n          } else {\n            message.apiDescriptors.push(launchData_ApiDescriptorFromJSON(reader.int32()));\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): LaunchData {\n    return {\n      snappable: isSet(object.snappable) ? Snappable.fromJSON(object.snappable) : undefined,\n      lures: isSet(object.lures) ? Lures.fromJSON(object.lures) : undefined,\n      userId: isSet(object.userId) ? String(object.userId) : \"\",\n      entryPoint: isSet(object.entryPoint)\n        ? launchData_EntryPointFromJSON(object.entryPoint)\n        : LaunchData_EntryPoint.LIVE_CAMERA,\n      userData: isSet(object.userData) ? UserData.fromJSON(object.userData) : undefined,\n      persistentStore: isSet(object.persistentStore) ? PersistentStore.fromJSON(object.persistentStore) : undefined,\n      launchParams: isSet(object.launchParams) ? LaunchParams.fromJSON(object.launchParams) : undefined,\n      apiDescriptors: Array.isArray(object?.apiDescriptors)\n        ? object.apiDescriptors.map((e: any) => launchData_ApiDescriptorFromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: LaunchData): unknown {\n    const obj: any = {};\n    message.snappable !== undefined &&\n      (obj.snappable = message.snappable ? Snappable.toJSON(message.snappable) : undefined);\n    message.lures !== undefined && (obj.lures = message.lures ? Lures.toJSON(message.lures) : undefined);\n    message.userId !== undefined && (obj.userId = message.userId);\n    message.entryPoint !== undefined && (obj.entryPoint = launchData_EntryPointToJSON(message.entryPoint));\n    message.userData !== undefined && (obj.userData = message.userData ? UserData.toJSON(message.userData) : undefined);\n    message.persistentStore !== undefined &&\n      (obj.persistentStore = message.persistentStore ? PersistentStore.toJSON(message.persistentStore) : undefined);\n    message.launchParams !== undefined &&\n      (obj.launchParams = message.launchParams ? LaunchParams.toJSON(message.launchParams) : undefined);\n    if (message.apiDescriptors) {\n      obj.apiDescriptors = message.apiDescriptors.map((e) => launchData_ApiDescriptorToJSON(e));\n    } else {\n      obj.apiDescriptors = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<LaunchData>, I>>(object: I): LaunchData {\n    const message = createBaseLaunchData();\n    message.snappable =\n      object.snappable !== undefined && object.snappable !== null ? Snappable.fromPartial(object.snappable) : undefined;\n    message.lures = object.lures !== undefined && object.lures !== null ? Lures.fromPartial(object.lures) : undefined;\n    message.userId = object.userId ?? \"\";\n    message.entryPoint = object.entryPoint ?? LaunchData_EntryPoint.LIVE_CAMERA;\n    message.userData =\n      object.userData !== undefined && object.userData !== null ? UserData.fromPartial(object.userData) : undefined;\n    message.persistentStore =\n      object.persistentStore !== undefined && object.persistentStore !== null\n        ? PersistentStore.fromPartial(object.persistentStore)\n        : undefined;\n    message.launchParams =\n      object.launchParams !== undefined && object.launchParams !== null\n        ? LaunchParams.fromPartial(object.launchParams)\n        : undefined;\n    message.apiDescriptors = object.apiDescriptors?.map((e) => e) || [];\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","import { LaunchData } from \"../generated-proto/pb_schema/lenses/launchdata\";\nimport { isNumber, isRecord, isString } from \"../common/typeguards\";\n\nconst isNotValid = (value: unknown) => !(isString(value) || isValidNumber(value));\n\nconst isValidNumber = (value: unknown): value is number =>\n    isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n\nexport type LensLaunchParams = Record<string, string | number | string[] | number[]>;\n\n/**\n *\n * @param launchParams\n * @returns true if luanchParams are valid\n */\nexport function isLaunchParamsValid(launchParams: unknown): launchParams is LensLaunchParams {\n    if (!isRecord(launchParams) || launchParams instanceof Date) {\n        throw new Error(\"should be a record <string, number | string | string[] | number[]>\");\n    }\n\n    for (const value of Object.values(launchParams)) {\n        if (Array.isArray(value)) {\n            if (!value.every(isString) && !value.every(isValidNumber)) {\n                throw new Error(\"only number, string, string[], number[] values are allowed\");\n            }\n        } else if (isNotValid(value)) {\n            throw new Error(\"only number, string, string[], number[] values are allowed\");\n        }\n    }\n\n    return true;\n}\n\nexport const createLaunchData = (launchParams: LensLaunchParams): ArrayBuffer =>\n    // protobufjs is used shared array buffer behind and to avoid of detached buffer error\n    // data should be copied before passing to the web assembly scope\n    LaunchData.encode(\n        LaunchData.fromPartial({\n            launchParams: { data: new TextEncoder().encode(JSON.stringify(launchParams)) },\n        })\n    ).finish();\n","const onHiddenHandlers = new Set<() => void>();\nconst onVisibleHandlers = new Set<() => void>();\n\nlet previousVisibilityState = document.visibilityState;\nlet visibilityTransition: false | DocumentVisibilityState = false;\n\nlet initialized = false;\nfunction maybeInitializeVisibilityListeners(): void {\n    if (initialized) return;\n    initialized = true;\n\n    document.addEventListener(\"visibilitychange\", () => {\n        const handlers =\n            previousVisibilityState === \"visible\" && document.visibilityState === \"hidden\"\n                ? onHiddenHandlers\n                : previousVisibilityState === \"hidden\" && document.visibilityState === \"visible\"\n                ? onVisibleHandlers\n                : new Set<() => void>();\n\n        visibilityTransition = document.visibilityState;\n\n        for (const handler of handlers) {\n            try {\n                handler();\n            } catch (error) {\n                // We'll do the same thing here that we would do if the handler was added directly as an event\n                // listener and dispatch an error event if we can.\n                if (typeof window === \"object\") window.dispatchEvent(new CustomEvent(\"error\", { detail: error }));\n            }\n        }\n\n        previousVisibilityState = visibilityTransition;\n        visibilityTransition = false;\n    });\n}\n\nexport function isDuringVisibilityTransition(test: DocumentVisibilityState): boolean {\n    return test === visibilityTransition;\n}\n\n/**\n * Run a function when the page is hidden. If this occurs due to tab / browser closure, only synchronous functions will\n * run to completion.\n *\n * If the given handler throws an error, it will be silently swallowed.\n *\n * @param handler\n * @returns A function which, when called, removes the function from the set of visibility change handlers.\n */\nexport function onPageHidden(handler: () => void): () => void {\n    maybeInitializeVisibilityListeners();\n    onHiddenHandlers.add(handler);\n    return () => onHiddenHandlers.delete(handler);\n}\n\n/**\n * Run a function when the page is made visible.\n *\n * If the given handler throws an error, it will be silently swallowed.\n *\n * @param handler\n * @returns A function which, when called, removes the function from the set of visibility change handlers.\n */\nexport function onPageVisible(handler: () => void): () => void {\n    maybeInitializeVisibilityListeners();\n    onVisibleHandlers.add(handler);\n    return () => onVisibleHandlers.delete(handler);\n}\n","import { TupleOf } from \"../common/types\";\n\n/**\n * Use this class to supply the CameraKitSession::setSourceTransform with the proper data\n * needed to apply transformations\n */\nexport class Transform2D {\n    static readonly MirrorX = new Transform2D([-1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n    static readonly MirrorY = new Transform2D([1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 1.0]);\n    static readonly Identity = new Transform2D([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]);\n\n    /**\n     * @param matrix A 3x3 matrix in column-major order, representing a 2D transform to be applied to the source media\n     */\n    constructor(readonly matrix: TupleOf<number, 9>) {}\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\n\nimport { validate } from \"../common/validate\";\nimport { LensCoreModule, UseMediaElementInput } from \"../lens-core-module/generated-types\";\nimport { Transform2D } from \"../transforms\";\n\nconst defaultDeviceInfo: CameraKitDeviceInfo = {\n    cameraType: \"front\",\n    fpsLimit: Number.POSITIVE_INFINITY,\n};\n\nconst createNotAttachedError = (message: string) =>\n    new Error(`${message}. This CameraKitSource is not attached to a CameraKitSession.`);\n\nexport interface CameraKitSourceSubscriber {\n    readonly onAttach?: (\n        source: CameraKitSource,\n        lensCore: LensCoreModule,\n        reportError: (error: Error) => void\n    ) => void | Promise<void>;\n    readonly onDetach?: () => void | Promise<void>;\n}\n\nexport type CameraKitDeviceInfo = {\n    cameraType: \"front\" | \"back\";\n    fpsLimit: number;\n};\n\nexport type CameraKitSourceInfo = Pick<\n    UseMediaElementInput,\n    \"media\" | \"replayTrackingData\" | \"useManualFrameProcessing\"\n>;\n\nexport type CameraKitSourceOptions<T = {}> = Partial<T> & Partial<CameraKitDeviceInfo>;\n\n/**\n * This general-purpose class represents a source of media for a {@link CameraKitSession}.\n *\n * When an instance is passed to {@link CameraKitSession.setSource}, it will be \"attached\" to the session.\n * Later it may be \"detached\" from the session.\n *\n * Passing a {@link CameraKitSourceSubscriber} to the constructor allows callers to specify behavior\n * that will occur when the source is attached and detached. This can be used to e.g. update the render size.\n */\nexport class CameraKitSource {\n    private lensCore?: LensCoreModule;\n    private readonly deviceInfo: CameraKitDeviceInfo;\n\n    constructor(\n        private readonly sourceInfo: CameraKitSourceInfo,\n        private readonly subscriber: CameraKitSourceSubscriber = {},\n        deviceInfo: Partial<CameraKitDeviceInfo> = {}\n    ) {\n        this.deviceInfo = { ...defaultDeviceInfo, ...deviceInfo };\n    }\n\n    /**\n     * Called by {@link CameraKitSession} when this source is set as that session's source.\n     *\n     * @param lensCore\n     * @param reportError Calling this function will report an error back to the session.\n     * @returns Rejects if any calls to LensCore or CameraKitSource.subscriber.onAttach fail.\n     * @internal\n     */\n    async attach(lensCore: LensCoreModule, reportError: (error: Error) => void): Promise<void> {\n        if (this.lensCore) {\n            throw new Error(\n                \"Cannot attach. This CameraKitCustomSource has already been attached to \" +\n                    \"a CameraKitSession. To re-attach, create a copy of this CameraKitCustomSource.\"\n            );\n        }\n\n        this.lensCore = lensCore;\n\n        await new Promise((onSuccess, onFailure) => {\n            lensCore.useMediaElement({\n                autoplayNewMedia: false,\n                autoplayPreviewCanvas: false,\n                media: this.sourceInfo.media,\n                pauseExistingMedia: false,\n                replayTrackingData: this.sourceInfo.replayTrackingData,\n                requestWebcam: false,\n                startOnFrontCamera: this.deviceInfo.cameraType === \"front\",\n                useManualFrameProcessing: this.sourceInfo.useManualFrameProcessing,\n                onSuccess,\n                onFailure,\n            });\n        });\n\n        await new Promise<void>((onSuccess, onFailure) => {\n            // LensCore uses 0 to remove the limit.\n            const fps = this.deviceInfo.fpsLimit < Number.POSITIVE_INFINITY ? this.deviceInfo.fpsLimit : 0;\n            lensCore.setFPSLimit({ fps, onSuccess, onFailure });\n        });\n\n        if (this.subscriber.onAttach) await this.subscriber.onAttach(this, lensCore, reportError);\n    }\n\n    /**\n     * Make a copy of the source, sharing the same {@link CameraKitSourceSubscriber}.\n     *\n     * @param deviceInfo Optionally provide new device info for the copy (e.g. to change the camera type).\n     * @returns The new {@link CameraKitSource}\n     */\n    copy(deviceInfo: Partial<CameraKitDeviceInfo> = {}): CameraKitSource {\n        return new CameraKitSource(this.sourceInfo, this.subscriber, { ...this.deviceInfo, ...deviceInfo });\n    }\n\n    /**\n     * Called by {@link CameraKitSession} when it must remove this source.\n     *\n     * @returns\n     * @internal\n     */\n    detach(): void | Promise<void> {\n        if (!this.lensCore) return Promise.reject(createNotAttachedError(\"Cannot detach\"));\n        if (this.subscriber.onDetach) return this.subscriber.onDetach();\n    }\n\n    /**\n     * Set the resolution used to render this source.\n     *\n     * It’s important to distinguish render size from display size. The size at which the output canvases are displayed\n     * on a web page is determined by the CSS of the page. It is distinct from the size at which LensCore renders\n     * Lenses. Performance is dominated by render size, while any display scaling can most often be thought of as free.\n     *\n     * If greater performance is required, a smaller render size may boost frame-rate. It does come at a cost, including\n     * loss of accuracy in various tracking and computer-vision algorithms (since they'll be operating on fewer pixels).\n     *\n     * The size of the Live and Capture render targets is always the same.\n     *\n     * TODO: Currently it's only valid to call `setRenderSize` after `CameraKitSession.play` has been called. This\n     * constraint should be removed, so callers don't have to understand the underlying LensCore state machine.\n     *\n     * @param width pixels\n     * @param height pixels\n     * @returns Promise resolves when the render size has been successfully updated.\n     */\n    @validate\n    setRenderSize(width: number, height: number): Promise<void> {\n        return new Promise((onSuccess, onFailure) => {\n            if (!this.lensCore) return onFailure(createNotAttachedError(\"Cannot setRenderSize\"));\n            const target = { width, height };\n            this.lensCore.setRenderSize({ mode: \"explicit\", target, onSuccess, onFailure });\n        });\n    }\n\n    /**\n     * Apply a 2D transformation to the source (e.g. translation, rotation, scale).\n     *\n     * @param transform Specifies the 3x3 matrix describing the transformation.\n     */\n    @validate\n    setTransform(transform: Transform2D): Promise<void> {\n        return new Promise((onSuccess, onFailure) => {\n            if (!this.lensCore) return onFailure(createNotAttachedError(\"Cannot setTransform\"));\n            const matrix = new Float32Array(transform.matrix);\n            this.lensCore.setInputTransform({ matrix, onSuccess, onFailure });\n        });\n    }\n}\n","import { Transform2D } from \"../transforms\";\nimport { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: MediaStreamSourceOptions = {\n    transform: Transform2D.Identity,\n};\n\nexport interface MediaStreamSourceOptions {\n    transform: Transform2D;\n}\n\n/**\n * Create a {@link CameraKitSource} from a user's media device.\n *\n * @param constraints Specify contraints used to get a MediaStream from a media device. By default we simply request\n * a video stream.\n * @param options\n * @param options.transform By default we horizontally mirror the video stream. The most common use-case is to obtain a\n * stream from a front-facing web cam, which requires mirroring to be viewed naturally.\n * @param options.cameraType By default we set this to 'front' to indicate a camera pointed at the user (e.g. a webcam).\n * @param options.fpsLimit By default we set no limit on FPS – if the source device has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n * @returns A Promise, resolving to {@link CameraKitSource}\n */\nexport async function createUserMediaSource(\n    constraints: MediaStreamConstraints = { video: true },\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): Promise<CameraKitSource> {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return createMediaStreamSource(stream, { transform: Transform2D.MirrorX, cameraType: \"front\", ...options });\n}\n\n/**\n * Create a {@link CameraKitSource} from any\n * [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream).\n *\n * @param stream Any MediaStream, such as obtained via `canvas.captureStream()`\n * @param options\n * @param options.transform We apply no transformation by default.\n * @param options.cameraType By default we set this to 'front', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the MediaStream has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n * @returns\n */\nexport function createMediaStreamSource(\n    stream: MediaStream,\n    options: CameraKitSourceOptions<MediaStreamSourceOptions> = {}\n): CameraKitSource {\n    const { transform } = { ...defaultOptions, ...options };\n    const { width, height } = stream.getVideoTracks()[0].getSettings();\n\n    return new CameraKitSource(\n        { media: stream },\n        {\n            onAttach: async (source) => {\n                if (width !== undefined && height !== undefined) await source.setRenderSize(width, height);\n                await source.setTransform(transform);\n            },\n        },\n        options\n    );\n}\n","import { CameraKitSource, CameraKitSourceOptions } from \"./CameraKitSource\";\n\nconst defaultOptions: VideoSourceOptions = {\n    trackingData: new ArrayBuffer(0),\n};\n\ninterface VideoSourceOptions {\n    trackingData: ArrayBuffer;\n}\n\n/**\n * Create a {@link CameraKitSource} from an\n * [HTMLVideoElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement).\n *\n * @param video CameraKit performs best when the source video is 720p – arbitrary resolutions are supported, but very\n * high resolutions may not perform well.\n * @param options\n * @param options.trackingData If pre-computed tracking data exists for this video, it may be provided in order to boost\n * rendering performance (it is not typical or expected for this to be provided).\n * @param options.cameraType By default we set this to 'front', which is the camera type most Lenses expect.\n * @param options.fpsLimit By default we set no limit on FPS – if the video has a known FPS setting this limit\n * may prevent CameraKit from using more compute resources than strictly necessary.\n * @returns\n */\nexport function createVideoSource(\n    video: HTMLVideoElement,\n    options: CameraKitSourceOptions<VideoSourceOptions> = {}\n): CameraKitSource {\n    const { trackingData } = { ...defaultOptions, ...options };\n    const replayTrackingData = trackingData.byteLength > 0 ? { buffer: trackingData } : undefined;\n\n    return new CameraKitSource(\n        {\n            media: video,\n            replayTrackingData,\n        },\n        {\n            onAttach: (source) => {\n                // If the video element has no explicit width/height (which may be the case for elements that have not\n                // been added to the DOM or had their size set explicitly), we'll render at the video's native\n                // resolution.\n                const [width, height] =\n                    video.width === 0 || video.height === 0\n                        ? [video.videoWidth, video.videoHeight]\n                        : [video.width, video.height];\n\n                return source.setRenderSize(width, height);\n            },\n        },\n        options\n    );\n}\n","import { LensCoreModule } from \"../lens-core-module\";\n\ninterface FrameProcessingMetricsState {\n    avgFps: number;\n    averageProcessingTime: number;\n    procFrameCount: number;\n    procFrameMean: number;\n    procFrameD2: number;\n}\n\nconst defaultFrameProcessingMetricsState: FrameProcessingMetricsState = {\n    avgFps: 0,\n    averageProcessingTime: 0,\n    procFrameCount: 0,\n    procFrameMean: 0,\n    procFrameD2: 0,\n};\n\n// This duration is chosen to be larger than we expect frame processing to reasonably take on any device, but smaller\n// than the duration of a manual rendering pause (e.g. a user clicking a pause button followed by a play button).\n//\n// This also defines the min avgFps that will be reported – if we see avgFps at `1 / frameDurationThresholdSec`\n// consistently, it's safe to assume actual fps is probably even lower.\nconst frameDurationThreshold: number = 1;\n\nexport interface ComputedFrameMetrics {\n    avgFps: number;\n    lensFrameProcessingTimeMsAvg: number;\n    lensFrameProcessingTimeMsStd: number;\n}\n\n/**\n * The FrameProcessingMetrics class provides a source of truth for handling and addressing calculations for\n * average frame processing time (ms), standard deviation, and average FPS.\n */\nexport class FrameProcessingMetrics {\n    private state: FrameProcessingMetricsState = { ...defaultFrameProcessingMetricsState };\n    private priorFrameCompletedTime?: number;\n\n    constructor(private lensCore: LensCoreModule) {\n        new Promise((resolve, reject) => {\n            this.lensCore.setOnFrameProcessedCallback({\n                onFrameProcessed: ({ processingTimeMs }) => {\n                    this.computeRunningStats(processingTimeMs);\n                },\n                onSuccess: resolve,\n                onFailure: reject,\n            });\n        });\n    }\n\n    /**\n     * @returns Current performance metrics rounding values to their nearest 100th\n     */\n    get metrics(): ComputedFrameMetrics {\n        return {\n            avgFps: this.state.avgFps,\n            lensFrameProcessingTimeMsAvg: this.state.procFrameMean,\n            lensFrameProcessingTimeMsStd: Math.sqrt(this.state.procFrameD2 / this.state.procFrameCount),\n        };\n    }\n\n    /**\n     * Reset the current metrics back to default values and begin calculating again.\n     */\n    reset(): void {\n        this.state = { ...defaultFrameProcessingMetricsState };\n    }\n\n    /**\n     * In order to calculate the mean, variance, and standard deviation for the processing times\n     *  we are using Welford's online algorithm.\n     * https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm\n     *\n     * @param processingTimeMs Processing time that is returned from registered callback\n     */\n    private computeRunningStats(processingTimeMs: number) {\n        // calculate mean and delta squared for variance and standard deviation\n        const delta = processingTimeMs - this.state.procFrameMean;\n        this.state.procFrameCount += 1;\n        this.state.procFrameMean += delta / this.state.procFrameCount;\n\n        const delta2 = processingTimeMs - this.state.procFrameMean;\n        this.state.procFrameD2 += delta * delta2;\n\n        // Determine average fps\n        if (this.priorFrameCompletedTime === undefined) {\n            this.priorFrameCompletedTime = performance.now();\n        } else {\n            const frameDurationSec = (performance.now() - this.priorFrameCompletedTime) / 1000;\n            if (frameDurationSec < frameDurationThreshold) {\n                this.state.avgFps = (this.state.avgFps + 1 / frameDurationSec) / 2;\n            }\n            this.priorFrameCompletedTime = performance.now();\n        }\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport { Lens, LensRepository, isLens, lensRepositoryFactory } from \"../lens\";\nimport { AddLensInput, CanvasType, LensCoreModule } from \"../lens-core-module\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { LensAssetsProvider, lensAssetsProviderFactory } from \"../lens/assets/LensAssetsProvider\";\nimport { lensCoreFactory } from \"../lens-core-module/loader/lensCoreFactory\";\nimport { defaultFetchHandlerFactory, FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { Handler, HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createArrayBufferParsingHandler } from \"../handlers/arrayBufferParsingHandler\";\nimport { createRequestStateEmittingHandler } from \"../handlers/requestStateEmittingHandler\";\nimport { LensLaunchParams, isLaunchParamsValid, createLaunchData } from \"../lens/LensLaunchParams\";\nimport { onPageHidden, onPageVisible } from \"../common/pageVisibility\";\nimport { guard, validate } from \"../common/validate\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { CameraKitDeviceInfo, CameraKitSource } from \"../media-sources/CameraKitSource\";\nimport { wrapError } from \"../common/errors\";\nimport { createMediaStreamSource } from \"../media-sources/MediaStreamSource\";\nimport { createVideoSource } from \"../media-sources/VideoSource\";\nimport { FrameProcessingMetrics } from \"../metrics/FrameProcessingMetrics\";\nimport { LensDownloadDimensions } from \"../metrics/reporters/reportLensAndAssetDownload\";\nimport { LensContext, lensContextFactory } from \"./LensContext\";\nimport { SessionStateEventTarget, sessionStateEventTargetFactory, SessionLensEvents } from \"./sessionStateEventTarget\";\n\ntype LensHandler = Handler<[RequestInfo, LensDownloadDimensions], [ArrayBuffer, Response], undefined>;\n\ntype RenderTarget = \"live\" | \"capture\" | \"all\";\n\nfunction isOptionalRenderTarget(value: unknown): value is RenderTarget | undefined {\n    return value === \"live\" || value === \"capture\" || value === \"all\" || value === undefined;\n}\n\nexport interface CameraKitSessionMetrics {\n    frames: FrameProcessingMetrics[\"metrics\"];\n}\n\nexport type CameraKitSessionEvents = TypedCustomEvent<\"error\", Error>;\n\n/**\n * A CameraKitSession represents a single rendering pipeline connecting an input source to output `<canvas>` elements.\n * When a Lens is applied to the session, it provides assets and rendering logic to transform the input media.\n */\nexport class CameraKitSession {\n    /**\n     * CameraKitSession renders video output to a `<canvas>` element. In fact, each session contains two canvas outputs\n     * corresponding to the RenderTargets used by Lens creators.\n     *\n     * The \"live\" output renders content suitable for the Lens user (e.g. it may contain additional UI elements\n     * applicable only to the person applying the lens). The \"capture\" output renders content suitable for sharing with\n     * other users (e.g. sent to the other members of a video call).\n     *\n     * For many lenses, these outputs are identical – many lens use-cases will only render the \"live\" output.\n     */\n    readonly output: {\n        live: HTMLCanvasElement;\n        capture: HTMLCanvasElement;\n    };\n\n    playing: false | RenderTarget;\n\n    private readonly frameProcessingMetrics: FrameProcessingMetrics;\n    private readonly removePageVisibilityHandlers: () => void;\n    private source?: CameraKitSource;\n\n    constructor(\n        private readonly lensCore: LensCoreModule,\n\n        /**\n         * Events occuring during the lifetime of the session are emitted here.\n         *\n         * These events include:\n         *\n         * - `error`: Emitted whenever the core Lens rendering engine encounters an error during image processing.\n         */\n        public readonly events: TypedEventTarget<CameraKitSessionEvents>,\n        private readonly fetchLens: LensHandler,\n        private readonly lensAssetsProvider: LensAssetsProvider,\n        private readonly lensRepository: LensRepository,\n        private readonly lensContext: LensContext,\n        private readonly stateTarget: SessionStateEventTarget\n    ) {\n        const outputs = this.lensCore.getOutputCanvases();\n        this.output = {\n            live: outputs[this.lensCore.CanvasType.Preview.value],\n            capture: outputs[this.lensCore.CanvasType.Capture.value],\n        };\n        this.playing = false;\n        this.frameProcessingMetrics = new FrameProcessingMetrics(this.lensCore);\n        this.stateTarget.dispatchEvent(new TypedCustomEvent(\"sessionCreated\", {}));\n\n        const removeOnHidden = onPageHidden(() => {\n            this.stateTarget.dispatchEvent(new TypedCustomEvent(\"sessionSuspended\", {}));\n        });\n        const removeOnVisible = onPageVisible(() => {\n            this.stateTarget.dispatchEvent(new TypedCustomEvent(\"sessionResumed\", {}));\n        });\n        this.removePageVisibilityHandlers = () => {\n            removeOnHidden();\n            removeOnVisible();\n        };\n    }\n\n    get metrics(): CameraKitSessionMetrics {\n        return { frames: this.frameProcessingMetrics.metrics };\n    }\n    /**\n     * Apply a Lens to this session.\n     *\n     * This method will download (and cache) the Lens executable, and then use that Lens for rendering. If the session\n     * is currently playing, this will immediately update the rendered output. Otherwise, the new Lens will be used\n     * when session playback in resumed.\n     *\n     * Calling `applyLens` replaces any prior lens – only one Lens is allowed at a time (per session).\n     *\n     * @param lens The Lens to apply to this session.\n     * @returns Promise resolves when the lens has been successfully applied (i.e. any frames rendered after this\n     * point will use the new lens); rejects if:\n     *   1. Lens content object is invalid.\n     *   1. The prior lens fails to be removed.\n     *   1. Lens download fails.\n     *   1. Lens application fails.\n     */\n    @validate\n    async applyLens(@guard(isLens) lens: Lens, launchParams?: LensLaunchParams): Promise<void> {\n        // Validation guarantees JSON.stringify and Protobuf encode will succeed, otherwise this function throws\n        const binaryLaunchData =\n            launchParams && isLaunchParamsValid(launchParams) ? createLaunchData(launchParams) : null;\n\n        await this.removeLens();\n\n        return new Promise(async (resolve, reject) => {\n            try {\n                const dispatch = (eventType: SessionLensEvents[\"type\"]) => {\n                    this.stateTarget.dispatchEvent(new TypedCustomEvent(eventType, lens));\n\n                    // Performance varies widely between lenses (and between lens applied and no lens applied), so our\n                    // frame processing metrics make sense only if they cover just a single lens.\n                    if (eventType === \"lensTurnedOff\" || eventType === \"lensTurnedOn\") {\n                        // Schedule the reset for the next tick of the event loop, this allows any event listeners to\n                        // run to completion first – they might want to read these metrics before they're reset.\n                        setTimeout(() => this.frameProcessingMetrics.reset());\n                    }\n                };\n\n                dispatch(\"lensApplyStart\");\n\n                const cachedLens = this.lensRepository.getCachedLens(lens.id);\n                if (!cachedLens) {\n                    return reject(\n                        new Error(\n                            `Cannot apply lens ${lens.id}. It has not been loaded by the Lens repository. Use ` +\n                                `CameraKit.lenses.repository.loadLens (or loadLensGroups) to load lens metadata ` +\n                                `before calling CameraKitSession.applyLens.`\n                        )\n                    );\n                }\n                const { id, content } = cachedLens;\n                if (!content) {\n                    return reject(\n                        new Error(\n                            `Cannot apply lens ${lens.id}. Metadata retrieved for this lens does not include the ` +\n                                `lens content URL.`\n                        )\n                    );\n                }\n\n                this.updateLensContext({ activeLens: cachedLens });\n\n                // Load required lens assets and the lens itself in parallel. We count both toward lens download time.\n                const [_, [lensDataBuffer]] = await Promise.all([\n                    // If any required asset from the manifest fails, we stop trying to apply the lens.\n                    this.lensAssetsProvider.preloadManifestData(content!.assetManifest),\n                    this.fetchLens([new Request(content.lnsUrlBolt), { requestType: \"lens_content\", lensId: id }]),\n                    // We want to dispatch on both success and failure, so we use finally.\n                ]).finally(() => dispatch(\"lensDownloadComplete\"));\n\n                const lensInput: AddLensInput = {\n                    lensId: id,\n                    lensDataBuffer,\n                    lensChecksum: content!.lnsSha256,\n                    onSuccess: resolve,\n                    onFailure: (error: Error) => {\n                        this.removeLens();\n                        reject(error);\n                        if (/Attempting to add lens from \\S*, but checksum validation failed./.test(error.message)) {\n                            dispatch(\"lensContentValidationFailure\");\n                        }\n                    },\n                    onTurnOn: () => dispatch(\"lensTurnedOn\"),\n                    onTurnOff: () => dispatch(\"lensTurnedOff\"),\n                    onResourcesLoaded: () => dispatch(\"lensLoaded\"),\n                    onFirstFrameProcessed: () => dispatch(\"firstFrameProcessed\"),\n                };\n\n                if (binaryLaunchData) {\n                    lensInput.launchData = binaryLaunchData;\n                }\n\n                dispatch(\"lensInitiated\");\n                this.lensCore.addLens(lensInput);\n            } catch (error) {\n                await this.removeLens();\n                reject(error);\n            }\n        });\n    }\n\n    /**\n     * Remove a Lens from this session.\n     *\n     * When a Lens is removed, rendering continues if the session is playing. It will just render the session input\n     * directly to the outputs without any image processing.\n     *\n     * @returns Promise resolves when the lens has been successfully removed (i.e. any frames rendered after this point\n     * will use no lens); rejects if removal fails.\n     */\n    async removeLens(): Promise<void> {\n        await new Promise((resolve, reject) =>\n            this.lensCore.clearAllLenses({\n                onSuccess: resolve,\n                onFailure: reject,\n            })\n        );\n\n        this.updateLensContext({ activeLens: undefined });\n    }\n\n    /**\n     * Start/resume session playback – LensCore will begin rendering frames to the output.\n     *\n     * If no source has been set for the session, calling `play()` will update the playing state, but no actual image\n     * processing will occur until `setSource()` is called.\n     *\n     * TODO: The above is currently not true. Right now `playCanvas` is stateful – that is, it only works if\n     * `useMediaElement` has previously succeeded (if this is called *before* `setSource` it will never resolve). We\n     * should remove this constraint so callers don't have to understand the underlying LensCore state machine.\n     *\n     * TODO: There seems to be a bug in the WASM whereby passing Live here does not start rendering any output, and\n     * passing in Capture starts rendering both Capture *and* Live outputs.\n     *\n     * @param target Specify the RenderTarget to begin playback. May be either `'live'`, `'capture'`, or `'all'`.\n     * Default is `'live'`.\n     * @returns Promise resolves when playback has begun (immediately after the first frame has rendered).\n     */\n    @validate\n    async play(@guard(isOptionalRenderTarget) target: RenderTarget = \"live\"): Promise<void> {\n        if (this.playing) return;\n        this.playing = target;\n\n        const type = this.renderTargetToCanvasType(target);\n        return new Promise((resolve, reject) => {\n            this.lensCore.playCanvas({\n                type,\n                onReady: resolve,\n                onFailure: (error: Error) => {\n                    this.playing = false;\n                    reject(error);\n                },\n            });\n        });\n    }\n\n    /**\n     * Pause session playback – LensCore will stop rendering frames to the output.\n     *\n     * @param target Specify the RenderTarget to pause playback. May be either `'live'`, `'capture'`, or `'all'`.\n     * Default is `'all'`.\n     * @returns Promise resolves when playback has stopped.\n     */\n    @validate\n    async pause(@guard(isOptionalRenderTarget) target: RenderTarget = \"all\"): Promise<void> {\n        if (!this.playing) return;\n        const priorPlayingState = this.playing;\n        this.playing = false;\n\n        const type = this.renderTargetToCanvasType(target);\n        return new Promise((resolve, reject) => {\n            this.lensCore.pauseCanvas({\n                type,\n                onSuccess: resolve,\n                onFailure: (error: Error) => {\n                    this.playing = priorPlayingState;\n                    reject(error);\n                },\n            });\n        });\n    }\n\n    /**\n     * Set the media source for this session.\n     *\n     * Sessions may only have one source at a time - if `setSource` is called multiple times, subsequent calls replace\n     * the prior source. Setting the source does not trigger rendering (that’s done by `session.play()`). If the session\n     * is already playing, setting the source will immediately begin rendering the new source.\n     *\n     * @param source Source media (e.g. a webcam stream, video, or some other source of image data), which CameraKit\n     * will process and onto which CameraKit can apply Lenses.\n     * @returns Promise is resolved when the source has successfully be set. If the session was already in the playing\n     * state, the Promise resolves when the first frame from the new source has been rendered. The resolved value is\n     * the {@link CameraKitSource} object attached to the session.\n     */\n    async setSource(source: CameraKitSource): Promise<CameraKitSource>;\n    async setSource(\n        source: MediaStream | HTMLVideoElement,\n        options?: Partial<CameraKitDeviceInfo>\n    ): Promise<CameraKitSource>;\n    @validate\n    async setSource(\n        source: CameraKitSource | MediaStream | HTMLVideoElement,\n        options: Partial<CameraKitDeviceInfo> = {}\n    ): Promise<CameraKitSource> {\n        await this.safelyDetachSource();\n\n        // For convenience, we allow callers to pass in native objects (e.g. MediaStream) as well as CameraKitSource.\n        // Native objects are wrapped in corresponding CameraKitSource classes with default options.\n        const cameraKitSource =\n            source instanceof MediaStream\n                ? createMediaStreamSource(source, options)\n                : source instanceof HTMLVideoElement\n                ? createVideoSource(source, options)\n                : source;\n\n        const priorPlayingState = this.playing;\n        this.playing = false;\n\n        // The source will provide its data to LensCore, and use other LensCore APIs (e.g. setRenderSize,\n        // setInputTransform) to render the source correctly.\n        await cameraKitSource.attach(this.lensCore, (error) => {\n            this.events.dispatchEvent(new TypedCustomEvent(\"error\", error));\n        });\n\n        // If attachment is successful, we'll update our source so that we can detach it later.\n        this.source = cameraKitSource;\n\n        // Finally we'll resume playback, if appropriate.\n        if (priorPlayingState) {\n            await this.play(priorPlayingState);\n        }\n\n        return cameraKitSource;\n    }\n\n    /**\n     * Set an FPS limit.\n     *\n     * This may be useful to reduce CPU/GPU resource usage by CameraKit if, for example, the input\n     * media source has a low FPS – CameraKit would then not try to render more frequently than the source produces\n     * new frames.\n     *\n     * This may also be useful to gracefully degrade performance in situations where lowering FPS is preferable over\n     * alternatives.\n     *\n     * @param fpsLimit A maximum FPS, rendering will not exceed this limit\n     * @returns Promise is resolved when the limit is successfully set.\n     */\n    async setFPSLimit(fpsLimit: number): Promise<void> {\n        // LensCore uses 0 to remove the limit.\n        const fps = fpsLimit < Number.POSITIVE_INFINITY ? fpsLimit : 0;\n        return new Promise((onSuccess, onFailure) => {\n            this.lensCore.setFPSLimit({ fps, onSuccess, onFailure });\n        });\n    }\n\n    /**\n     * Destroy the session.\n     *\n     * The session will become inoperable. Frame processing stops, and any session-scoped resources are freed.\n     */\n    async destroy(): Promise<void> {\n        await this.removeLens();\n        await this.safelyDetachSource();\n        await new Promise<void>((resolve, reject) => {\n            this.lensCore.teardown({ onSuccess: resolve, onFailure: reject });\n        });\n        this.removePageVisibilityHandlers();\n        this.stateTarget.dispatchEvent(new TypedCustomEvent(\"sessionDestroyed\", {}));\n    }\n\n    private renderTargetToCanvasType(t: RenderTarget): CanvasType {\n        return t === \"live\"\n            ? this.lensCore.CanvasType.Preview\n            : t === \"capture\"\n            ? this.lensCore.CanvasType.Capture\n            : this.lensCore.CanvasType.All;\n    }\n\n    private async safelyDetachSource(): Promise<void> {\n        if (this.source) {\n            try {\n                await this.source.detach();\n                // If there's a failure to detach, we will report the error and proceed. Failure to detach may lead to a\n                // memory leak, but it shouldn't prevent us from switching to the new source.\n            } catch (error) {\n                this.events.dispatchEvent(\n                    new TypedCustomEvent(\n                        \"error\",\n                        wrapError(new Error(`Detaching prior source of type ${typeof this.source} failed.`), error)\n                    )\n                );\n            }\n        }\n    }\n\n    private updateLensContext(partialContext: Partial<LensContext>) {\n        Object.assign(this.lensContext, partialContext);\n    }\n}\n\n/**\n * @internal\n */\nexport const cameraKitSessionFactory = Injectable(\n    \"CameraKitSession\",\n    [\n        lensCoreFactory.token,\n        \"eventTarget\",\n        lensAssetsProviderFactory.token,\n        defaultFetchHandlerFactory.token,\n        lensRepositoryFactory.token,\n        lensContextFactory.token,\n        sessionStateEventTargetFactory.token,\n    ] as const,\n    (\n        lensCore: LensCoreModule,\n        eventTarget: TypedEventTarget<CameraKitSessionEvents>,\n        lensAssetsProvider: LensAssetsProvider,\n        fetchHandler: FetchHandler,\n        lensRepository: LensRepository,\n        lensContext: LensContext,\n        stateTarget: SessionStateEventTarget\n    ) =>\n        new CameraKitSession(\n            lensCore,\n            eventTarget,\n            new HandlerChainBuilder(fetchHandler)\n                .map(createRequestStateEmittingHandler<LensDownloadDimensions>())\n                .map(createArrayBufferParsingHandler()).handler,\n            lensAssetsProvider,\n            lensRepository,\n            lensContext,\n            stateTarget\n        )\n);\n","import {\n    isArrayBuffer,\n    isArrayOfType,\n    isFunction,\n    isNumber,\n    isRecord,\n    isString,\n    isTypedArray,\n    isUndefined,\n    predicateRecordValues,\n} from \"../common/typeguards\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { LensCoreModule, Uri, UriCancelRequest, UriRequest, UriResponse } from \"../lens-core-module/generated-types\";\nimport { Lens, toPublicLens } from \"../lens/Lens\";\nimport { LensContext } from \"../session/LensContext\";\n\nconst SEPARATOR = \"://\";\n\nfunction extractSchemeAndRoute(uri: Uri) {\n    const separatorIndex = uri.indexOf(SEPARATOR);\n    const scheme = uri.slice(0, separatorIndex);\n    const route = uri.slice(separatorIndex + SEPARATOR.length);\n    return [scheme, route];\n}\n\nfunction isUri(value: unknown): value is Uri {\n    return isString(value) && value.includes(SEPARATOR);\n}\n\nfunction isUriHandler(value: unknown): value is UriHandler {\n    return (\n        isRecord(value) &&\n        (isUri(value.uri) || isArrayOfType(isUri, value.uri)) &&\n        isFunction(value.handleRequest) &&\n        (isUndefined(value.cancelRequest) || isFunction(value.cancelRequest))\n    );\n}\n\nfunction isUriHandlers(value: unknown): value is UriHandlers {\n    return isArrayOfType(isUriHandler, value);\n}\n\nfunction isUriResponse(value: unknown): value is UriResponse {\n    return (\n        isRecord(value) &&\n        isNumber(value.code) &&\n        isString(value.description) &&\n        isString(value.contentType) &&\n        (isArrayBuffer(value.data) || isTypedArray(value.data)) &&\n        (isUndefined(value.metadata) || predicateRecordValues(isString)(value.metadata))\n    );\n}\n\n/**\n * Provides a way for a lens to call into external services that work under HTTP-like protocol.\n */\nexport interface UriHandler {\n    /**\n     * [scheme]://[route] pattern that this handler processes or an array of patterns.\n     */\n    uri: Uri | Uri[];\n\n    /**\n     * Called to process the provided request.\n     * @param request Lens request.\n     * @param reply A callback function to send response back.\n     * The function can be called none or multiple number of times.\n     * @param lens Lens the request is coming from.\n     */\n    handleRequest(request: UriRequest, reply: (response: UriResponse) => void, lens: Lens): void;\n\n    /**\n     * Called to indicated that URI request initated earlier is cancelled.\n     * @param request Lens request.\n     * @param lens Lens the request is coming from.\n     */\n    cancelRequest?(request: UriCancelRequest, lens: Lens): void;\n}\n\n/**\n * Array of {@link UriHandler} objects.\n */\nexport type UriHandlers = UriHandler[];\n\n/**\n * An extension point for client URI handlers.\n */\nexport const uriHandlersFactory = Injectable(\"UriHandlers\", () => {\n    const uriHandlers: UriHandlers = [];\n    return uriHandlers;\n});\n\n/**\n * Registers URI handlers within LensCore.\n * @internal\n */\nexport function registerUriHandlers(lensCore: LensCoreModule, uriHandlers: UriHandlers, lensContext: LensContext) {\n    if (!isUriHandlers(uriHandlers)) {\n        throw new Error(\"Expected an array of UriHandler objects\");\n    }\n\n    for (const { uri, handleRequest, cancelRequest } of uriHandlers) {\n        const uris = Array.isArray(uri) ? uri : [uri];\n        for (const [scheme, route] of uris.map(extractSchemeAndRoute)) {\n            lensCore.registerUriListener(scheme, route, {\n                handleRequest: (request) => {\n                    const reply = (response: UriResponse) => {\n                        if (!isUriResponse(response)) {\n                            throw new Error(\"Expected UriResponse object\");\n                        }\n                        lensCore.provideUriResponse(request.identifier, response);\n                    };\n\n                    // NOTE: we do not handle any error thrown on an extension side when handleRequest() is called.\n                    // That responsibility is delegated to the extension by design and\n                    // that is exactly what Android and iOS SDKs do.\n                    // NOTE: it is expected that active lens is defined at this moment,\n                    // because this handler is triggered by a lens\n                    handleRequest(request, reply, toPublicLens(lensContext.activeLens!));\n                },\n                // NOTE: it is expected that active lens is defined at this moment,\n                // because this handler is triggered by a lens\n                cancelRequest: (request) => {\n                    if (cancelRequest) {\n                        cancelRequest(request, toPublicLens(lensContext.activeLens!));\n                    }\n                },\n            });\n        }\n    }\n}\n\nexport { Uri, UriCancelRequest, UriRequest, UriResponse } from \"../lens-core-module/generated-types\";\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../events/TypedCustomEvent\";\nimport { TypedEventTarget } from \"../events/TypedEventTarget\";\nimport { AssetValidationFailed } from \"./reporters/reportLensOrAssetValidationFailed\";\nimport { Exception } from \"./reporters/reportException\";\nimport { AssetDownload, LensDownload } from \"./reporters/reportLensAndAssetDownload\";\nimport { LensContentValidationFailed } from \"./reporters/reportLensOrAssetValidationFailed\";\nimport { LensView } from \"./reporters/reportLensView\";\nimport { LensWait } from \"./reporters/reportLensWait\";\nimport { Session } from \"./reporters/reportUserSession\";\nimport { BenchmarkComplete } from \"./reporters/reportBenchmarks\";\n\nexport type CameraKitBootstrapMetricEvents = TypedCustomEvent<BenchmarkComplete[\"name\"], BenchmarkComplete>;\n\nexport type CameraKitSessionMetricEvents =\n    | TypedCustomEvent<LensView[\"name\"], LensView>\n    | TypedCustomEvent<LensWait[\"name\"], LensWait>\n    | TypedCustomEvent<LensDownload[\"name\"], LensDownload>\n    | TypedCustomEvent<AssetDownload[\"name\"], AssetDownload>\n    | TypedCustomEvent<AssetValidationFailed[\"name\"], AssetValidationFailed>\n    | TypedCustomEvent<LensContentValidationFailed[\"name\"], LensContentValidationFailed>\n    | TypedCustomEvent<Session[\"name\"], Session>;\n\nexport type CameraKitMetricEvents =\n    | CameraKitSessionMetricEvents\n    | CameraKitBootstrapMetricEvents\n    | TypedCustomEvent<Exception[\"name\"], Exception>;\n\n/**\n * This event target may be used to listen for any of the metrics events reported by CameraKit.\n */\nexport type MetricsEventTarget = TypedEventTarget<CameraKitMetricEvents>;\n\n/**\n * Any metrics that we wish to emit to applications should be dispatched on this event target.\n *\n * Our business events reporter also listens to this event target, and may report the emitted metrics to our backend.\n *\n * @internal\n */\nexport const metricsEventTargetFactory = Injectable(\n    \"metricsEventTarget\",\n    (): MetricsEventTarget => new TypedEventTarget()\n);\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export const ServerEvent = {\n    fromPartial<I extends Exact<DeepPartial<ServerEvent>, I>>(object: I): ServerEvent {\n        const message = createBaseServerEvent();\n        message.eventName = object.eventName ?? \"\";\n        message.serverTs = object.serverTs ?? 0;\n        message.userId = object.userId ?? \"\";\n        message.userAgent = object.userAgent ?? \"\";\n        message.country = object.country ?? \"\";\n        message.city = object.city ?? \"\";\n        message.region = object.region ?? \"\";\n        message.eventId = object.eventId ?? \"\";\n        message.instanceId = object.instanceId ?? \"\";\n        message.sequenceId = object.sequenceId ?? 0;\n        message.osType = object.osType ?? \"\";\n        message.osVersion = object.osVersion ?? \"\";\n        message.appVersion = object.appVersion ?? \"\";\n        message.appBuild = object.appBuild ?? \"\";\n        message.serverUploadTs = object.serverUploadTs ?? 0;\n        message.eventTime = object.eventTime ?? 0;\n        message.serverReceiptTime = object.serverReceiptTime ?? 0;\n        message.maxSequenceIdOnInstance = object.maxSequenceIdOnInstance ?? 0;\n        message.userGuid = object.userGuid ?? \"\";\n        message.collection = object.collection ?? 0;\n        message.serviceId = object.serviceId ?? \"\";\n        message.appType = object.appType ?? 0;\n        message.eventData =\n            object.eventData !== undefined && object.eventData !== null\n                ? ServerEventData.fromPartial(object.eventData)\n                : undefined;\n        return message;\n    }\n};\n\nexport const ServerEventData = {\n    fromPartial<I extends Exact<DeepPartial<ServerEventData>, I>>(object: I): ServerEventData {\n        const message = createBaseServerEventData();\n        message.cameraKitException =\n            object.cameraKitException !== undefined && object.cameraKitException !== null\n                ? CameraKitException.fromPartial(object.cameraKitException)\n                : undefined;\n        message.cameraKitLensSpin =\n            object.cameraKitLensSpin !== undefined && object.cameraKitLensSpin !== null\n                ? CameraKitLensSpin.fromPartial(object.cameraKitLensSpin)\n                : undefined;\n        message.cameraKitAssetDownload =\n            object.cameraKitAssetDownload !== undefined && object.cameraKitAssetDownload !== null\n                ? CameraKitAssetDownload.fromPartial(object.cameraKitAssetDownload)\n                : undefined;\n        message.cameraKitLensContentValidationFailed =\n            object.cameraKitLensContentValidationFailed !== undefined && object.cameraKitLensContentValidationFailed !== null\n                ? CameraKitLensContentValidationFailed.fromPartial(object.cameraKitLensContentValidationFailed)\n                : undefined;\n        message.cameraKitLensDownload =\n            object.cameraKitLensDownload !== undefined && object.cameraKitLensDownload !== null\n                ? CameraKitLensDownload.fromPartial(object.cameraKitLensDownload)\n                : undefined;\n        message.cameraKitAssetValidationFailed =\n            object.cameraKitAssetValidationFailed !== undefined && object.cameraKitAssetValidationFailed !== null\n                ? CameraKitAssetValidationFailed.fromPartial(object.cameraKitAssetValidationFailed)\n                : undefined;\n        message.cameraKitSession =\n            object.cameraKitSession !== undefined && object.cameraKitSession !== null\n                ? CameraKitSession.fromPartial(object.cameraKitSession)\n                : undefined;\n        message.cameraKitWebLensSwipe =\n            object.cameraKitWebLensSwipe !== undefined && object.cameraKitWebLensSwipe !== null\n                ? CameraKitWebLensSwipe.fromPartial(object.cameraKitWebLensSwipe)\n                : undefined;\n        message.cameraKitWebBenchmarkComplete =\n            object.cameraKitWebBenchmarkComplete !== undefined && object.cameraKitWebBenchmarkComplete !== null\n                ? CameraKitWebBenchmarkComplete.fromPartial(object.cameraKitWebBenchmarkComplete)\n                : undefined;\n        return message;\n    }\n};\n\nfunction createBaseServerEventData(): ServerEventData {\n    return {\n        cameraKitException: undefined,\n        cameraKitLensSpin: undefined,\n        cameraKitAssetDownload: undefined,\n        cameraKitLensContentValidationFailed: undefined,\n        cameraKitLensDownload: undefined,\n        cameraKitAssetValidationFailed: undefined,\n        cameraKitSession: undefined,\n        cameraKitWebLensSwipe: undefined,\n        cameraKitWebBenchmarkComplete: undefined\n    };\n}\n\nfunction createBaseServerEvent(): ServerEvent {\n    return {\n        eventName: \"\",\n        serverTs: 0,\n        userId: \"\",\n        userAgent: \"\",\n        country: \"\",\n        city: \"\",\n        region: \"\",\n        eventId: \"\",\n        instanceId: \"\",\n        sequenceId: 0,\n        osType: \"\",\n        osVersion: \"\",\n        appVersion: \"\",\n        appBuild: \"\",\n        serverUploadTs: 0,\n        eventTime: 0,\n        serverReceiptTime: 0,\n        maxSequenceIdOnInstance: 0,\n        userGuid: \"\",\n        collection: 0,\n        serviceId: \"\",\n        appType: 0,\n        eventData: undefined\n    };\n}\n\nexport interface ServerEvent {\n    eventName: string;\n    serverTs: number;\n    userId: string;\n    userAgent: string;\n    country: string;\n    city: string;\n    region: string;\n    eventId: string;\n    instanceId: string;\n    sequenceId: number;\n    osType: string;\n    osVersion: string;\n    appVersion: string;\n    appBuild: string;\n    serverUploadTs: number;\n    eventTime: number;\n    serverReceiptTime: number;\n    maxSequenceIdOnInstance: number;\n    userGuid: string;\n    collection: Collection;\n    serviceId: string;\n    appType: AppType;\n    eventData: ServerEventData | undefined;\n}\n\nexport interface ServerEventData {\n    cameraKitException: CameraKitException | undefined;\n    cameraKitLensSpin: CameraKitLensSpin | undefined;\n    cameraKitAssetDownload: CameraKitAssetDownload | undefined;\n    cameraKitLensContentValidationFailed: CameraKitLensContentValidationFailed | undefined;\n    cameraKitLensDownload: CameraKitLensDownload | undefined;\n    cameraKitAssetValidationFailed: CameraKitAssetValidationFailed | undefined;\n    cameraKitSession: CameraKitSession | undefined;\n    cameraKitWebLensSwipe: CameraKitWebLensSwipe | undefined;\n    cameraKitWebBenchmarkComplete: CameraKitWebBenchmarkComplete | undefined;\n}\n\nexport enum AppType {\n    IOS_NATIVE = 0,\n    IOS_WEB_DESKTOP = 1,\n    IOS_WEB_MOBILE = 2,\n    ANDROID_NATIVE = 3,\n    ANDROID_WEB_DESKTOP = 4,\n    ANDROID_WEB_MOBILE = 5,\n    OSX_WEB_DESKTOP = 6,\n    OSX_WEB_MOBILE = 7,\n    WINDOWS_WEB_DESKTOP = 8,\n    WINDOWS_WEB_MOBILE = 9,\n    LINUX_WEB_DESKTOP = 10,\n    LINUX_WEB_MOBILE = 11,\n    LENSSTUDIO = 12,\n    SNAPCAMERA = 13,\n    WEB_DESKTOP = 14,\n    WEB_MOBILE = 15,\n    UNRECOGNIZED = -1\n}\n\nexport enum Collection {\n    COLLECTION_UNUSED = 0,\n    GAE = 1,\n    GCE_M = 2,\n    GCE_S = 3,\n    GCE_T = 4,\n    GKE_M = 5,\n    GKE_S = 6,\n    GKE_T = 7,\n    LOCAL = 8,\n    GCE_ST = 9,\n    GKE_ST = 10,\n    GCE_C = 11,\n    GCE_SC = 12,\n    GCE_TC = 13,\n    GCE_TSC = 14,\n    GKE_C = 15,\n    GKE_SC = 16,\n    GKE_TC = 17,\n    GKE_TSC = 18,\n    GKE_W = 19,\n    GKE_WT = 20,\n    GKE_WC = 21,\n    GKE_WSC = 22,\n    UNRECOGNIZED = -1\n}\n\nexport const CameraKitLensSpin = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensSpin>, I>>(object: I): CameraKitLensSpin {\n        const message = createBaseCameraKitLensSpin();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.viewTimeSec = object.viewTimeSec ?? 0;\n        return message;\n    }\n};\n\nfunction createBaseCameraKitLensSpin(): CameraKitLensSpin {\n    return { cameraKitEventBase: undefined, lensId: \"\", viewTimeSec: 0 };\n}\n\nexport interface CameraKitLensSpin {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    viewTimeSec: number;\n}\n\nexport const CameraKitWebLensSwipe = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitWebLensSwipe>, I>>(object: I): CameraKitWebLensSwipe {\n        const message = createBaseCameraKitWebLensSwipe();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.performanceCluster = object.performanceCluster ?? 0;\n        message.webglRendererInfo = object.webglRendererInfo ?? \"\";\n        message.lensId = object.lensId ?? \"\";\n        message.lensFrameProcessingTimeMsAvg = object.lensFrameProcessingTimeMsAvg ?? 0;\n        message.lensFrameProcessingTimeMsStd = object.lensFrameProcessingTimeMsStd ?? 0;\n        message.viewTimeSec = object.viewTimeSec ?? 0;\n        message.recordingTimeSec = object.recordingTimeSec ?? 0;\n        message.applyDelaySec = object.applyDelaySec ?? 0;\n        message.avgFps = object.avgFps ?? 0;\n        message.isLensFirstWithinDay = object.isLensFirstWithinDay ?? false;\n        message.isLensFirstWithinMonth = object.isLensFirstWithinMonth ?? false;\n        return message;\n    }\n};\n\nfunction createBaseCameraKitWebLensSwipe(): CameraKitWebLensSwipe {\n    return {\n        cameraKitEventBase: undefined,\n        performanceCluster: 0,\n        webglRendererInfo: \"\",\n        lensId: \"\",\n        lensFrameProcessingTimeMsAvg: 0,\n        lensFrameProcessingTimeMsStd: 0,\n        viewTimeSec: 0,\n        recordingTimeSec: 0,\n        applyDelaySec: 0,\n        avgFps: 0,\n        isLensFirstWithinDay: false,\n        isLensFirstWithinMonth: false\n    };\n}\n\nexport interface CameraKitWebLensSwipe {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    performanceCluster: number;\n    webglRendererInfo: string;\n    lensId: string;\n    lensFrameProcessingTimeMsAvg: number;\n    lensFrameProcessingTimeMsStd: number;\n    viewTimeSec: number;\n    recordingTimeSec: number;\n    applyDelaySec: number;\n    avgFps: number;\n    isLensFirstWithinDay: boolean;\n    isLensFirstWithinMonth: boolean;\n}\n\nexport const CameraKitLensDownload = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensDownload>, I>>(object: I): CameraKitLensDownload {\n        const message = createBaseCameraKitLensDownload();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.automaticDownload = object.automaticDownload ?? false;\n        message.downloadTimeSec = object.downloadTimeSec ?? 0;\n        message.sizeByte = object.sizeByte ?? 0;\n        return message;\n    }\n};\n\nfunction createBaseCameraKitLensDownload(): CameraKitLensDownload {\n    return { cameraKitEventBase: undefined, lensId: \"\", automaticDownload: false, downloadTimeSec: 0, sizeByte: 0 };\n}\n\nexport interface CameraKitLensDownload {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    automaticDownload: boolean;\n    downloadTimeSec: number;\n    sizeByte: number;\n}\n\nexport const CameraKitAssetDownload = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitAssetDownload>, I>>(object: I): CameraKitAssetDownload {\n        const message = createBaseCameraKitAssetDownload();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.automaticDownload = object.automaticDownload ?? false;\n        message.downloadTimeSec = object.downloadTimeSec ?? 0;\n        message.sizeByte = object.sizeByte ?? 0;\n        message.assetId = object.assetId ?? \"\";\n        return message;\n    }\n};\n\nfunction createBaseCameraKitAssetDownload(): CameraKitAssetDownload {\n    return { cameraKitEventBase: undefined, automaticDownload: false, downloadTimeSec: 0, sizeByte: 0, assetId: \"\" };\n}\n\nexport interface CameraKitAssetDownload {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    automaticDownload: boolean;\n    downloadTimeSec: number;\n    sizeByte: number;\n    assetId: string;\n}\n\nexport const CameraKitException = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitException>, I>>(object: I): CameraKitException {\n        const message = createBaseCameraKitException();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        message.type = object.type ?? \"\";\n        message.reason = object.reason ?? \"\";\n        return message;\n    }\n};\n\nfunction createBaseCameraKitException(): CameraKitException {\n    return { cameraKitEventBase: undefined, lensId: \"\", type: \"\", reason: \"\" };\n}\n\nexport interface CameraKitException {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n    type: string;\n    reason: string;\n}\n\nexport const CameraKitSession = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitSession>, I>>(object: I): CameraKitSession {\n        const message = createBaseCameraKitSession();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.dailySessionBucket = object.dailySessionBucket ?? 0;\n        message.isFirstWithinMonth = object.isFirstWithinMonth ?? false;\n        message.day = object.day ?? 0;\n        message.month = object.month ?? 0;\n        message.year = object.year ?? 0;\n        return message;\n    }\n};\n\nfunction createBaseCameraKitSession(): CameraKitSession {\n    return { cameraKitEventBase: undefined, dailySessionBucket: 0, isFirstWithinMonth: false, day: 0, month: 0, year: 0 };\n}\n\nexport interface CameraKitSession {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    dailySessionBucket: DailySessionBucket;\n    isFirstWithinMonth: boolean;\n    day: number;\n    month: number;\n    year: number;\n}\n\nexport enum DailySessionBucket {\n    NO_SESSION_BUCKET = 0,\n    ONE_SESSION = 1,\n    TWO_SESSION = 2,\n    THREE_SESSION = 3,\n    FOUR_SESSION = 4,\n    FIVE_SESSION = 5,\n    SIX_SESSION = 6,\n    SEVEN_SESSION = 7,\n    EIGHT_SESSION = 8,\n    NINE_SESSION = 9,\n    TEN_OR_MORE_SESSION = 10,\n    UNRECOGNIZED = -1\n}\n\nexport const CameraKitLensContentValidationFailed = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitLensContentValidationFailed>, I>>(object: I): CameraKitLensContentValidationFailed {\n        const message = createBaseCameraKitLensContentValidationFailed();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.lensId = object.lensId ?? \"\";\n        return message;\n    }\n};\n\nfunction createBaseCameraKitLensContentValidationFailed(): CameraKitLensContentValidationFailed {\n    return { cameraKitEventBase: undefined, lensId: \"\" };\n}\n\nexport interface CameraKitLensContentValidationFailed {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    lensId: string;\n}\n\nexport const CameraKitAssetValidationFailed = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitAssetValidationFailed>, I>>(object: I): CameraKitAssetValidationFailed {\n        const message = createBaseCameraKitAssetValidationFailed();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.assetId = object.assetId ?? \"\";\n        return message;\n    }\n};\n\nfunction createBaseCameraKitAssetValidationFailed(): CameraKitAssetValidationFailed {\n    return { cameraKitEventBase: undefined, assetId: \"\" };\n}\n\nexport interface CameraKitAssetValidationFailed {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    assetId: string;\n}\n\nexport const CameraKitWebBenchmarkComplete = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitWebBenchmarkComplete>, I>>(object: I): CameraKitWebBenchmarkComplete {\n        const message = createBaseCameraKitWebBenchmarkComplete();\n        message.cameraKitEventBase =\n            object.cameraKitEventBase !== undefined && object.cameraKitEventBase !== null\n                ? CameraKitEventBase.fromPartial(object.cameraKitEventBase)\n                : undefined;\n        message.benchmarkName = object.benchmarkName ?? \"\";\n        message.benchmarkValue = object.benchmarkValue ?? 0;\n        message.performanceCluster = object.performanceCluster ?? 0;\n        message.webglRendererInfo = object.webglRendererInfo ?? \"\";\n        return message;\n    }\n};\n\nexport const CameraKitEventBase = {\n    fromPartial<I extends Exact<DeepPartial<CameraKitEventBase>, I>>(object: I): CameraKitEventBase {\n        const message = createBaseCameraKitEventBase();\n        message.kitEventBase =\n            object.kitEventBase !== undefined && object.kitEventBase !== null\n                ? KitEventBase.fromPartial(object.kitEventBase)\n                : undefined;\n        message.deviceCluster = object.deviceCluster ?? 0;\n        message.cameraKitVersion = object.cameraKitVersion ?? \"\";\n        message.lensCoreVersion = object.lensCoreVersion ?? \"\";\n        message.deviceModel = object.deviceModel ?? \"\";\n        message.cameraKitVariant = object.cameraKitVariant ?? 0;\n        message.cameraKitFlavor = object.cameraKitFlavor ?? 0;\n        message.appId = object.appId ?? \"\";\n        message.deviceConnectivity = object.deviceConnectivity ?? 0;\n        message.sessionId = object.sessionId ?? \"\";\n        message.appVendorUuid = object.appVendorUuid ?? \"\";\n        message.rankingRequestId = object.rankingRequestId ?? \"\";\n        return message;\n    }\n};\n\nexport const KitEventBase = {\n    fromPartial<I extends Exact<DeepPartial<KitEventBase>, I>>(object: I): KitEventBase {\n        const message = createBaseKitEventBase();\n        message.oauthClientId = object.oauthClientId ?? \"\";\n        message.locale = object.locale ?? \"\";\n        message.kitUserAgent = object.kitUserAgent ?? \"\";\n        message.ipAddress = object.ipAddress ?? \"\";\n        message.osMinorVersion = object.osMinorVersion ?? \"\";\n        message.kitVariant = object.kitVariant ?? 0;\n        message.kitVariantVersion = object.kitVariantVersion ?? \"\";\n        message.kitClientTimestampMillis = object.kitClientTimestampMillis ?? 0;\n        message.clientSequenceId = object.clientSequenceId ?? 0;\n        message.maxClientSequenceIdOnInstance = object.maxClientSequenceIdOnInstance ?? 0;\n        message.targetArchitecture = object.targetArchitecture ?? \"\";\n        message.runningWithDebuggerAttached = object.runningWithDebuggerAttached ?? false;\n        message.runningInTests = object.runningInTests ?? false;\n        message.runningInSimulator = object.runningInSimulator ?? false;\n        message.isAppPrerelease = object.isAppPrerelease ?? false;\n        message.kitAppId = object.kitAppId ?? \"\";\n        message.kitSessionId = object.kitSessionId ?? \"\";\n        message.kitPluginType = object.kitPluginType ?? 0;\n        message.isFromReactNativePlugin = object.isFromReactNativePlugin ?? false;\n        return message;\n    }\n};\n\nfunction createBaseKitEventBase(): KitEventBase {\n    return {\n        oauthClientId: \"\",\n        locale: \"\",\n        kitUserAgent: \"\",\n        ipAddress: \"\",\n        osMinorVersion: \"\",\n        kitVariant: 0,\n        kitVariantVersion: \"\",\n        kitClientTimestampMillis: 0,\n        clientSequenceId: 0,\n        maxClientSequenceIdOnInstance: 0,\n        targetArchitecture: \"\",\n        runningWithDebuggerAttached: false,\n        runningInTests: false,\n        runningInSimulator: false,\n        isAppPrerelease: false,\n        kitAppId: \"\",\n        kitSessionId: \"\",\n        kitPluginType: 0,\n        isFromReactNativePlugin: false\n    };\n}\n\nfunction createBaseCameraKitEventBase(): CameraKitEventBase {\n    return {\n        kitEventBase: undefined,\n        deviceCluster: 0,\n        cameraKitVersion: \"\",\n        lensCoreVersion: \"\",\n        deviceModel: \"\",\n        cameraKitVariant: 0,\n        cameraKitFlavor: 0,\n        appId: \"\",\n        deviceConnectivity: 0,\n        sessionId: \"\",\n        appVendorUuid: \"\",\n        rankingRequestId: \"\"\n    };\n}\n\nfunction createBaseCameraKitWebBenchmarkComplete(): CameraKitWebBenchmarkComplete {\n    return {\n        cameraKitEventBase: undefined,\n        benchmarkName: \"\",\n        benchmarkValue: 0,\n        performanceCluster: 0,\n        webglRendererInfo: \"\"\n    };\n}\n\nexport interface CameraKitWebBenchmarkComplete {\n    cameraKitEventBase: CameraKitEventBase | undefined;\n    benchmarkName: string;\n    benchmarkValue: number;\n    performanceCluster: number;\n    webglRendererInfo: string;\n}\n\nexport interface CameraKitEventBase {\n    kitEventBase: KitEventBase | undefined;\n    deviceCluster: number;\n    cameraKitVersion: string;\n    lensCoreVersion: string;\n    deviceModel: string;\n    cameraKitVariant: CameraKitVariant;\n    cameraKitFlavor: CameraKitFlavor;\n    appId: string;\n    deviceConnectivity: CameraKitConnectivityType;\n    sessionId: string;\n    appVendorUuid: string;\n    rankingRequestId: string;\n}\n\nexport enum CameraKitConnectivityType {\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNKNOWN = 0,\n    CAMERA_KIT_CONNECTIVITY_TYPE_WIFI = 1,\n    CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE = 2,\n    CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE = 3,\n    CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH = 4,\n    UNRECOGNIZED = -1\n}\n\nexport enum CameraKitFlavor {\n    CAMERA_KIT_FLAVOR_UNKNOWN = 0,\n    CAMERA_KIT_FLAVOR_DEBUG = 1,\n    CAMERA_KIT_FLAVOR_RELEASE = 2,\n    UNRECOGNIZED = -1\n}\n\nexport enum CameraKitVariant {\n    CAMERA_KIT_VARIANT_UNKNOWN = 0,\n    CAMERA_KIT_VARIANT_PARTNER = 1,\n    CAMERA_KIT_VARIANT_PUBLIC = 2,\n    UNRECOGNIZED = -1\n}\n\nexport interface KitEventBase {\n    oauthClientId: string;\n    locale: string;\n    kitUserAgent: string;\n    ipAddress: string;\n    osMinorVersion: string;\n    kitVariant: KitType;\n    kitVariantVersion: string;\n    kitClientTimestampMillis: number;\n    clientSequenceId: number;\n    maxClientSequenceIdOnInstance: number;\n    targetArchitecture: string;\n    runningWithDebuggerAttached: boolean;\n    runningInTests: boolean;\n    runningInSimulator: boolean;\n    isAppPrerelease: boolean;\n    kitAppId: string;\n    kitSessionId: string;\n    kitPluginType: KitPluginType;\n    isFromReactNativePlugin: boolean;\n}\n\nexport enum KitPluginType {\n    NO_PLUGIN = 0,\n    UNITY = 1,\n    UNRECOGNIZED = -1\n}\n\nexport enum KitType {\n    UNKNOWN_KIT_TYPE = 0,\n    BITMOJI_KIT = 1,\n    CREATIVE_KIT = 2,\n    LOGIN_KIT = 3,\n    STORY_KIT = 4,\n    CAMERA_KIT = 5,\n    SHOP_KIT = 6,\n    EULA_KIT = 7,\n    PAYMENTS_KIT = 8,\n    INVITE_KIT = 9,\n    CAMERA_KIT_WEB = 10,\n    UNRECOGNIZED = -1\n}\n\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\n\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n","import { onPageHidden } from \"../common/pageVisibility\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\n\ninterface MappableRequest<T> {\n    map: () => T | Promise<T>;\n    next: (request: T) => Promise<void>;\n    reject: (reason: unknown) => void;\n}\n\n/**\n * Map from one request type to another, potentially asynchronously.\n *\n * **NOTE:** If `maxMapConcurrency` is set to some finite number, and more requests are handled than are allowed to\n * be concurrently mapped, the waiting requests will be placed into a unbounded buffer. If, for example, requests are\n * handled with high frequency, `maxMapConcurrency` is low, and the `map` function returns a long-running Promise, this\n * buffer could use a large amount of memory. Keep this in mind when using this handler.\n *\n * @param map Transform each request, may be sync or async.\n * @param maxMapConcurrency If the `map` function is async, it will be invoked at most this number of times\n * concurrently. Setting this to 1 could be useful if it's important for `map` to be called in serial.\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createMappingHandler = <Req, MappedReq, Res, Meta extends RequestMetadata>(\n    map: (request: Req) => MappedReq | Promise<MappedReq>,\n    maxMapConcurrency: number = Number.POSITIVE_INFINITY,\n    flushOnPageHidden = true\n): ChainableHandler<Req, Res, MappedReq, Res, Meta> => {\n    const buffer: MappableRequest<MappedReq>[] = [];\n    let mapConcurrency = 0;\n\n    const processRequest = async (request: MappableRequest<MappedReq>) => {\n        try {\n            mapConcurrency++;\n            const mapped = request.map();\n            // We want to make sure that if the mapping operation is not async, we don't introduce asynchronicity here\n            // (which unfortunately happens even if you `await` a non-Promise value). This is important so that e.g.\n            // handlers which run when the page is terminated can send requests synchronously, since the browser may\n            // not pick up any async handlers registered to run on the following event loop.\n            if (mapped instanceof Promise) request.next(await mapped);\n            else if (mapped) request.next(mapped);\n        } catch (error) {\n            request.reject(error);\n        } finally {\n            mapConcurrency--;\n        }\n        while (buffer.length > 0 && mapConcurrency < maxMapConcurrency) {\n            // Safety: we just checked for `buffer.length > 0`, so the shifted value will never be undefined.\n            processRequest(buffer.shift()!);\n        }\n    };\n\n    // This may indicate that the page is being unloaded, in which case we may want to flush any buffered requests\n    // regardless of our max concurrency – otherwise those requests will be lost when the page terminates.\n    if (flushOnPageHidden) {\n        onPageHidden(() => {\n            while (buffer.length > 0) processRequest(buffer.shift()!);\n        });\n    }\n\n    return (next: Handler<MappedReq, Res, Meta>) => (request: Req, metadata?: Meta) => {\n        return new Promise<Res>((resolve, reject) => {\n            const mappableRequest: MappableRequest<MappedReq> = {\n                map: () => map(request),\n                next: (mappedRequest) => next(mappedRequest, metadata).then(resolve).catch(reject),\n                reject,\n            };\n            if (mapConcurrency < maxMapConcurrency) processRequest(mappableRequest);\n            else buffer.push(mappableRequest);\n        });\n    };\n};\n","import { isDuringVisibilityTransition, onPageHidden } from \"../common/pageVisibility\";\nimport { ChainableHandler, Handler, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createMappingHandler } from \"./mappingHandler\";\n\nexport interface BatchingHandlerOptions<Req, BatchReq> {\n    batchReduce: (batch: BatchReq | undefined, req: Req) => BatchReq | Promise<BatchReq>;\n    isBatchComplete: (batch: BatchReq) => boolean;\n    maxBatchAge?: number;\n    flushOnPageHidden?: boolean;\n}\n\n/**\n * Accumulate requests into batches, which are then sent to the next handler in the chain. Batches are sent when either:\n * - the given `isBatchComplete` function returns true, closing the current batch and sending it down the chain.\n * - an optional `maxBatchAge` time has elapsed since the first request in the batch was received.\n * - the page terminates.\n *\n * When handling a request, the Promise returned will resolve when that request has been successfully added to the\n * current batch – **NOT** when that batch has been successfully processed by the rest of the handler chain.\n *\n * The `next` handler in the chain will receive the batch and should handle any errors arising from further processing\n * on the batch (e.g. sending it to a server).\n *\n * **Note:** This handler does not support aborting handled requests via AbortSignal.\n *\n * @param options\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createBatchingHandler = <Req, BatchReq, BatchRes, Meta extends RequestMetadata>({\n    batchReduce,\n    isBatchComplete,\n    maxBatchAge,\n    flushOnPageHidden,\n}: BatchingHandlerOptions<Req, BatchReq>): ChainableHandler<Req, void, BatchReq, BatchRes, Meta> => {\n    // Flush batches when the page is hidden by default.\n    const doFlushOnPageHidden = flushOnPageHidden ?? true;\n    // TODO: this should just be `number`, but we're picking up NodeJS types (@types/node) when building, so setTimeout\n    // gets a different return type than what it should have in the browser. We should build without NodeJS types, but\n    // that will require some fixes across the codebase.\n    let batchTimeout: ReturnType<typeof setTimeout>;\n    let currentBatch: BatchReq | undefined = undefined;\n    let clearOnHidden = () => {};\n\n    const reducingHandler = createMappingHandler<Req, BatchReq, void, Meta>(async (request) => {\n        currentBatch = await batchReduce(currentBatch, request);\n        return currentBatch;\n    }, 1);\n\n    const batchAndSend = (next: Handler<BatchReq, BatchRes, Meta>, request?: Req, metadata?: Meta) => {\n        const batch = request ? batchReduce(currentBatch, request) : currentBatch;\n        if (!batch) return;\n\n        // `next` should handle its own errors – that is, the batchingHandler is meant to be placed in a handler chain\n        // prior to any error logging, retrying, etc. handlers.\n        const complete =\n            batch instanceof Promise\n                ? batch.then((b) => next(b, metadata)).catch(() => {})\n                : next(batch, metadata).catch(() => {});\n\n        currentBatch = undefined;\n        clearTimeout(batchTimeout);\n        clearOnHidden();\n\n        return complete;\n    };\n\n    return (next) => async (request, metadata) => {\n        // Requests may be made while the page is transitioning to hidden – for example, the page is being unloaded and\n        // we're reporting final metrics. In this case, we need to skip batching and synchronously call `next` so that\n        // the request is not lost.\n        if (isDuringVisibilityTransition(\"hidden\") && doFlushOnPageHidden) {\n            await batchAndSend(next, request, metadata);\n            return;\n        }\n\n        // If this is the first request in a batch, we need to set up some callbacks to flush the batch when certain\n        // events occur:\n        //\n        // - maxBatchAge time passes.\n        // - page visibility transitions to hidden (which could indicate the page is being unloaded).\n        //\n        if (currentBatch === undefined) {\n            const sendBatch = () => batchAndSend(next, undefined, metadata);\n            if (maxBatchAge !== undefined) batchTimeout = setTimeout(sendBatch, maxBatchAge);\n            if (doFlushOnPageHidden) clearOnHidden = onPageHidden(sendBatch);\n        }\n\n        const handle = reducingHandler(async () => {\n            if (!currentBatch) return;\n            if (!isBatchComplete(currentBatch)) return;\n            await batchAndSend(next, undefined, metadata);\n        });\n\n        return handle(request, metadata);\n    };\n};\n","import { isDuringVisibilityTransition } from \"../common/pageVisibility\";\nimport { ChainableHandler, RequestMetadata } from \"./HandlerChainBuilder\";\nimport { createMappingHandler } from \"./mappingHandler\";\n\nconst delay = (duration: number) => new Promise<void>((resolve) => setTimeout(resolve, duration));\n\n/**\n * Limit the rate at which requests are passed to the next handler in the chain.\n *\n * During any page transitions to \"hidden\" – possibly indicating the page is about to terminate – requests will not be\n * rate limited, to ensure that they are not lost.\n *\n * TODO: If there are requests in the queue waiting to be sent when the page transitions to \"hidden,\" these will not\n * be immediately sent. This means there still is an edge case in which a request may be lost on page termination. This\n * can be fixed with changes to `createMappingHandler`.\n *\n * **NOTE:** Under the hood, requests that come in faster than the set `duration` are placed in an unbounded buffer.\n * If many requests are made quickly and `duration` is long, this could result in high memory usage. Keep this in mind\n * when using this handler.\n *\n * @param duration In milliseconds. Requests will be passed to the next handler in the chain no faster than this. That\n * is, if `duration` is `1000`, the next handler will be called at most once per second.\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createRateLimitingHandler = <Req, Res, Meta extends RequestMetadata>(\n    duration: number,\n    flushOnPageHidden = true\n): ChainableHandler<Req, Res, Req, Res, Meta> => {\n    let mostRecentSendTime: number | undefined = undefined;\n\n    const mappingHandler = createMappingHandler<Req, Req, Res, Meta>(\n        async (request) => {\n            if (mostRecentSendTime !== undefined) {\n                const millisUntilNextSend = duration - (Date.now() - mostRecentSendTime);\n                if (millisUntilNextSend > 0) await delay(millisUntilNextSend);\n            }\n            mostRecentSendTime = Date.now();\n            return request;\n        },\n        1,\n        flushOnPageHidden\n    );\n\n    return (next) => (request, metadata) => {\n        // Requests may be made while the page is transitioning to hidden – for example, the page is being unloaded and\n        // we're reporting final metrics. In this case, we need to skip rate limiting and synchronously call `next`\n        // so that the request is not lost.\n        if (isDuringVisibilityTransition(\"hidden\") && flushOnPageHidden) return next(request, metadata);\n        return mappingHandler(next)(request, metadata);\n    };\n};\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"../handlers/cameraKitServiceFetchHandlerFactory\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createRateLimitingHandler } from \"../handlers/rateLimitingHandler\";\n\nconst METRIC_REQUEST_RATE_LIMIT_MS = 1000; // send at most one metric request per second.\n\n/**\n * @internal\n */\nexport const metricsHandlerFactory = Injectable(\n    \"metricsHandler\",\n    [cameraKitServiceFetchHandlerFactory.token] as const,\n    (fetchHandler: FetchHandler) => {\n        return new HandlerChainBuilder(fetchHandler).map(createRateLimitingHandler(METRIC_REQUEST_RATE_LIMIT_MS))\n            .handler;\n    }\n);\n","import { v4 } from \"uuid\";\nimport { cameraKitUserAgent as userAgent } from \"../common/cameraKitUserAgent\";\nimport { entries } from \"../common/entries\";\nimport { Injectable } from \"../dependency-injection/Injectable\";\nimport { EventOfType } from \"../events/TypedCustomEvent\";\nimport { EventsFromTarget } from \"../events/TypedEventTarget\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { createBatchingHandler } from \"../handlers/batchingHandler\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createMappingHandler } from \"../handlers/mappingHandler\";\nimport * as blizzard from \"../generated-proto/blizzard/cameraKitEvents\";\nimport { metricsHandlerFactory } from \"./metricsHandler\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"./metricsEventTarget\";\n\ntype Nullables<T> = { [K in keyof T]-?: undefined extends T[K] ? K : never }[keyof T];\ntype UndefinedToOptional<T> = Partial<Pick<T, Nullables<T>>> & Omit<T, Nullables<T>>;\n\ntype CameraKitBusinessEvents = EventsFromTarget<MetricsEventTarget>[\"detail\"];\n\ntype MakeBlizzardEvent<E> = Omit<E, \"name\"> & { cameraKitEventBase: blizzard.CameraKitEventBase };\n\ntype CreateEventData<EventType extends EventsFromTarget<MetricsEventTarget>[\"type\"]> = (\n    event: MakeBlizzardEvent<EventOfType<EventType, EventsFromTarget<MetricsEventTarget>>[\"detail\"]>\n) => [string, UndefinedToOptional<blizzard.ServerEventData>];\n\ntype EventHandlers = {\n    [EventType in EventsFromTarget<MetricsEventTarget>[\"type\"]]: CreateEventData<EventType>;\n};\n\n/**\n * Translate between an external metric name, which is exposed to SDK users, and an internal Blizzard event name,\n * property name, and constructor.\n *\n * It is very important that we do this, since the naming of these internal business events are unintuitive and will\n * not make sense to SDK users.\n *\n * For a full list of business events (using their internal names), see:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n */\ntype CameraKitBusinessEventMap = {\n    assetDownload: MakeBusinessEvent<blizzard.CameraKitAssetDownload>;\n    assetValidationFailed: MakeBusinessEvent<blizzard.CameraKitAssetValidationFailed>;\n    benchmarkComplete: MakeBusinessEvent<blizzard.CameraKitWebBenchmarkComplete>;\n    exception: MakeBusinessEvent<blizzard.CameraKitException>;\n    lensDownload: MakeBusinessEvent<blizzard.CameraKitLensDownload>;\n    lensView: MakeBusinessEvent<blizzard.CameraKitWebLensSwipe>;\n    lensWait: MakeBusinessEvent<blizzard.CameraKitLensSpin>;\n    lensContentValidationFailed: MakeBusinessEvent<blizzard.CameraKitLensContentValidationFailed>;\n    session: MakeBusinessEvent<blizzard.CameraKitSession>;\n};\n\n/**\n * This interface is defined in the CameraKit pb_schema proto definition – but the generated TypeScript does not handle\n * the `Any` type properly. It does not conform to the Proto3 canonical JSON mapping scheme, as defined here:\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * To solve this (since we only need one message from the CameraKit schema), we'll just manually define the correct\n * interface here.\n */\ninterface SetBusinessEventsRequest {\n    batchEvents: {\n        \"@type\": \"com.snapchat.analytics.blizzard.ServerEventBatch\";\n        serverEvents: blizzard.ServerEvent[];\n    };\n}\n\n// CameraKit's prod metrics endpoint.\n// See: https://github.sc-corp.net/Snapchat/pb_schema/blob/2a966db/proto/camera_kit/v3/service.proto#L133\nconst BUSINESS_EVENTS_ENDPOINT = \"https://api-kit.snapchat.com/com.snap.camerakit.v3.Metrics/metrics/business_events\";\n\n// These values are (currently) arbitrarily selected.\n// TODO: Once we have gathered a sufficient quantity of metrics data, we should tune these numbers to ensure we're\n// operating with the right cost vs. staying under the `keepalive` request body limit of 64 kibibytes.\nconst BUSINESS_EVENT_BATCH_MAX_SIZE = 100;\nconst BUSINESS_EVENT_BATCH_MAX_AGE_MS = 5000;\n\nfunction listenAndReport(\n    metricsEventTarget: MetricsEventTarget,\n    metricsHandler: FetchHandler,\n    eventHandlers: EventHandlers\n): void {\n    const sessionId = v4();\n\n    const handler = new HandlerChainBuilder(metricsHandler)\n        .map(\n            createMappingHandler((events: blizzard.ServerEvent[]) => {\n                const body: SetBusinessEventsRequest = {\n                    batchEvents: {\n                        \"@type\": \"com.snapchat.analytics.blizzard.ServerEventBatch\",\n                        serverEvents: events,\n                    },\n                };\n                return new Request(BUSINESS_EVENTS_ENDPOINT, {\n                    method: \"POST\",\n                    body: JSON.stringify(body),\n                    credentials: \"include\",\n\n                    // Setting this to true makes fetch behave like `Navigator.sendBeacon` – that is, the request\n                    // will still be made even if the page terminates.\n                    // https://developer.mozilla.org/en-US/docs/Web/API/fetch\n                    keepalive: true,\n                });\n            })\n        )\n        .map(\n            createBatchingHandler({\n                batchReduce: (\n                    previousBundle: blizzard.ServerEvent[] | undefined,\n                    businessEvent: blizzard.ServerEvent\n                ) => {\n                    const bundle = previousBundle ?? [];\n                    bundle.push(businessEvent);\n                    return bundle;\n                },\n                isBatchComplete: (bundle) => bundle.length >= BUSINESS_EVENT_BATCH_MAX_SIZE,\n                maxBatchAge: BUSINESS_EVENT_BATCH_MAX_AGE_MS,\n            })\n        ).handler;\n\n    const makeBlizzardEvent = <E extends CameraKitBusinessEvents>(event: E): MakeBlizzardEvent<E> => {\n        return {\n            ...event,\n            cameraKitEventBase: blizzard.CameraKitEventBase.fromPartial({\n                kitEventBase: blizzard.KitEventBase.fromPartial({\n                    locale: userAgent.locale,\n                    kitVariant: blizzard.KitType.CAMERA_KIT_WEB,\n                    kitVariantVersion: userAgent.sdkShortVersion,\n                    kitClientTimestampMillis: Date.now(),\n                }),\n                deviceCluster: 0,\n                cameraKitVersion: userAgent.sdkLongVersion,\n                lensCoreVersion: userAgent.lensCoreVersion,\n                deviceModel: userAgent.deviceModel,\n                cameraKitVariant: blizzard.CameraKitVariant.CAMERA_KIT_VARIANT_PARTNER,\n                cameraKitFlavor: blizzard.CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG,\n                appId: userAgent.appId,\n                deviceConnectivity: blizzard.CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI,\n                sessionId: sessionId,\n            }),\n        };\n    };\n\n    const sendServerEvent = (\n        eventName: string,\n        eventData: UndefinedToOptional<blizzard.ServerEventData>\n    ): Promise<void> => {\n        return handler(\n            blizzard.ServerEvent.fromPartial({\n                eventName,\n                osType: userAgent.osType,\n                osVersion: userAgent.osVersion,\n                maxSequenceIdOnInstance: 0,\n                sequenceId: 0,\n                eventData,\n            })\n        );\n    };\n\n    entries(eventHandlers).forEach(([eventType, createEventData]) => {\n        metricsEventTarget.addEventListener(eventType, ({ detail }) => {\n            // Safety: When iterating over object keys in a mapped type, we lose the association between the key type\n            // and the value type – at each iteration, the key type is a union of all possible keys and the value type\n            // is a union of all possible values. When the value is a function with an argument, and that argument\n            // depends on the key type (which is a union), the contravariance of the argument type means that the union\n            // becomes an intersection. In our case here, this means the compiler expects each argument to contain all\n            // properties from all event types. The cast is safe because the mapped `EventHandlers` type ensures that\n            // `createEventData` takes an argument of the type corresponding its key's `eventType`'s event detail.\n            const [eventName, eventData] = createEventData(makeBlizzardEvent(detail) as any);\n            sendServerEvent(eventName, eventData);\n        });\n    });\n}\n\nexport type MakeBusinessEvent<E> = Omit<\n    {\n        [K in keyof E]: Exclude<E[K], undefined> extends Record<keyof any, any>\n            ? MakeBusinessEvent<Exclude<E[K], undefined>>\n            : E[K];\n    },\n    \"cameraKitEventBase\"\n>;\n\nexport type MakeTaggedBusinessEvent<K extends keyof CameraKitBusinessEventMap> = {\n    name: K;\n} & CameraKitBusinessEventMap[K];\n\nexport const businessEventsReporterFactory = Injectable(\n    \"businessEventsReporter\",\n    [metricsEventTargetFactory.token, metricsHandlerFactory.token] as const,\n    (metricsEventTarget: MetricsEventTarget, metricsHandler: FetchHandler) => {\n        /**\n         * This defines a mapping from a business event's external name (the name we document in public API docs), to\n         * its internal representation as a Blizzard ServerEvent.\n         *\n         * It is important that we do this, since the naming of these internal business events are unintuitive and will\n         * not make sense to SDK users.\n         *\n         * To specify the internal event, we must give the ServerEvent's eventName, the specific property name which\n         * contains the event data (this is a \"oneof\" property on ServerEvent), and use the correct event type's\n         * `fromPartial` method (this is generated from the ServerEvent protobuf).\n         *\n         * These events are documented here:\n         * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n         *\n         * They are defined in code here:\n         * https://github.sc-corp.net/Snapchat/snapchat/tree/master/blizzard/schema/blizzard-schema/\n         *  codeGen/src/main/java/com/snapchat/analytics/schema/events/cameraKit\n         */\n        listenAndReport(metricsEventTarget, metricsHandler, {\n            assetDownload: (event) => [\n                \"CAMERA_KIT_ASSET_DOWNLOAD\",\n                { cameraKitAssetDownload: blizzard.CameraKitAssetDownload.fromPartial(event) },\n            ],\n            assetValidationFailed: (event) => [\n                \"CAMERA_KIT_ASSET_VALIDATION_FAILED\",\n                { cameraKitAssetValidationFailed: blizzard.CameraKitAssetValidationFailed.fromPartial(event) },\n            ],\n            benchmarkComplete: (event) => [\n                \"CAMERA_KIT_WEB_BENCHMARK_COMPLETE\",\n                { cameraKitWebBenchmarkComplete: blizzard.CameraKitWebBenchmarkComplete.fromPartial(event) },\n            ],\n            exception: (event) => [\n                \"CAMERA_KIT_EXCEPTION\",\n                { cameraKitException: blizzard.CameraKitException.fromPartial(event) },\n            ],\n            lensDownload: (event) => [\n                \"CAMERA_KIT_LENS_DOWNLOAD\",\n                { cameraKitLensDownload: blizzard.CameraKitLensDownload.fromPartial(event) },\n            ],\n            lensView: (event) => [\n                \"CAMERA_KIT_WEB_LENS_SWIPE\",\n                { cameraKitWebLensSwipe: blizzard.CameraKitWebLensSwipe.fromPartial(event) },\n            ],\n            lensWait: (event) => [\n                \"CAMERA_KIT_LENS_SPIN\",\n                { cameraKitLensSpin: blizzard.CameraKitLensSpin.fromPartial(event) },\n            ],\n            lensContentValidationFailed: (event) => [\n                \"CAMERA_KIT_LENS_CONTENT_VALIDATION_FAILED\",\n                {\n                    cameraKitLensContentValidationFailed: blizzard.CameraKitLensContentValidationFailed.fromPartial(\n                        event\n                    ),\n                },\n            ],\n            session: (event) => [\n                \"CAMERA_KIT_SESSION\",\n                { cameraKitSession: blizzard.CameraKitSession.fromPartial(event) },\n            ],\n        });\n    }\n);\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\n\nexport const protobufPackage = \"com.snap.camerakit.v3\";\n\n/** Operational metric */\nexport interface OperationalMetric {\n  /** Metric name */\n  name: string;\n  /** Metrics timestamp */\n  timestamp: Date | undefined;\n  metric?:\n    | { $case: \"count\"; count: number }\n    | { $case: \"latencyMillis\"; latencyMillis: number }\n    | { $case: \"histogram\"; histogram: number };\n}\n\n/** Bundle of the operational metrics */\nexport interface OperationalMetricsBundle {\n  /** List of operational metrics */\n  metrics: OperationalMetric[];\n}\n\nfunction createBaseOperationalMetric(): OperationalMetric {\n  return { name: \"\", timestamp: undefined, metric: undefined };\n}\n\nexport const OperationalMetric = {\n  encode(message: OperationalMetric, writer: Writer = Writer.create()): Writer {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.timestamp !== undefined) {\n      Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(18).fork()).ldelim();\n    }\n    if (message.metric?.$case === \"count\") {\n      writer.uint32(24).uint64(message.metric.count);\n    }\n    if (message.metric?.$case === \"latencyMillis\") {\n      writer.uint32(32).uint64(message.metric.latencyMillis);\n    }\n    if (message.metric?.$case === \"histogram\") {\n      writer.uint32(40).int64(message.metric.histogram);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): OperationalMetric {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseOperationalMetric();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string();\n          break;\n        case 2:\n          message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.metric = { $case: \"count\", count: longToNumber(reader.uint64() as Long) };\n          break;\n        case 4:\n          message.metric = { $case: \"latencyMillis\", latencyMillis: longToNumber(reader.uint64() as Long) };\n          break;\n        case 5:\n          message.metric = { $case: \"histogram\", histogram: longToNumber(reader.int64() as Long) };\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): OperationalMetric {\n    return {\n      name: isSet(object.name) ? String(object.name) : \"\",\n      timestamp: isSet(object.timestamp) ? fromJsonTimestamp(object.timestamp) : undefined,\n      metric: isSet(object.count)\n        ? { $case: \"count\", count: Number(object.count) }\n        : isSet(object.latencyMillis)\n        ? { $case: \"latencyMillis\", latencyMillis: Number(object.latencyMillis) }\n        : isSet(object.histogram)\n        ? { $case: \"histogram\", histogram: Number(object.histogram) }\n        : undefined,\n    };\n  },\n\n  toJSON(message: OperationalMetric): unknown {\n    const obj: any = {};\n    message.name !== undefined && (obj.name = message.name);\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp.toISOString());\n    message.metric?.$case === \"count\" && (obj.count = Math.round(message.metric?.count));\n    message.metric?.$case === \"latencyMillis\" && (obj.latencyMillis = Math.round(message.metric?.latencyMillis));\n    message.metric?.$case === \"histogram\" && (obj.histogram = Math.round(message.metric?.histogram));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<OperationalMetric>, I>>(object: I): OperationalMetric {\n    const message = createBaseOperationalMetric();\n    message.name = object.name ?? \"\";\n    message.timestamp = object.timestamp ?? undefined;\n    if (object.metric?.$case === \"count\" && object.metric?.count !== undefined && object.metric?.count !== null) {\n      message.metric = { $case: \"count\", count: object.metric.count };\n    }\n    if (\n      object.metric?.$case === \"latencyMillis\" &&\n      object.metric?.latencyMillis !== undefined &&\n      object.metric?.latencyMillis !== null\n    ) {\n      message.metric = { $case: \"latencyMillis\", latencyMillis: object.metric.latencyMillis };\n    }\n    if (\n      object.metric?.$case === \"histogram\" &&\n      object.metric?.histogram !== undefined &&\n      object.metric?.histogram !== null\n    ) {\n      message.metric = { $case: \"histogram\", histogram: object.metric.histogram };\n    }\n    return message;\n  },\n};\n\nfunction createBaseOperationalMetricsBundle(): OperationalMetricsBundle {\n  return { metrics: [] };\n}\n\nexport const OperationalMetricsBundle = {\n  encode(message: OperationalMetricsBundle, writer: Writer = Writer.create()): Writer {\n    for (const v of message.metrics) {\n      OperationalMetric.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): OperationalMetricsBundle {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseOperationalMetricsBundle();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metrics.push(OperationalMetric.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): OperationalMetricsBundle {\n    return {\n      metrics: Array.isArray(object?.metrics) ? object.metrics.map((e: any) => OperationalMetric.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: OperationalMetricsBundle): unknown {\n    const obj: any = {};\n    if (message.metrics) {\n      obj.metrics = message.metrics.map((e) => (e ? OperationalMetric.toJSON(e) : undefined));\n    } else {\n      obj.metrics = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<OperationalMetricsBundle>, I>>(object: I): OperationalMetricsBundle {\n    const message = createBaseOperationalMetricsBundle();\n    message.metrics = object.metrics?.map((e) => OperationalMetric.fromPartial(e)) || [];\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = date.getTime() / 1_000;\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = t.seconds * 1_000;\n  millis += t.nanos / 1_000_000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\n\nexport const protobufPackage = \"com.snap.camerakit.v3\";\n\n/** Camera kit flavor to be used in to Blizzard event */\nexport enum CameraKitFlavor {\n  /** CAMERA_KIT_FLAVOR_UNSET - Unset or unknown flavor */\n  CAMERA_KIT_FLAVOR_UNSET = \"CAMERA_KIT_FLAVOR_UNSET\",\n  /** CAMERA_KIT_FLAVOR_DEBUG - Debug flavor */\n  CAMERA_KIT_FLAVOR_DEBUG = \"CAMERA_KIT_FLAVOR_DEBUG\",\n  /** CAMERA_KIT_FLAVOR_RELEASE - Release flavor */\n  CAMERA_KIT_FLAVOR_RELEASE = \"CAMERA_KIT_FLAVOR_RELEASE\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function cameraKitFlavorFromJSON(object: any): CameraKitFlavor {\n  switch (object) {\n    case 0:\n    case \"CAMERA_KIT_FLAVOR_UNSET\":\n      return CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET;\n    case 1:\n    case \"CAMERA_KIT_FLAVOR_DEBUG\":\n      return CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG;\n    case 2:\n    case \"CAMERA_KIT_FLAVOR_RELEASE\":\n      return CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return CameraKitFlavor.UNRECOGNIZED;\n  }\n}\n\nexport function cameraKitFlavorToJSON(object: CameraKitFlavor): string {\n  switch (object) {\n    case CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET:\n      return \"CAMERA_KIT_FLAVOR_UNSET\";\n    case CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG:\n      return \"CAMERA_KIT_FLAVOR_DEBUG\";\n    case CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE:\n      return \"CAMERA_KIT_FLAVOR_RELEASE\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function cameraKitFlavorToNumber(object: CameraKitFlavor): number {\n  switch (object) {\n    case CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET:\n      return 0;\n    case CameraKitFlavor.CAMERA_KIT_FLAVOR_DEBUG:\n      return 1;\n    case CameraKitFlavor.CAMERA_KIT_FLAVOR_RELEASE:\n      return 2;\n    default:\n      return 0;\n  }\n}\n\n/** Camera kit connectivity type to be used in Blizzard event */\nexport enum CameraKitConnectivityType {\n  /** CAMERA_KIT_CONNECTIVITY_TYPE_UNSET - Unset or unknown connectivity type */\n  CAMERA_KIT_CONNECTIVITY_TYPE_UNSET = \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\",\n  /** CAMERA_KIT_CONNECTIVITY_TYPE_WIFI - Wifi connectivity type */\n  CAMERA_KIT_CONNECTIVITY_TYPE_WIFI = \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\",\n  /** CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE - Mobile connectivity type */\n  CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE = \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\",\n  /** CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE - Unreachable connectivity type */\n  CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE = \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\",\n  /** CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH - Bluetooth connectivity type */\n  CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH = \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\nexport function cameraKitConnectivityTypeFromJSON(object: any): CameraKitConnectivityType {\n  switch (object) {\n    case 0:\n    case \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\":\n      return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET;\n    case 1:\n    case \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\":\n      return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI;\n    case 2:\n    case \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\":\n      return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE;\n    case 3:\n    case \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\":\n      return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE;\n    case 4:\n    case \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\":\n      return CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return CameraKitConnectivityType.UNRECOGNIZED;\n  }\n}\n\nexport function cameraKitConnectivityTypeToJSON(object: CameraKitConnectivityType): string {\n  switch (object) {\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET:\n      return \"CAMERA_KIT_CONNECTIVITY_TYPE_UNSET\";\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI:\n      return \"CAMERA_KIT_CONNECTIVITY_TYPE_WIFI\";\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE:\n      return \"CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE\";\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE:\n      return \"CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE\";\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH:\n      return \"CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH\";\n    default:\n      return \"UNKNOWN\";\n  }\n}\n\nexport function cameraKitConnectivityTypeToNumber(object: CameraKitConnectivityType): number {\n  switch (object) {\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET:\n      return 0;\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_WIFI:\n      return 1;\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_MOBILE:\n      return 2;\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNREACHABLE:\n      return 3;\n    case CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_BLUETOOTH:\n      return 4;\n    default:\n      return 0;\n  }\n}\n\n/** Extension base data */\nexport interface ExtensionEventBase {\n  /** CameraKit Extension name */\n  extensionName: string;\n  /** Full CameraKit Extension version */\n  extensionVersion: string;\n  /** Device cluster value. Android clients will receive it from COF/Configs endpoint. iOS will use manual mapping */\n  deviceCluster: number;\n  /** Full CameraKit SDK version (e.g. 0.2.0-12adb50.38) Major, Minor, Patch, Build version metadata */\n  cameraKitVersion: string;\n  /** Version of LensCore (e.g. 77) */\n  lensCoreVersion: string;\n  /** Model of the device (e.g. SM 955U) */\n  deviceModel: string;\n  /** Flavor of CameraKit: debug or release */\n  cameraKitFlavor: CameraKitFlavor;\n  /** BundleID/package of the app */\n  appId: string;\n  /** Device connectivity: wifi, mobile, unreachable, bluetooth */\n  deviceConnectivity: CameraKitConnectivityType;\n  /** Random UUID generated each time session created */\n  sessionId: string;\n}\n\nfunction createBaseExtensionEventBase(): ExtensionEventBase {\n  return {\n    extensionName: \"\",\n    extensionVersion: \"\",\n    deviceCluster: 0,\n    cameraKitVersion: \"\",\n    lensCoreVersion: \"\",\n    deviceModel: \"\",\n    cameraKitFlavor: CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET,\n    appId: \"\",\n    deviceConnectivity: CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET,\n    sessionId: \"\",\n  };\n}\n\nexport const ExtensionEventBase = {\n  encode(message: ExtensionEventBase, writer: Writer = Writer.create()): Writer {\n    if (message.extensionName !== \"\") {\n      writer.uint32(10).string(message.extensionName);\n    }\n    if (message.extensionVersion !== \"\") {\n      writer.uint32(18).string(message.extensionVersion);\n    }\n    if (message.deviceCluster !== 0) {\n      writer.uint32(24).int64(message.deviceCluster);\n    }\n    if (message.cameraKitVersion !== \"\") {\n      writer.uint32(34).string(message.cameraKitVersion);\n    }\n    if (message.lensCoreVersion !== \"\") {\n      writer.uint32(42).string(message.lensCoreVersion);\n    }\n    if (message.deviceModel !== \"\") {\n      writer.uint32(50).string(message.deviceModel);\n    }\n    if (message.cameraKitFlavor !== CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET) {\n      writer.uint32(56).int32(cameraKitFlavorToNumber(message.cameraKitFlavor));\n    }\n    if (message.appId !== \"\") {\n      writer.uint32(66).string(message.appId);\n    }\n    if (message.deviceConnectivity !== CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET) {\n      writer.uint32(72).int32(cameraKitConnectivityTypeToNumber(message.deviceConnectivity));\n    }\n    if (message.sessionId !== \"\") {\n      writer.uint32(82).string(message.sessionId);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): ExtensionEventBase {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExtensionEventBase();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.extensionName = reader.string();\n          break;\n        case 2:\n          message.extensionVersion = reader.string();\n          break;\n        case 3:\n          message.deviceCluster = longToNumber(reader.int64() as Long);\n          break;\n        case 4:\n          message.cameraKitVersion = reader.string();\n          break;\n        case 5:\n          message.lensCoreVersion = reader.string();\n          break;\n        case 6:\n          message.deviceModel = reader.string();\n          break;\n        case 7:\n          message.cameraKitFlavor = cameraKitFlavorFromJSON(reader.int32());\n          break;\n        case 8:\n          message.appId = reader.string();\n          break;\n        case 9:\n          message.deviceConnectivity = cameraKitConnectivityTypeFromJSON(reader.int32());\n          break;\n        case 10:\n          message.sessionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ExtensionEventBase {\n    return {\n      extensionName: isSet(object.extensionName) ? String(object.extensionName) : \"\",\n      extensionVersion: isSet(object.extensionVersion) ? String(object.extensionVersion) : \"\",\n      deviceCluster: isSet(object.deviceCluster) ? Number(object.deviceCluster) : 0,\n      cameraKitVersion: isSet(object.cameraKitVersion) ? String(object.cameraKitVersion) : \"\",\n      lensCoreVersion: isSet(object.lensCoreVersion) ? String(object.lensCoreVersion) : \"\",\n      deviceModel: isSet(object.deviceModel) ? String(object.deviceModel) : \"\",\n      cameraKitFlavor: isSet(object.cameraKitFlavor)\n        ? cameraKitFlavorFromJSON(object.cameraKitFlavor)\n        : CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET,\n      appId: isSet(object.appId) ? String(object.appId) : \"\",\n      deviceConnectivity: isSet(object.deviceConnectivity)\n        ? cameraKitConnectivityTypeFromJSON(object.deviceConnectivity)\n        : CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET,\n      sessionId: isSet(object.sessionId) ? String(object.sessionId) : \"\",\n    };\n  },\n\n  toJSON(message: ExtensionEventBase): unknown {\n    const obj: any = {};\n    message.extensionName !== undefined && (obj.extensionName = message.extensionName);\n    message.extensionVersion !== undefined && (obj.extensionVersion = message.extensionVersion);\n    message.deviceCluster !== undefined && (obj.deviceCluster = Math.round(message.deviceCluster));\n    message.cameraKitVersion !== undefined && (obj.cameraKitVersion = message.cameraKitVersion);\n    message.lensCoreVersion !== undefined && (obj.lensCoreVersion = message.lensCoreVersion);\n    message.deviceModel !== undefined && (obj.deviceModel = message.deviceModel);\n    message.cameraKitFlavor !== undefined && (obj.cameraKitFlavor = cameraKitFlavorToJSON(message.cameraKitFlavor));\n    message.appId !== undefined && (obj.appId = message.appId);\n    message.deviceConnectivity !== undefined &&\n      (obj.deviceConnectivity = cameraKitConnectivityTypeToJSON(message.deviceConnectivity));\n    message.sessionId !== undefined && (obj.sessionId = message.sessionId);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ExtensionEventBase>, I>>(object: I): ExtensionEventBase {\n    const message = createBaseExtensionEventBase();\n    message.extensionName = object.extensionName ?? \"\";\n    message.extensionVersion = object.extensionVersion ?? \"\";\n    message.deviceCluster = object.deviceCluster ?? 0;\n    message.cameraKitVersion = object.cameraKitVersion ?? \"\";\n    message.lensCoreVersion = object.lensCoreVersion ?? \"\";\n    message.deviceModel = object.deviceModel ?? \"\";\n    message.cameraKitFlavor = object.cameraKitFlavor ?? CameraKitFlavor.CAMERA_KIT_FLAVOR_UNSET;\n    message.appId = object.appId ?? \"\";\n    message.deviceConnectivity =\n      object.deviceConnectivity ?? CameraKitConnectivityType.CAMERA_KIT_CONNECTIVITY_TYPE_UNSET;\n    message.sessionId = object.sessionId ?? \"\";\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Lens } from \"../../camera_kit/v3/lens\";\nimport { OperationalMetricsBundle } from \"../../camera_kit/v3/operational_metrics\";\nimport { Any } from \"../../google/protobuf/any\";\nimport { ExtensionEventBase } from \"../../camera_kit/v3/business_events\";\n\nexport const protobufPackage = \"com.snap.camerakit.v3\";\n\nexport interface GetGroupRequest {\n  /** Group ID */\n  id: string;\n}\n\nexport interface GetGroupResponse {\n  /** Group ID */\n  id: string;\n  /** List of Lenses that belongs to the group */\n  lenses: Lens[];\n}\n\nexport interface GetGroupLensRequest {\n  /** Lens ID */\n  lensId: string;\n  /** Group ID */\n  groupId: string;\n}\n\nexport interface GetGroupLensResponse {\n  /** Lens in the requested Group context */\n  lens: Lens | undefined;\n}\n\nexport interface GetPlaceholderConfigRequest {}\n\nexport interface GetPlaceholderConfigResponse {\n  /** Map of config values */\n  configs: { [key: string]: string };\n}\n\nexport interface GetPlaceholderConfigResponse_ConfigsEntry {\n  key: string;\n  value: string;\n}\n\nexport interface SetOperationalMetricsRequest {\n  /** Metrics bundle */\n  metrics: OperationalMetricsBundle | undefined;\n}\n\nexport interface SetOperationalMetricsResponse {}\n\nexport interface SetBusinessEventsRequest {\n  /**\n   * batch_events is expected to be always ServerEventBatch proto\n   * (https://github.sc-corp.net/Snapchat/snapchat/blob/master/blizzard/schema/blizzard-schema/protoGen/src/main/proto/event.proto#L21)\n   * We use `google.protobuf.Any` instead of real proto because Blizzard protos are located in another repo.\n   * All auxiliary fields such as `server_upload_ts` or `max_sequence_id_on_instance` may be omitted.\n   * Those fields will be overwritten on the backend.\n   */\n  batchEvents: Any | undefined;\n}\n\nexport interface SetBusinessEventsResponse {}\n\nexport interface SetExtensionBusinessEventsRequest {\n  /**\n   * events are expected to be a list of ServerEvent proto\n   * (https://github.sc-corp.net/Snapchat/snapchat/blob/master/blizzard/schema/blizzard-schema/protoGen/src/main/proto/event.proto#L1835)\n   * We use `google.protobuf.Any` instead of real proto because SDK will not have exact event types for extensions and\n   * Blizzard protos are located in another repo.\n   */\n  events: Any[];\n  /** Extension event base values will be merged into events on the server side prior to Blizzard upload */\n  extensionEventBase: ExtensionEventBase | undefined;\n}\n\nexport interface SetExtensionBusinessEventsResponse {}\n\nfunction createBaseGetGroupRequest(): GetGroupRequest {\n  return { id: \"\" };\n}\n\nexport const GetGroupRequest = {\n  encode(message: GetGroupRequest, writer: Writer = Writer.create()): Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetGroupRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetGroupRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetGroupRequest {\n    return {\n      id: isSet(object.id) ? String(object.id) : \"\",\n    };\n  },\n\n  toJSON(message: GetGroupRequest): unknown {\n    const obj: any = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetGroupRequest>, I>>(object: I): GetGroupRequest {\n    const message = createBaseGetGroupRequest();\n    message.id = object.id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetGroupResponse(): GetGroupResponse {\n  return { id: \"\", lenses: [] };\n}\n\nexport const GetGroupResponse = {\n  encode(message: GetGroupResponse, writer: Writer = Writer.create()): Writer {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    for (const v of message.lenses) {\n      Lens.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetGroupResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetGroupResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.lenses.push(Lens.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetGroupResponse {\n    return {\n      id: isSet(object.id) ? String(object.id) : \"\",\n      lenses: Array.isArray(object?.lenses) ? object.lenses.map((e: any) => Lens.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: GetGroupResponse): unknown {\n    const obj: any = {};\n    message.id !== undefined && (obj.id = message.id);\n    if (message.lenses) {\n      obj.lenses = message.lenses.map((e) => (e ? Lens.toJSON(e) : undefined));\n    } else {\n      obj.lenses = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetGroupResponse>, I>>(object: I): GetGroupResponse {\n    const message = createBaseGetGroupResponse();\n    message.id = object.id ?? \"\";\n    message.lenses = object.lenses?.map((e) => Lens.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGetGroupLensRequest(): GetGroupLensRequest {\n  return { lensId: \"\", groupId: \"\" };\n}\n\nexport const GetGroupLensRequest = {\n  encode(message: GetGroupLensRequest, writer: Writer = Writer.create()): Writer {\n    if (message.lensId !== \"\") {\n      writer.uint32(10).string(message.lensId);\n    }\n    if (message.groupId !== \"\") {\n      writer.uint32(18).string(message.groupId);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetGroupLensRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetGroupLensRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.lensId = reader.string();\n          break;\n        case 2:\n          message.groupId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetGroupLensRequest {\n    return {\n      lensId: isSet(object.lensId) ? String(object.lensId) : \"\",\n      groupId: isSet(object.groupId) ? String(object.groupId) : \"\",\n    };\n  },\n\n  toJSON(message: GetGroupLensRequest): unknown {\n    const obj: any = {};\n    message.lensId !== undefined && (obj.lensId = message.lensId);\n    message.groupId !== undefined && (obj.groupId = message.groupId);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetGroupLensRequest>, I>>(object: I): GetGroupLensRequest {\n    const message = createBaseGetGroupLensRequest();\n    message.lensId = object.lensId ?? \"\";\n    message.groupId = object.groupId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetGroupLensResponse(): GetGroupLensResponse {\n  return { lens: undefined };\n}\n\nexport const GetGroupLensResponse = {\n  encode(message: GetGroupLensResponse, writer: Writer = Writer.create()): Writer {\n    if (message.lens !== undefined) {\n      Lens.encode(message.lens, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetGroupLensResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetGroupLensResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.lens = Lens.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetGroupLensResponse {\n    return {\n      lens: isSet(object.lens) ? Lens.fromJSON(object.lens) : undefined,\n    };\n  },\n\n  toJSON(message: GetGroupLensResponse): unknown {\n    const obj: any = {};\n    message.lens !== undefined && (obj.lens = message.lens ? Lens.toJSON(message.lens) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetGroupLensResponse>, I>>(object: I): GetGroupLensResponse {\n    const message = createBaseGetGroupLensResponse();\n    message.lens = object.lens !== undefined && object.lens !== null ? Lens.fromPartial(object.lens) : undefined;\n    return message;\n  },\n};\n\nfunction createBaseGetPlaceholderConfigRequest(): GetPlaceholderConfigRequest {\n  return {};\n}\n\nexport const GetPlaceholderConfigRequest = {\n  encode(_: GetPlaceholderConfigRequest, writer: Writer = Writer.create()): Writer {\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetPlaceholderConfigRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetPlaceholderConfigRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): GetPlaceholderConfigRequest {\n    return {};\n  },\n\n  toJSON(_: GetPlaceholderConfigRequest): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigRequest>, I>>(_: I): GetPlaceholderConfigRequest {\n    const message = createBaseGetPlaceholderConfigRequest();\n    return message;\n  },\n};\n\nfunction createBaseGetPlaceholderConfigResponse(): GetPlaceholderConfigResponse {\n  return { configs: {} };\n}\n\nexport const GetPlaceholderConfigResponse = {\n  encode(message: GetPlaceholderConfigResponse, writer: Writer = Writer.create()): Writer {\n    Object.entries(message.configs).forEach(([key, value]) => {\n      GetPlaceholderConfigResponse_ConfigsEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).ldelim();\n    });\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetPlaceholderConfigResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          const entry1 = GetPlaceholderConfigResponse_ConfigsEntry.decode(reader, reader.uint32());\n          if (entry1.value !== undefined) {\n            message.configs[entry1.key] = entry1.value;\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetPlaceholderConfigResponse {\n    return {\n      configs: isObject(object.configs)\n        ? Object.entries(object.configs).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n            acc[key] = String(value);\n            return acc;\n          }, {})\n        : {},\n    };\n  },\n\n  toJSON(message: GetPlaceholderConfigResponse): unknown {\n    const obj: any = {};\n    obj.configs = {};\n    if (message.configs) {\n      Object.entries(message.configs).forEach(([k, v]) => {\n        obj.configs[k] = v;\n      });\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigResponse>, I>>(object: I): GetPlaceholderConfigResponse {\n    const message = createBaseGetPlaceholderConfigResponse();\n    message.configs = Object.entries(object.configs ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {\n      if (value !== undefined) {\n        acc[key] = String(value);\n      }\n      return acc;\n    }, {});\n    return message;\n  },\n};\n\nfunction createBaseGetPlaceholderConfigResponse_ConfigsEntry(): GetPlaceholderConfigResponse_ConfigsEntry {\n  return { key: \"\", value: \"\" };\n}\n\nexport const GetPlaceholderConfigResponse_ConfigsEntry = {\n  encode(message: GetPlaceholderConfigResponse_ConfigsEntry, writer: Writer = Writer.create()): Writer {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.value !== \"\") {\n      writer.uint32(18).string(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse_ConfigsEntry {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetPlaceholderConfigResponse_ConfigsEntry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n        case 2:\n          message.value = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetPlaceholderConfigResponse_ConfigsEntry {\n    return {\n      key: isSet(object.key) ? String(object.key) : \"\",\n      value: isSet(object.value) ? String(object.value) : \"\",\n    };\n  },\n\n  toJSON(message: GetPlaceholderConfigResponse_ConfigsEntry): unknown {\n    const obj: any = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.value !== undefined && (obj.value = message.value);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<GetPlaceholderConfigResponse_ConfigsEntry>, I>>(\n    object: I\n  ): GetPlaceholderConfigResponse_ConfigsEntry {\n    const message = createBaseGetPlaceholderConfigResponse_ConfigsEntry();\n    message.key = object.key ?? \"\";\n    message.value = object.value ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseSetOperationalMetricsRequest(): SetOperationalMetricsRequest {\n  return { metrics: undefined };\n}\n\nexport const SetOperationalMetricsRequest = {\n  encode(message: SetOperationalMetricsRequest, writer: Writer = Writer.create()): Writer {\n    if (message.metrics !== undefined) {\n      OperationalMetricsBundle.encode(message.metrics, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SetOperationalMetricsRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetOperationalMetricsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.metrics = OperationalMetricsBundle.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SetOperationalMetricsRequest {\n    return {\n      metrics: isSet(object.metrics) ? OperationalMetricsBundle.fromJSON(object.metrics) : undefined,\n    };\n  },\n\n  toJSON(message: SetOperationalMetricsRequest): unknown {\n    const obj: any = {};\n    message.metrics !== undefined &&\n      (obj.metrics = message.metrics ? OperationalMetricsBundle.toJSON(message.metrics) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SetOperationalMetricsRequest>, I>>(object: I): SetOperationalMetricsRequest {\n    const message = createBaseSetOperationalMetricsRequest();\n    message.metrics =\n      object.metrics !== undefined && object.metrics !== null\n        ? OperationalMetricsBundle.fromPartial(object.metrics)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSetOperationalMetricsResponse(): SetOperationalMetricsResponse {\n  return {};\n}\n\nexport const SetOperationalMetricsResponse = {\n  encode(_: SetOperationalMetricsResponse, writer: Writer = Writer.create()): Writer {\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SetOperationalMetricsResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetOperationalMetricsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): SetOperationalMetricsResponse {\n    return {};\n  },\n\n  toJSON(_: SetOperationalMetricsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SetOperationalMetricsResponse>, I>>(_: I): SetOperationalMetricsResponse {\n    const message = createBaseSetOperationalMetricsResponse();\n    return message;\n  },\n};\n\nfunction createBaseSetBusinessEventsRequest(): SetBusinessEventsRequest {\n  return { batchEvents: undefined };\n}\n\nexport const SetBusinessEventsRequest = {\n  encode(message: SetBusinessEventsRequest, writer: Writer = Writer.create()): Writer {\n    if (message.batchEvents !== undefined) {\n      Any.encode(message.batchEvents, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SetBusinessEventsRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetBusinessEventsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.batchEvents = Any.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SetBusinessEventsRequest {\n    return {\n      batchEvents: isSet(object.batchEvents) ? Any.fromJSON(object.batchEvents) : undefined,\n    };\n  },\n\n  toJSON(message: SetBusinessEventsRequest): unknown {\n    const obj: any = {};\n    message.batchEvents !== undefined &&\n      (obj.batchEvents = message.batchEvents ? Any.toJSON(message.batchEvents) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SetBusinessEventsRequest>, I>>(object: I): SetBusinessEventsRequest {\n    const message = createBaseSetBusinessEventsRequest();\n    message.batchEvents =\n      object.batchEvents !== undefined && object.batchEvents !== null ? Any.fromPartial(object.batchEvents) : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSetBusinessEventsResponse(): SetBusinessEventsResponse {\n  return {};\n}\n\nexport const SetBusinessEventsResponse = {\n  encode(_: SetBusinessEventsResponse, writer: Writer = Writer.create()): Writer {\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SetBusinessEventsResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetBusinessEventsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): SetBusinessEventsResponse {\n    return {};\n  },\n\n  toJSON(_: SetBusinessEventsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SetBusinessEventsResponse>, I>>(_: I): SetBusinessEventsResponse {\n    const message = createBaseSetBusinessEventsResponse();\n    return message;\n  },\n};\n\nfunction createBaseSetExtensionBusinessEventsRequest(): SetExtensionBusinessEventsRequest {\n  return { events: [], extensionEventBase: undefined };\n}\n\nexport const SetExtensionBusinessEventsRequest = {\n  encode(message: SetExtensionBusinessEventsRequest, writer: Writer = Writer.create()): Writer {\n    for (const v of message.events) {\n      Any.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.extensionEventBase !== undefined) {\n      ExtensionEventBase.encode(message.extensionEventBase, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SetExtensionBusinessEventsRequest {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetExtensionBusinessEventsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.events.push(Any.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.extensionEventBase = ExtensionEventBase.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SetExtensionBusinessEventsRequest {\n    return {\n      events: Array.isArray(object?.events) ? object.events.map((e: any) => Any.fromJSON(e)) : [],\n      extensionEventBase: isSet(object.extensionEventBase)\n        ? ExtensionEventBase.fromJSON(object.extensionEventBase)\n        : undefined,\n    };\n  },\n\n  toJSON(message: SetExtensionBusinessEventsRequest): unknown {\n    const obj: any = {};\n    if (message.events) {\n      obj.events = message.events.map((e) => (e ? Any.toJSON(e) : undefined));\n    } else {\n      obj.events = [];\n    }\n    message.extensionEventBase !== undefined &&\n      (obj.extensionEventBase = message.extensionEventBase\n        ? ExtensionEventBase.toJSON(message.extensionEventBase)\n        : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SetExtensionBusinessEventsRequest>, I>>(\n    object: I\n  ): SetExtensionBusinessEventsRequest {\n    const message = createBaseSetExtensionBusinessEventsRequest();\n    message.events = object.events?.map((e) => Any.fromPartial(e)) || [];\n    message.extensionEventBase =\n      object.extensionEventBase !== undefined && object.extensionEventBase !== null\n        ? ExtensionEventBase.fromPartial(object.extensionEventBase)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSetExtensionBusinessEventsResponse(): SetExtensionBusinessEventsResponse {\n  return {};\n}\n\nexport const SetExtensionBusinessEventsResponse = {\n  encode(_: SetExtensionBusinessEventsResponse, writer: Writer = Writer.create()): Writer {\n    return writer;\n  },\n\n  decode(input: Reader | Uint8Array, length?: number): SetExtensionBusinessEventsResponse {\n    const reader = input instanceof Reader ? input : new Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetExtensionBusinessEventsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): SetExtensionBusinessEventsResponse {\n    return {};\n  },\n\n  toJSON(_: SetExtensionBusinessEventsResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SetExtensionBusinessEventsResponse>, I>>(\n    _: I\n  ): SetExtensionBusinessEventsResponse {\n    const message = createBaseSetExtensionBusinessEventsResponse();\n    return message;\n  },\n};\n\n/** Lenses service exposes methods related to the Lenses functionality */\nexport interface Lenses {\n  /** GetGroup returns group according to GetGroupRequests parameters */\n  GetGroup(request: GetGroupRequest): Promise<GetGroupResponse>;\n  /** GetGroupLens returns lens ID in the context of provided Group ID */\n  GetGroupLens(request: GetGroupLensRequest): Promise<GetGroupLensResponse>;\n  /**\n   * GetPlaceholderConfig returns config values where all values do not change depends on the request context\n   * such as device type, device class, etc.\n   */\n  GetPlaceholderConfig(request: GetPlaceholderConfigRequest): Promise<GetPlaceholderConfigResponse>;\n}\n\n/** Metrics service exposes methods that relate to operational or business metrics */\nexport interface Metrics {\n  /** SetOperationalMetrics sets multiple operational metrics */\n  SetOperationalMetrics(request: SetOperationalMetricsRequest): Promise<SetOperationalMetricsResponse>;\n  /** SetBusinessEvents sets multiple business events */\n  SetBusinessEvents(request: SetBusinessEventsRequest): Promise<SetBusinessEventsResponse>;\n  /** SetExtensionBusinessEvents sets multiple business events from SDK extensions */\n  SetExtensionBusinessEvents(request: SetExtensionBusinessEventsRequest): Promise<SetExtensionBusinessEventsResponse>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\n\n// If you get a compile-error about 'Constructor<Long> and ... have no overlap',\n// add '--ts_proto_opt=esModuleInterop=true' as a flag when calling 'protoc'.\nif (util.Long !== Long) {\n  util.Long = Long as any;\n  configure();\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","import { Injectable } from \"../dependency-injection/Injectable\";\nimport { FetchHandler } from \"../handlers/defaultFetchHandler\";\nimport { HandlerChainBuilder } from \"../handlers/HandlerChainBuilder\";\nimport { createBatchingHandler } from \"../handlers/batchingHandler\";\nimport {\n    OperationalMetric,\n    OperationalMetricsBundle,\n} from \"../generated-proto/pb_schema/camera_kit/v3/operational_metrics\";\nimport { SetOperationalMetricsRequest } from \"../generated-proto/pb_schema/camera_kit/v3/service\";\nimport { createMappingHandler } from \"../handlers/mappingHandler\";\nimport { metricsHandlerFactory } from \"./metricsHandler\";\n\ntype MetricsHandler = (metric: OperationalMetric) => Promise<void>;\n\n// CameraKit's prod metrics endpoint.\n// See: https://github.sc-corp.net/Snapchat/pb_schema/blob/c390b9c/proto/camera_kit/v3/service.proto#L126\nconst OPERATIONAL_METRICS_ENDPOINT =\n    \"https://api-kit.snapchat.com/com.snap.camerakit.v3.Metrics/metrics/operational_metrics\";\n\nconst DIMENSION_DELIMITER = \".\";\n\n// These values are (currently) arbitrarily selected.\n// TODO: Once we have gathered a sufficient quantity of metrics data, we should tune these numbers to ensure we're\n// operating with the right cost vs. alarming SLA vs. IDB storage size tradeoffs.\nconst METRIC_BATCH_MAX_SIZE = 100;\nconst METRIC_BATCH_MAX_AGE_MS = 5000;\n\n/**\n * Use this class to report operational metrics – these are metrics that describe aspects of the SDK's performance,\n * which may be used to assess and investigate operational issues.\n */\nexport class OperationalMetricsReporter {\n    constructor(private readonly metricsHandler: MetricsHandler) {}\n\n    /**\n     * Record a count.\n     *\n     * @param name\n     * @param count\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    count(name: string, count: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"count\", count }, dimensions);\n    }\n\n    /**\n     * Record a duration in milliseconds.\n     *\n     * @param name\n     * @param latencyMillis\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    timer(name: string, latencyMillis: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"latencyMillis\", latencyMillis }, dimensions);\n    }\n\n    /**\n     * Record a histogram.\n     *\n     * @param name\n     * @param histogram\n     * @param dimensions An optional Map containing dimensions which describe the metric.\n     * For example: `new Map([['status', '200']])`\n     * @returns Promise which resolves when the metric has been handled.\n     */\n    histogram(name: string, histogram: number, dimensions?: Map<string, string>): Promise<void> {\n        return this.record(name, { $case: \"histogram\", histogram }, dimensions);\n    }\n\n    private record(\n        name: string,\n        metric: Required<OperationalMetric>[\"metric\"],\n        dimensions?: Map<string, string | number>\n    ): Promise<void> {\n        // The naming convention (metricName.dimensionName.dimensionValue.dimensionName.dimensionValue...) is mentioned\n        // the Graphene docs here https://wiki.sc-corp.net/display/METRICS/Graphene\n        // TODO: find explicit documentation of the API, if it exists.\n        const serializedDimensions = dimensions\n            ? `.${Array.from(dimensions.entries())\n                  .map((d) => d.join(DIMENSION_DELIMITER))\n                  .join(DIMENSION_DELIMITER)}`\n            : \"\";\n\n        return this.metricsHandler({\n            name: `${name}${serializedDimensions}`,\n            timestamp: new Date(),\n            metric,\n        });\n    }\n}\n\n/**\n * @internal\n */\nexport const operationalMetricReporterFactory = Injectable(\n    \"operationalMetricsReporter\",\n    [metricsHandlerFactory.token] as const,\n    (metricsHandler: FetchHandler) => {\n        const handler = new HandlerChainBuilder(metricsHandler)\n            .map(\n                createMappingHandler((metrics: OperationalMetricsBundle) => {\n                    const request: SetOperationalMetricsRequest = { metrics };\n                    return new Request(OPERATIONAL_METRICS_ENDPOINT, {\n                        method: \"POST\",\n                        body: JSON.stringify(SetOperationalMetricsRequest.toJSON(request)),\n                        credentials: \"include\",\n\n                        // Setting this to true makes fetch behave like `Navigator.sendBeacon` – that is, the request\n                        // will still be made even if the page terminates.\n                        // https://developer.mozilla.org/en-US/docs/Web/API/fetch\n                        keepalive: true,\n                    });\n                })\n            )\n            .map(\n                createBatchingHandler({\n                    // The batching logic here is very simple – it could be improved by e.g. combining counts with\n                    // the same name, computing statistics to reduce overall data sent, etc. Right now this is\n                    // premature optimization, but could become a good idea in the future.\n                    batchReduce: (previousBundle: OperationalMetricsBundle | undefined, metric: OperationalMetric) => {\n                        const bundle = previousBundle ?? { metrics: [] };\n                        bundle.metrics.push(metric);\n                        return bundle;\n                    },\n                    isBatchComplete: (bundle) => bundle.metrics.length >= METRIC_BATCH_MAX_SIZE,\n                    maxBatchAge: METRIC_BATCH_MAX_AGE_MS,\n                })\n            ).handler;\n\n        return new OperationalMetricsReporter(handler);\n    }\n);\n","import { CameraKitConfiguration, configurationToken } from \"../../configuration\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { operationalMetricReporterFactory, OperationalMetricsReporter } from \"../operationalMetricsReporter\";\n\n// Allowlist the benchmarks we wish to report.\nconst reportableBenchmarks = [\"gflops\"];\n\nexport type BenchmarkComplete = MakeTaggedBusinessEvent<\"benchmarkComplete\">;\n\nexport const reportBenchmarks = Injectable(\n    \"reportBenchmarks\",\n    [metricsEventTargetFactory.token, operationalMetricReporterFactory.token, configurationToken] as const,\n    async (\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter,\n        config: CameraKitConfiguration\n    ) => {\n        if (config.lensPerformance === undefined) return;\n        const lensPerformance = await config.lensPerformance;\n        const baseBenchmark: Pick<BenchmarkComplete, \"name\" | \"performanceCluster\" | \"webglRendererInfo\"> = {\n            name: \"benchmarkComplete\",\n            performanceCluster: lensPerformance.cluster,\n            webglRendererInfo: lensPerformance.webglRendererInfo,\n        };\n        const dimensions = new Map([[\"performance_cluster\", lensPerformance.cluster.toString()]]);\n        for (const benchmark of lensPerformance.benchmarks) {\n            if (!reportableBenchmarks.includes(benchmark.name)) continue;\n            const benchmarkComplete: BenchmarkComplete = {\n                ...baseBenchmark,\n                benchmarkName: benchmark.name,\n                benchmarkValue: benchmark.value,\n            };\n            metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"benchmarkComplete\", benchmarkComplete));\n            reporter.histogram(`benchmark.${benchmark.name}`, benchmark.value, dimensions);\n        }\n    }\n);\n","import { wrapError } from \"../../common/errors\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { CameraKitSession, cameraKitSessionFactory } from \"../../session/CameraKitSession\";\nimport { LensContext, lensContextFactory } from \"../../session/LensContext\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { operationalMetricReporterFactory, OperationalMetricsReporter } from \"../operationalMetricsReporter\";\n\n/**\n * The Exception metric reports every time we handle an exception.\n */\nexport type Exception = MakeTaggedBusinessEvent<\"exception\">;\n\n/**\n * @internal\n */\nexport const reportException = Injectable(\n    \"reportException\",\n    [\n        cameraKitSessionFactory.token,\n        lensContextFactory.token,\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n    ] as const,\n    (\n        session: CameraKitSession,\n        lensContext: LensContext,\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter\n    ) => {\n        session.events.addEventListener(\"error\", (event) => {\n            const error = event.detail;\n            metricsEventTarget.dispatchEvent(\n                new TypedCustomEvent(\"exception\", {\n                    name: \"exception\",\n                    lensId: lensContext.activeLens?.id ?? \"original\",\n                    type: \"lens\",\n                    reason: (error.cause ? wrapError(error, error.cause) : error).stack ?? \"\",\n                })\n            );\n            reporter.count(\"handled_exception\", 1, new Map([[\"type\", \"lens\"]]));\n        });\n    }\n);\n","import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\nimport { EventsFromTarget, TypedEventTarget } from \"./TypedEventTarget\";\n\n/**\n * Each time an event is emitted, call a given accumulator function with two arguments: some state of type S and the\n * event. The accumulator returns a new state. `scan` returns a new event emitter which emits an event each time a new\n * state is produced by the accumulator.\n *\n * This can be used to implement a Redux-style state management architecture.\n *\n * @param seedState Some initial state, passed to the accumulator when the first event is emitted.\n * @returns A function which takes a source {@link TypedEventTarget}, a list of event types emitted by that target to\n * which to listen, and the accumulator function. The accumulator is called each time an event of the given type(s) is\n * emitted on the source. It is passed the current state and the event, and must return a new state.\n */\nexport const scan = <S>(seedState: S) => <\n    Target extends TypedEventTarget,\n    Events extends EventsFromTarget<Target>,\n    EventType extends Events[\"type\"]\n>(\n    source: Target,\n    eventTypes: EventType[],\n    accumulator: (state: S, event: EventOfType<EventType, Events>) => S\n): TypedEventTarget<TypedCustomEvent<\"state\", S>> => {\n    let state = seedState;\n    const sink = new TypedEventTarget<TypedCustomEvent<\"state\", S>>();\n    const listener = (event: TypedCustomEvent) => {\n        state = accumulator(state, event as EventOfType<EventType, Events>);\n        sink.dispatchEvent(new TypedCustomEvent(\"state\", state));\n    };\n\n    // We'll use Proxies to make sure that event listeners are added/removed at the appropriate time. Callers can then\n    // control when to clean up the listeners we add here in a transparent way – by just removing the listener on the\n    // returned event target.\n    //\n    // We also prevent multiple listeners on the sink, as a simplification.\n    let hasListener = false;\n    sink.addEventListener = new Proxy(sink.addEventListener, {\n        apply: (target, thisArg, args: Parameters<typeof sink[\"addEventListener\"]>) => {\n            if (hasListener)\n                throw new Error(\n                    \"Cannot addEventListener. The TypedEventTarget returned by scan only \" +\n                        \"supports a single listener, and one has already been added.\"\n                );\n            hasListener = true;\n            eventTypes.forEach((eventType) => source.addEventListener(eventType, listener));\n            target.apply(thisArg, args);\n        },\n    });\n    sink.removeEventListener = new Proxy(sink.removeEventListener, {\n        apply: (target, thisArg, args: Parameters<typeof sink[\"removeEventListener\"]>) => {\n            eventTypes.forEach((eventType) => source.removeEventListener(eventType, listener));\n            target.apply(thisArg, args);\n        },\n    });\n\n    return sink;\n};\n","import { assertUnreachable } from \"../../common/assertions\";\nimport { wrapError } from \"../../common/errors\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { Dimensions, requestStateEventTarget } from \"../../handlers/requestStateEmittingHandler\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { CameraKitMetricEvents, MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { operationalMetricReporterFactory, OperationalMetricsReporter } from \"../operationalMetricsReporter\";\n\ntype InProgressMap = Map<number, { startTimeMs: number }>;\ninterface InProgress {\n    name: \"inProgress\";\n    inProgress: InProgressMap;\n}\ninterface Completed {\n    name: \"completed\";\n    inProgress: InProgressMap;\n    event: CameraKitMetricEvents;\n}\ntype RequestState = InProgress | Completed;\n\nconst relevantRequestTypes = [\"lens_content\", \"asset\"] as const;\nexport const isLensOrAssetRequest = (value: Dimensions): value is LensDownloadDimensions | AssetDownloadDimensions => {\n    const requestType = value[\"requestType\"];\n    // Safety: the cast makes the type less specific so we can check if any string is present in the tuple.\n    return typeof requestType === \"string\" && (relevantRequestTypes as readonly string[]).includes(requestType);\n};\n\n/**\n * The LensDownload metric is triggered by any download of lens content.\n *\n * It contains download stats, which lens was requested, and whether prefetch was used.\n *\n * It corresponds to the internal CameraKitLensDownload event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.stqom49qs91t\n */\nexport type LensDownload = MakeTaggedBusinessEvent<\"lensDownload\">;\nexport type LensDownloadDimensions = { requestType: \"lens_content\"; lensId: string };\n\n/**\n * The AssetDownload metric is triggered by any type of asset download.\n *\n * It contains download stats, which asset was requested, and whether prefetch was used.\n *\n * It corresponds to the internal CameraKitAssetDownload event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.vlormd1724fp\n */\nexport type AssetDownload = MakeTaggedBusinessEvent<\"assetDownload\">;\nexport type AssetDownloadDimensions = { requestType: \"asset\"; assetType: string; assetId: string; lensId: string };\n\nexport const reportLensAndAssetDownload = Injectable(\n    \"reportLensAndAssetDownload\",\n    [metricsEventTargetFactory.token, operationalMetricReporterFactory.token] as const,\n    (metricsEventTarget: MetricsEventTarget, reporter: OperationalMetricsReporter) => {\n        scan<RequestState>({ name: \"inProgress\", inProgress: new Map() })(\n            requestStateEventTarget,\n            [\"started\", \"completed\", \"errored\"],\n            (state, event) => {\n                const { inProgress } = state;\n                const { dimensions, requestId, timeMs } = event.detail;\n\n                if (!isLensOrAssetRequest(dimensions)) return state;\n\n                switch (event.type) {\n                    case \"started\":\n                        inProgress.set(requestId, { startTimeMs: timeMs });\n                        return { name: \"inProgress\", inProgress };\n                    case \"completed\":\n                        const completedRequest = inProgress.get(requestId);\n                        if (!completedRequest) return state;\n                        inProgress.delete(requestId);\n\n                        const downloadTimeSec = (timeMs - completedRequest.startTimeMs) / 1000;\n                        const { sizeByte } = event.detail;\n\n                        switch (dimensions.requestType) {\n                            case \"lens_content\":\n                                return {\n                                    name: \"completed\",\n                                    inProgress,\n                                    event: new TypedCustomEvent(\"lensDownload\", {\n                                        name: \"lensDownload\",\n                                        lensId: dimensions.lensId,\n                                        automaticDownload: false,\n                                        sizeByte,\n                                        downloadTimeSec,\n                                    }),\n                                };\n                            case \"asset\":\n                                return {\n                                    name: \"completed\",\n                                    inProgress,\n                                    event: new TypedCustomEvent(\"assetDownload\", {\n                                        name: \"assetDownload\",\n                                        assetId: dimensions.assetId,\n                                        automaticDownload: false,\n                                        sizeByte,\n                                        downloadTimeSec,\n                                    }),\n                                };\n                            default:\n                                assertUnreachable(dimensions);\n                        }\n                    case \"errored\":\n                        const erroredRequest = inProgress.get(requestId);\n                        if (!erroredRequest) return state;\n                        inProgress.delete(requestId);\n                        const error = event.detail.error;\n                        return {\n                            name: \"completed\",\n                            inProgress,\n                            event: new TypedCustomEvent(\"exception\", {\n                                name: \"exception\",\n                                lensId: dimensions.lensId,\n                                type: dimensions.requestType === \"lens_content\" ? \"lens\" : \"asset\",\n                                reason: (error.cause ? wrapError(error, error.cause) : error).stack ?? \"\",\n                            }),\n                        };\n                    default:\n                        assertUnreachable(event);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail: state }) => {\n            if (state.name !== \"completed\") return;\n            metricsEventTarget.dispatchEvent(state.event);\n            if (state.event.detail.name === \"exception\") {\n                reporter.count(\"handled_exception\", 1, new Map([[\"type\", state.event.detail.type]]));\n            }\n        });\n    }\n);\n","import { assertUnreachable } from \"../../common/assertions\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { CofDimensions, COF_REQUEST_TYPE } from \"../../handlers/cofHandler\";\nimport { Dimensions, RequestStateEvents, requestStateEventTarget } from \"../../handlers/requestStateEmittingHandler\";\nimport { operationalMetricReporterFactory, OperationalMetricsReporter } from \"../operationalMetricsReporter\";\nimport { AssetDownloadDimensions, isLensOrAssetRequest, LensDownloadDimensions } from \"./reportLensAndAssetDownload\";\n\ndeclare global {\n    interface Navigator {\n        connection?: {\n            // This currently has extremely limited support in browsers.\n            // https://wicg.github.io/netinfo/#dom-networkinformation-type\n            type?: \"bluetooth\" | \"cellular\" | \"ethernet\" | \"none\" | \"wifi\" | \"wimax\" | \"other\" | \"unknown\";\n        };\n    }\n}\n\ntype InProgressMap = Map<number, { startTimeMs: number }>;\ninterface InProgress {\n    name: \"inProgress\";\n    inProgress: InProgressMap;\n}\ninterface Completed {\n    name: \"completed\";\n    inProgress: InProgressMap;\n    dimensions: Map<string, string>;\n    downloadTimeMs: number;\n    downloadSizeKb: number;\n}\ntype RequestState = InProgress | Completed;\n\nconst getContentType = (dimensions: LensDownloadDimensions | AssetDownloadDimensions | CofDimensions): string => {\n    switch (dimensions.requestType) {\n        case \"lens_content\":\n            return \"lens_content\";\n        case \"asset\":\n            return dimensions.assetType;\n        case COF_REQUEST_TYPE:\n            return COF_REQUEST_TYPE;\n        default:\n            assertUnreachable(dimensions);\n    }\n};\n\nconst getSizeKb = (event: RequestStateEvents): number => {\n    switch (event.type) {\n        case \"started\":\n        case \"errored\":\n            return 0;\n        case \"completed\":\n            return event.detail.sizeByte / 1024;\n        default:\n            assertUnreachable(event);\n    }\n};\n\nconst getStatus = (event: RequestStateEvents): string => {\n    switch (event.type) {\n        case \"started\":\n        case \"errored\":\n            // We'll use status 0 to indicate that an exception occurred during the request. This is somewhat in keeping\n            // with browsers that set the response status to 0 if the request was not able to be made (e.g. CORs\n            // preflight failed, or the user canceled the request).\n            return \"0\";\n        case \"completed\":\n            return event.detail.status.toString();\n        default:\n            assertUnreachable(event);\n    }\n};\n\nexport const isRelevantRequest = (\n    value: Dimensions\n): value is LensDownloadDimensions | AssetDownloadDimensions | CofDimensions => {\n    return isLensOrAssetRequest(value) || value[\"requestType\"] === COF_REQUEST_TYPE;\n};\n\nexport const reportHttpMetrics = Injectable(\n    \"reportHttpMetrics\",\n    [operationalMetricReporterFactory.token] as const,\n    (reporter: OperationalMetricsReporter) => {\n        scan<RequestState>({ name: \"inProgress\", inProgress: new Map() })(\n            requestStateEventTarget,\n            [\"started\", \"completed\", \"errored\"],\n            (state, event) => {\n                const { inProgress } = state;\n                const { dimensions, requestId, timeMs } = event.detail;\n\n                if (!isRelevantRequest(dimensions)) return state;\n\n                switch (event.type) {\n                    case \"started\":\n                        inProgress.set(requestId, { startTimeMs: timeMs });\n                        return { name: \"inProgress\", inProgress };\n                    case \"completed\":\n                    case \"errored\":\n                        const completedRequest = inProgress.get(requestId);\n                        if (!completedRequest) return state;\n                        inProgress.delete(requestId);\n\n                        const downloadTimeMs = timeMs - completedRequest.startTimeMs;\n                        const downloadSizeKb = getSizeKb(event);\n                        const status = getStatus(event);\n                        const operationalDimensions = new Map<string, string>([\n                            [\"content_type\", getContentType(dimensions)],\n                            [\"network_type\", navigator.connection?.type ?? \"unknown\"],\n                            [\"status\", status],\n                        ]);\n\n                        return {\n                            name: \"completed\",\n                            inProgress: state.inProgress,\n                            dimensions: operationalDimensions,\n                            downloadSizeKb,\n                            downloadTimeMs,\n                        };\n                    default:\n                        assertUnreachable(event);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail: state }) => {\n            if (state.name !== \"completed\") return;\n\n            const { dimensions, downloadTimeMs, downloadSizeKb } = state;\n\n            reporter.count(\"download_finished\", 1, dimensions);\n            reporter.timer(\"download_latency\", downloadTimeMs, dimensions);\n            reporter.histogram(\"download_size_kb\", downloadSizeKb, dimensions);\n        });\n    }\n);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { SessionStateEventTarget, sessionStateEventTargetFactory } from \"../../session/sessionStateEventTarget\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\n\n/**\n * The AssetValidationFailed metric reports every time we handle an asset checksum validation failure.\n */\nexport type AssetValidationFailed = MakeTaggedBusinessEvent<\"assetValidationFailed\">;\n\n/**\n * The LensContentValidationFailed metric reports every time we handle an lens checksum validation failure.\n */\nexport type LensContentValidationFailed = MakeTaggedBusinessEvent<\"lensContentValidationFailed\">;\n\n/**\n * @internal\n */\nexport const reportLensOrAssetValidationFailed = Injectable(\n    \"reportLensOrAssetValidationFailed\",\n    [sessionStateEventTargetFactory.token, metricsEventTargetFactory.token] as const,\n    (stateTarget: SessionStateEventTarget, metricsEventTarget: MetricsEventTarget) => {\n        stateTarget.addEventListener(\"assetValidationFailure\", ({ detail: assetDescriptor }) => {\n            const assetValidationFailed: AssetValidationFailed = {\n                name: \"assetValidationFailed\",\n                assetId: assetDescriptor.assetId,\n            };\n            metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"assetValidationFailed\", assetValidationFailed));\n        });\n        stateTarget.addEventListener(\"lensContentValidationFailure\", ({ detail: lens }) => {\n            const lensContentValidationFailed: LensContentValidationFailed = {\n                name: \"lensContentValidationFailed\",\n                lensId: lens.id,\n            };\n            metricsEventTarget.dispatchEvent(\n                new TypedCustomEvent(\"lensContentValidationFailed\", lensContentValidationFailed)\n            );\n        });\n    }\n);\n","import { EventOfType, TypedCustomEvent } from \"./TypedCustomEvent\";\nimport { EventsFromTarget, TypedEventTarget } from \"./TypedEventTarget\";\n\nexport interface NextEventOptions<T> {\n    predicate?: (value: T) => boolean;\n    signal?: AbortSignal;\n}\n\n/**\n * Listen for the next event of some type, returning a Promise which resolves when the event is emitted.\n *\n * @param target Listen for the next event from this EventTarget\n * @param eventType Listen for this type of event.\n * @param options\n * @param options.signal An AbortSignal used to stop listening for the next event and reject the returned Promise.\n * @param options.predicate A function to be called with each event emitted by the target. It must return true before\n * the returned Promise is resolved (with event which satisfied the predicate).\n * @returns\n */\nexport const nextEvent = <\n    Target extends TypedEventTarget,\n    Events extends EventsFromTarget<Target>,\n    EventType extends Events[\"type\"]\n>(\n    target: Target,\n    eventType: EventType,\n    options?: NextEventOptions<EventOfType<EventType, Events>[\"detail\"]>\n) =>\n    new Promise<EventOfType<EventType, Events>[\"detail\"]>((resolve, reject) => {\n        const predicate = options?.predicate ? options.predicate : () => true;\n        const listener = ({ detail }: TypedCustomEvent) => {\n            if (predicate(detail)) {\n                resolve(detail);\n                target.removeEventListener(eventType, listener);\n            }\n        };\n        // We could pass the signal as part of AddEventListenerOptions here (which causes the EventTarget to\n        // automatically clean up the listener if aborted), but since we have to listen to the abort event anyway to\n        // reject the Promise, we'll just do our own cleanup there.\n        target.addEventListener(eventType, listener);\n\n        if (options?.signal) {\n            options.signal.addEventListener(\n                \"abort\",\n                () => {\n                    reject(new Error(`Promise aborted while waiting for next ${eventType} event.`));\n                    target.removeEventListener(eventType, listener);\n                },\n                { once: true }\n            );\n        }\n    });\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { nextEvent, NextEventOptions } from \"../../events/nextEvent\";\nimport { Lens } from \"../../lens\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { SessionStateEventTarget, sessionStateEventTargetFactory } from \"../../session/sessionStateEventTarget\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { CameraKitSession, cameraKitSessionFactory } from \"../../session/CameraKitSession\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { getTimeMs } from \"../../common/time\";\nimport { operationalMetricReporterFactory, OperationalMetricsReporter } from \"../operationalMetricsReporter\";\nimport { CameraKitConfiguration, configurationToken } from \"../../configuration\";\n\n// We ignore short-duration lens views.\n//\n// The value is documented here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.q5liip76r9lt\nconst viewTimeThresholdSec = 0.1;\n\n/**\n * The LensView metric is emitted after a lens has been viewed (for longer than 100ms), when the lens is turned off.\n *\n * It contains information about rendering performance.\n *\n * It corresponds to the internal CameraKitLensSwipe event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY#heading=h.q5liip76r9lt\n *\n * Notes:\n *   - If the page is hidden (e.g. user switches to a different tab, or application, or closes the tab, or closes the\n *     browser, navigates to a new page, refreshes, etc.) this metric will be emitted at that time. This is to ensure\n *     we don't lose the metric if the page is closed.\n *   - If the page is hidden and then made visible again later (e.g. user switches to a different tab, then back), we\n *     will begin measuring a new LensView. That is, we will not capture the time when the page is hidden even if the\n *     lens is still rendering in the background.\n */\nexport type LensView = MakeTaggedBusinessEvent<\"lensView\">;\n\n/**\n * @internal\n */\nexport const reportLensView = Injectable(\n    \"reportLensView\",\n    [\n        cameraKitSessionFactory.token,\n        sessionStateEventTargetFactory.token,\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n        configurationToken,\n    ] as const,\n    (\n        session: CameraKitSession,\n        stateTarget: SessionStateEventTarget,\n        metricsEventTarget: MetricsEventTarget,\n        operationalMetricsReporter: OperationalMetricsReporter,\n        configuration: CameraKitConfiguration\n    ) => {\n        let abortController = new AbortController();\n\n        const maybeDispatchLensView = async ({\n            applyDelaySec,\n            lensId,\n            viewTimeSec,\n        }: Pick<LensView, \"applyDelaySec\" | \"lensId\" | \"viewTimeSec\">) => {\n            if (viewTimeSec < viewTimeThresholdSec) return;\n            const { avgFps, lensFrameProcessingTimeMsAvg, lensFrameProcessingTimeMsStd } = session.metrics.frames;\n            const { cluster: performanceCluster, webglRendererInfo } = (await configuration.lensPerformance) ?? {\n                cluster: -1,\n                webglRendererInfo: \"unknown\",\n            };\n            const lensView: LensView = {\n                name: \"lensView\",\n                applyDelaySec,\n                avgFps,\n                lensId,\n                lensFrameProcessingTimeMsAvg,\n                lensFrameProcessingTimeMsStd,\n                // We don't support recording video, but applications may do this without our knowledge.\n                recordingTimeSec: 0,\n                viewTimeSec,\n                // TODO: if we want to support these fields, we'll need some persistence to keep track of the date\n                // of last application per lens.\n                // https://jira.sc-corp.net/browse/CAMKIT-3050\n                isLensFirstWithinDay: false,\n                isLensFirstWithinMonth: false,\n                performanceCluster,\n                webglRendererInfo,\n            };\n\n            metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"lensView\", lensView));\n\n            // Reporting operational metrics described here:\n            // https://docs.google.com/document/d/1g4PncAmKdyrLEFVp8ODp58oer2UJu9PIetRW035nnTo\n            //\n            // We ignore if applyDelaySec is 0, which will be the case if the session was suspended and then resumed –\n            // we only care about this metric when a new lens has been loaded.\n            if (applyDelaySec > 0) operationalMetricsReporter.timer(\"lens.core_loading_latency\", applyDelaySec * 1000);\n            operationalMetricsReporter.timer(\n                \"lens.processing_time\",\n                lensFrameProcessingTimeMsAvg,\n                new Map([[\"performance_cluster\", performanceCluster.toString()]])\n            );\n        };\n\n        const measureLensView = async (\n            lensId: string,\n            lensLoadedTime: Promise<number>,\n            lensTurnedOnTime: Promise<number>,\n            lensTurnedOffTime: Promise<number>\n        ) => {\n            const lensInitiatedTime = getTimeMs();\n            const applyDelay = lensLoadedTime.then((lensLoadedTimeMs) => (lensLoadedTimeMs - lensInitiatedTime) / 1000);\n            let hasSuspended = false;\n\n            // Once the lens has turned on, we also need to listen for the sessionSuspended event (which occurs if the\n            // page is hidden) and treat as if we had gotten lensTurnedOff at that time.\n            //\n            // Note: we can't turn the sessionSuspended event into a Promise because if sessionSuspended comes as the\n            // result of page termination, we can't do anything async (like construct a Promise) – if we do, the browser\n            // will simply terminate the page and never resolve the Promise.\n            Promise.all([applyDelay, lensTurnedOnTime]).then(async ([applyDelaySec, lensTurnedOnTime]) => {\n                const onSessionSuspended = () => {\n                    hasSuspended = true;\n                    const viewTimeSec = (getTimeMs() - lensTurnedOnTime) / 1000;\n                    maybeDispatchLensView({ lensId, applyDelaySec, viewTimeSec });\n                };\n\n                const onSessionResumed = () => {\n                    const now = Promise.resolve(getTimeMs());\n                    measureLensView(lensId, now, now, lensTurnedOffTime);\n                };\n\n                stateTarget.addEventListener(\"sessionSuspended\", onSessionSuspended, { once: true });\n                stateTarget.addEventListener(\"sessionResumed\", onSessionResumed, { once: true });\n                await lensTurnedOffTime.catch(() => {});\n                stateTarget.removeEventListener(\"sessionSuspended\", onSessionSuspended);\n                stateTarget.removeEventListener(\"sessionResumed\", onSessionResumed);\n            });\n\n            const [applyDelaySec, viewTimeSec] = await Promise.all([\n                applyDelay,\n                Promise.all([lensTurnedOnTime, lensTurnedOffTime]).then(([lensTurnedOnTime, lensTurnedOffTime]) => {\n                    return (lensTurnedOffTime - lensTurnedOnTime) / 1000;\n                }),\n                // This could occur if lens B is somehow initiated before lens A is turned off. CameraKitSession's\n                // internal state machine should prevent this. If it does happen, at least for now we'll miss the\n                // lensView for lens A.\n            ]).catch(() => [0, 0]);\n\n            // If we've been suspended, we'll have already dispatched the metric. This could happen if the lens is\n            // turned off while the tab is hidden.\n            if (hasSuspended) return;\n            maybeDispatchLensView({ lensId, applyDelaySec, viewTimeSec });\n        };\n\n        /**\n         * Each time a \"lensInitiated\" event occurs, we will wait for subsequent events from which we can\n         * gather the data required to record a CameraKitLensSwipe event.\n         */\n        stateTarget.addEventListener(\"lensInitiated\", async ({ detail: lens }) => {\n            // If a lens is initiated before the prior lens received its lensTurnedOff event, we'll abort the prior\n            // lens's reporting and remove its event listeners. This isn't expected to happen; it's a safety measure to\n            // prevent memory leaks.\n            //\n            // TODO: This logic will need to be updated when we implement multiple lenses applied at the same time (lens\n            // layering) – we won't be able to remove listeners when a new lens is applied. This may be fine, we'll just\n            // have to make sure the lensTurnedOff event is robust, else we'll get memory leakage.\n            abortController.abort();\n            abortController = new AbortController();\n\n            const isSameLens = (maybeSameLens: Lens) => maybeSameLens.id === lens.id;\n            const options: NextEventOptions<Lens> = { signal: abortController.signal, predicate: isSameLens };\n            const lensLoadedTime = nextEvent(stateTarget, \"lensLoaded\", options).then(getTimeMs);\n            const lensTurnedOnTime = nextEvent(stateTarget, \"lensTurnedOn\", options).then(getTimeMs);\n            const lensTurnedOffTime = nextEvent(stateTarget, \"lensTurnedOff\", options).then(getTimeMs);\n\n            measureLensView(lens.id, lensLoadedTime, lensTurnedOnTime, lensTurnedOffTime);\n        });\n    }\n);\n","import { assertUnreachable } from \"../../common/assertions\";\nimport { getTimeMs } from \"../../common/time\";\nimport { Injectable } from \"../../dependency-injection/Injectable\";\nimport { scan } from \"../../events/scan\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { SessionStateEventTarget, sessionStateEventTargetFactory } from \"../../session/sessionStateEventTarget\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\nimport { operationalMetricReporterFactory, OperationalMetricsReporter } from \"../operationalMetricsReporter\";\n\ninterface NotStarted {\n    name: \"NotStarted\";\n}\n\ninterface Waiting {\n    name: \"Waiting\";\n    lensId: string;\n    waitingStartTimeMs: number;\n}\n\ninterface Complete {\n    name: \"Complete\";\n    lensId: string;\n    waitingDurationMs: number;\n}\n\ntype LensWaitState = NotStarted | Waiting | Complete;\n\n// We ignore short-duration lens waits.\n//\n// The value is documented here:\n// https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/edit#heading=h.q5liip76r9lt\nconst viewTimeThresholdSec = 0.1;\n\n/**\n * The LensWait metric measures the time spent downloading the lens content and required assets. It gives an indication\n * of the real UX impact of download latency. If lens content and assets are pre-loaded, the latency measured here\n * should decrease – we only measure between the request to apply a lens and when the lens is ready to render.\n *\n * It corresponds to the internal CameraKitLensSpin event, described here:\n * https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY#heading=h.q5liip76r9lt\n */\nexport type LensWait = MakeTaggedBusinessEvent<\"lensWait\">;\n\n/**\n * Each time a lens is applied, we measure the duration until the lens is fully loaded by LensCore. This\n * includes any time spent downloading the lens content and required assets from the lens manifest.\n *\n * The intention of this event is to measure the experienced UX latency between a user requesting a lens and\n * the lens rendering. Of course, the application may call `applyLens` at any time, and may hide/show the\n * rendered result at any time – but this should give us a good baseline for how much UX latency could be seen.\n *\n * @internal\n */\nexport const reportLensWait = Injectable(\n    \"reportLensWait\",\n    [\n        sessionStateEventTargetFactory.token,\n        metricsEventTargetFactory.token,\n        operationalMetricReporterFactory.token,\n    ] as const,\n    (\n        stateTarget: SessionStateEventTarget,\n        metricsEventTarget: MetricsEventTarget,\n        reporter: OperationalMetricsReporter\n    ) => {\n        scan<LensWaitState>({ name: \"NotStarted\" })(\n            stateTarget,\n            [\"lensApplyStart\", \"firstFrameProcessed\"],\n            (state, { type: eventType, detail: lens }) => {\n                const complete = (state: Waiting): Complete => ({\n                    name: \"Complete\",\n                    lensId: state.lensId,\n                    waitingDurationMs: getTimeMs() - state.waitingStartTimeMs,\n                });\n\n                const waiting = (): Waiting => ({\n                    name: \"Waiting\",\n                    lensId: lens.id,\n                    waitingStartTimeMs: getTimeMs(),\n                });\n\n                switch (state.name) {\n                    case \"NotStarted\":\n                    case \"Complete\":\n                        switch (eventType) {\n                            case \"lensApplyStart\":\n                                return waiting();\n\n                            // This is nonsensical – we should never get a lensLoaded event without first getting a\n                            // lensDownloadStart. If we do, we'll ignore it.\n                            case \"firstFrameProcessed\":\n                                return state;\n                            default:\n                                assertUnreachable(eventType);\n                        }\n                    case \"Waiting\":\n                        switch (eventType) {\n                            // If, while waiting, we get another lensApplyStart, this indicates that the prior lens\n                            // is no longer being waited upon – so we'll complete it.\n                            case \"lensApplyStart\":\n                                recordEvent(complete(state));\n                                return waiting();\n                            case \"firstFrameProcessed\":\n                                return complete(state);\n                            default:\n                                assertUnreachable(eventType);\n                        }\n                    default:\n                        assertUnreachable(state);\n                }\n            }\n        ).addEventListener(\"state\", ({ detail }) => recordEvent(detail));\n\n        const recordEvent = (state: LensWaitState) => {\n            if (state.name !== \"Complete\") return;\n\n            const viewTimeSec = state.waitingDurationMs / 1000;\n            if (viewTimeSec < viewTimeThresholdSec) return;\n\n            const lensWait: LensWait = {\n                name: \"lensWait\",\n                lensId: state.lensId,\n                viewTimeSec,\n            };\n            metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"lensWait\", lensWait));\n            reporter.timer(\"lens.apply_lens_latency\", state.waitingDurationMs);\n        };\n    }\n);\n","import { PartialContainer } from \"../../dependency-injection/PartialContainer\";\nimport { businessEventsReporterFactory } from \"../businessEventsReporter\";\nimport { reportBenchmarks } from \"./reportBenchmarks\";\nimport { reportException } from \"./reportException\";\nimport { reportHttpMetrics } from \"./reportHttpMetrics\";\nimport { reportLensAndAssetDownload } from \"./reportLensAndAssetDownload\";\nimport { reportLensOrAssetValidationFailed } from \"./reportLensOrAssetValidationFailed\";\nimport { reportLensView } from \"./reportLensView\";\nimport { reportLensWait } from \"./reportLensWait\";\n\n/**\n * These metrics reporters must be run once in the top-level DI container. They only depend on globally-available\n * services.\n *\n * The businessEventsReporter is special, it doesn't create any of its own metrics, it simply listens to the global\n * metricsEventTarget and reports metrics emitted there to our backend.\n */\nexport const globallyScopedMetricsReporters = new PartialContainer({})\n    .provides(businessEventsReporterFactory)\n    .provides(reportHttpMetrics)\n    .provides(reportBenchmarks)\n    .provides(reportLensAndAssetDownload);\n\n/**\n * These metrics reporters must be run once for each CameraKitSession DI container created. They may depend on services\n * which are only available at the session scope (e.g. the CameraKitSession itself).\n */\nexport const sessionScopedMetricsReporters = new PartialContainer({})\n    .provides(reportLensView)\n    .provides(reportLensWait)\n    .provides(reportException)\n    .provides(reportLensOrAssetValidationFailed);\n","import { Injectable } from \"../../dependency-injection/Injectable\";\nimport { TypedCustomEvent } from \"../../events/TypedCustomEvent\";\nimport { DailySessionBucket } from \"../../generated-proto/blizzard/cameraKitEvents\";\nimport { IndexedDBPersistence } from \"../../persistence/IndexedDBPersistence\";\nimport { SessionStateEventTarget, sessionStateEventTargetFactory } from \"../../session/sessionStateEventTarget\";\nimport { MakeTaggedBusinessEvent } from \"../businessEventsReporter\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"../metricsEventTarget\";\n\ninterface UserSessionInfo {\n    mostRecentSessionStartDate: Date;\n    dailySessionBucket: DailySessionBucket;\n}\n\n/**\n * The Session metric reports each user session.\n */\nexport type Session = MakeTaggedBusinessEvent<\"session\">;\n\n/**\n * @internal\n */\nexport const reportUserSession = Injectable(\n    \"reportUserSession\",\n    [sessionStateEventTargetFactory.token, metricsEventTargetFactory.token] as const,\n    (stateTarget: SessionStateEventTarget, metricsEventTarget: MetricsEventTarget) => {\n        stateTarget.addEventListener(\n            \"sessionCreated\",\n            async () => {\n                const userSessionKey = \"userSessionInfo\";\n                const db = new IndexedDBPersistence<UserSessionInfo>({ databaseName: \"SessionHistory\" });\n                // We standardize all user dates to PST as per our documentation:\n                // https://docs.google.com/document/d/1-kSzFWCWw9Qo3D08FR1_cqeHTsUtk9p3p3uOptzWDTY/\n                const date = new Date(\n                    new Date().toLocaleDateString(\"en-US\", {\n                        timeZone: \"America/Los_Angeles\",\n                    })\n                );\n                const currentMonth = date.getMonth();\n                const currentDay = date.getDate();\n                const currentYear = date.getFullYear();\n                const userSessionInfo = await db.retrieve(userSessionKey);\n                const mostRecentSessionStartDate = userSessionInfo?.mostRecentSessionStartDate;\n                const dailySessionBucketMap = new Map<number, DailySessionBucket>([\n                    [1, DailySessionBucket.ONE_SESSION],\n                    [2, DailySessionBucket.TWO_SESSION],\n                    [3, DailySessionBucket.THREE_SESSION],\n                    [4, DailySessionBucket.FOUR_SESSION],\n                    [5, DailySessionBucket.FIVE_SESSION],\n                    [6, DailySessionBucket.SIX_SESSION],\n                    [7, DailySessionBucket.SEVEN_SESSION],\n                    [8, DailySessionBucket.EIGHT_SESSION],\n                    [9, DailySessionBucket.NINE_SESSION],\n                ]);\n                let dailySessionBucket = userSessionInfo?.dailySessionBucket ?? DailySessionBucket.NO_SESSION_BUCKET;\n                let isFirstWithinMonth = false;\n                if (\n                    mostRecentSessionStartDate &&\n                    mostRecentSessionStartDate.getMonth() === currentMonth &&\n                    mostRecentSessionStartDate.getDate() === currentDay &&\n                    mostRecentSessionStartDate.getFullYear() === currentYear\n                ) {\n                    dailySessionBucket =\n                        dailySessionBucketMap.get(dailySessionBucket + 1) ?? DailySessionBucket.TEN_OR_MORE_SESSION;\n                    await db.remove(userSessionKey);\n                    await db.store(userSessionKey, {\n                        mostRecentSessionStartDate: date,\n                        dailySessionBucket,\n                    });\n                } else {\n                    isFirstWithinMonth =\n                        !mostRecentSessionStartDate || mostRecentSessionStartDate.getMonth() !== currentMonth;\n                    await db.remove(userSessionKey);\n                    await db.store(userSessionKey, {\n                        mostRecentSessionStartDate: date,\n                        dailySessionBucket: (dailySessionBucket = DailySessionBucket.ONE_SESSION),\n                    });\n                }\n                const session: Session = {\n                    name: \"session\",\n                    dailySessionBucket,\n                    isFirstWithinMonth,\n                    month: currentMonth + 1, // Date.getMonth() is zero-based so we need to add 1\n                    day: currentDay,\n                    year: currentYear,\n                };\n                metricsEventTarget.dispatchEvent(new TypedCustomEvent(\"session\", session));\n            },\n            // This event listener option avoids recording multiple sessions within a single page load\n            { once: true }\n        );\n    }\n);\n","import { lensRepositoryFactory, LensRepository } from \"./lens/LensRepository\";\nimport { CONTAINER, Container } from \"./dependency-injection/Container\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { LensCoreModule } from \"./lens-core-module/generated-types\";\nimport { CameraKitSession, cameraKitSessionFactory, CameraKitSessionEvents } from \"./session/CameraKitSession\";\nimport { lensAssetsProviderFactory } from \"./lens/assets/LensAssetsProvider\";\nimport { lensCoreFactory } from \"./lens-core-module/loader/lensCoreFactory\";\nimport { configurationToken } from \"./configuration\";\nimport { RootServices } from \"./dependency-injection/RootServices\";\nimport { TypedEventTarget } from \"./events/TypedEventTarget\";\nimport { TypedCustomEvent } from \"./events/TypedCustomEvent\";\nimport { UriHandlers, uriHandlersFactory } from \"./extensions/UriHandlers\";\nimport { registerUriHandlers } from \"./extensions/UriHandlers\";\nimport { LensContext, lensContextFactory } from \"./session/LensContext\";\nimport { sessionStateEventTargetFactory } from \"./session/sessionStateEventTarget\";\nimport { MetricsEventTarget, metricsEventTargetFactory } from \"./metrics/metricsEventTarget\";\nimport { sessionScopedMetricsReporters } from \"./metrics/reporters/reporters\";\nimport { reportUserSession } from \"./metrics/reporters/reportUserSession\";\n\n/**\n * CameraKit's public components (namespaced into feature areas).\n */\ninterface CameraKitComponents {\n    lenses: {\n        repository: {\n            loadLens: LensRepository[\"loadLens\"];\n            loadLensGroups: LensRepository[\"loadLensGroups\"];\n        };\n    };\n    metrics: MetricsEventTarget;\n}\n\ninterface CreateSessionsOptions {\n    /** Optionally provide an existing canvas element, on which the Live RenderTarget will be rendered.\n     * If this is not provided, CameraKit will create a new canvas element which can be added to the DOM.*/\n    liveRenderTarget?: HTMLCanvasElement;\n    /** Optionally provide boolean value, to determine whether to use web worker or not.\n     * Default is true, which will not allow tab backgroundVisibility change. */\n    renderWhileTabHidden?: boolean;\n}\n\n/**\n * Entry point to all CameraKit components, used to create {@link CameraKitSession}\n * instances (which implement the main bulk of the CameraKit API).\n *\n * Also provides access to various other CameraKit components:\n * - A Lens repository instance\n * - *more to come?*\n */\nexport class CameraKit {\n    readonly lenses: CameraKitComponents[\"lenses\"];\n    readonly metrics: CameraKitComponents[\"metrics\"];\n\n    constructor(\n        { lenses, metrics }: CameraKitComponents,\n        private readonly container: Container<RootServices>,\n        private readonly lensCore: LensCoreModule,\n        private readonly uriHandlers: UriHandlers,\n        private readonly lensContext: LensContext\n    ) {\n        this.lenses = lenses;\n        this.metrics = metrics;\n    }\n\n    /**\n     * Create a CameraKitSession.\n     *\n     * This will initialize the core Lens rendering engine and return a CameraKitSession instance, which can be used to\n     * add a media source, apply lenses, and access outputs.\n     *\n     * @param options configuration object when creating session\n     * @returns Promise<CameraKitSession>\n     */\n    readonly createSession = async ({\n        liveRenderTarget,\n        renderWhileTabHidden,\n    }: CreateSessionsOptions = {}): Promise<CameraKitSession> => {\n        // We'll proxy errors from LensCore (which will call an exceptionHandler each time a rendering error occurs) to\n        // an EventTarget – this target will be used by CameraKitSession to expose error events to consumers.\n        const eventTarget = new TypedEventTarget<CameraKitSessionEvents>();\n        const exceptionHandler = (error: Error) => {\n            eventTarget.dispatchEvent(new TypedCustomEvent(\"error\", error));\n        };\n\n        /**\n         * If/when we add support for multiple concurrent sessions, we'll need to create a copy of the LensCore WASM\n         * module. If we move managing web workers into JS, spawing a new worker thread with its own copy of LensCore\n         * probably becomes a lot more straightforward.\n         *\n         * Currently chromium has a bug preventing rendering while tab is hidden when LensCore is in worker mode.\n         * In order to process tab while it is hidden, the current stopgap is to pass in renderWhileTabHidden as true,\n         * which will initiate session in non worker mode, and set the RenderLoopMode to `SetTimeout`.\n         */\n        await new Promise<void>((onSuccess, onFailure) => {\n            this.lensCore.initialize({\n                canvas: liveRenderTarget,\n                shouldUseWorker: !renderWhileTabHidden && this.container.get(configurationToken).shouldUseWorker,\n                exceptionHandler,\n                onSuccess,\n                onFailure,\n            });\n        });\n\n        await new Promise<void>((onSuccess, onFailure) => {\n            this.lensCore.setRenderLoopMode({\n                mode: renderWhileTabHidden\n                    ? this.lensCore.RenderLoopMode.SetTimeout\n                    : this.lensCore.RenderLoopMode.RequestAnimationFrame,\n                onSuccess,\n                onFailure,\n            });\n        });\n        registerUriHandlers(this.lensCore, this.uriHandlers, this.lensContext);\n\n        // Each session gets its own DI Container – some Services provided by this Container may be shared with the\n        // root CameraKit Container, but others may be scoped to the session by passing their token to `copy()`.\n        const sessionContainer = this.container\n            // Right now this is a no-op. If/when we add support for multiple concurrent sessions, we may end up\n            // scoping LensCore to the session.\n            .copy()\n            .provides(Injectable(\"eventTarget\", () => eventTarget))\n            .provides(sessionStateEventTargetFactory)\n\n            // The `reportUserSession` metrics reporter has to be added *here* so that it can start listening for\n            // CameraKitSession state events (i.e. the \"sessionCreated\" event) before the session is created.\n            .run(reportUserSession)\n\n            // LensAssetsProvider can only be instantiated *after* LensCore::initialize() is called – otherwise the\n            // call to LensCore::setRemoteAssetsProvider() will not work and no remote assets will be loaded. So we\n            // provide it here, rather than in the RootContainer.\n            .provides(lensAssetsProviderFactory)\n            .provides(cameraKitSessionFactory)\n\n            // We'll run a PartialContainer containing reporters for session-scoped metrics. Running this container\n            // allows each metric reporter to initialize itself (e.g. by adding event listeners to detect when certain\n            // actions occur).\n            .run(sessionScopedMetricsReporters);\n\n        return sessionContainer.get(cameraKitSessionFactory.token);\n    };\n}\n\n/**\n * @internal\n */\nexport const cameraKitFactory = Injectable(\n    \"CameraKit\",\n    [\n        CONTAINER,\n        lensCoreFactory.token,\n        uriHandlersFactory.token,\n        lensContextFactory.token,\n        metricsEventTargetFactory.token,\n    ] as const,\n    (\n        container: Container<RootServices>,\n        lensCore: LensCoreModule,\n        uriHandlers: UriHandlers,\n        lensContext: LensContext,\n        metrics: MetricsEventTarget\n    ) =>\n        new CameraKit(\n            {\n                lenses: {\n                    repository: container.get(lensRepositoryFactory.token),\n                },\n                metrics,\n            },\n            container,\n            lensCore,\n            uriHandlers,\n            lensContext\n        )\n);\n","import { namedError } from \"./common/errors\";\n\nconst platformNotSupported = namedError(\"PlatformNotSupported\");\n\n/**\n * Error thrown when current platform is not supported by CameraKit.\n */\nexport type PlatformNotSupportedError = ReturnType<typeof platformNotSupported>;\n\n/**\n * Assert current platform is supported.\n */\nexport function assertPlatformSupported() {\n    const canvas = document.createElement(\"canvas\");\n    if (!canvas.getContext(\"webgl2\") && !canvas.getContext(\"webgl\")) {\n        throw platformNotSupported(\n            new Error(\"Cannot bootstrap the SDK because the browser does not support WebGL canvas rendering context.\")\n        );\n    }\n}\n","import { lensRepositoryFactory } from \"./lens/LensRepository\";\nimport { Container } from \"./dependency-injection/Container\";\nimport { CameraKit, cameraKitFactory } from \"./CameraKit\";\nimport { lensCoreFactory } from \"./lens-core-module/loader/lensCoreFactory\";\nimport { Injectable } from \"./dependency-injection/Injectable\";\nimport { remoteMediaAssetLoaderFactory } from \"./lens/assets/remoteMediaAssetLoaderFactory\";\nimport { deviceDependentAssetLoaderFactory } from \"./lens/assets/deviceDependentAssetLoader\";\nimport { staticAssetLoaderFactory } from \"./lens/assets/staticAssetLoader\";\nimport { defaultFetchHandlerFactory } from \"./handlers/defaultFetchHandler\";\nimport { cofHandlerFactory } from \"./handlers/cofHandler\";\nimport { cameraKitServiceFetchHandlerFactory } from \"./handlers/cameraKitServiceFetchHandlerFactory\";\nimport { CameraKitBootstrapConfiguration, createCameraKitConfigurationFactory } from \"./configuration\";\nimport { PublicServices } from \"./dependency-injection/RootServices\";\nimport { PartialContainer } from \"./dependency-injection/PartialContainer\";\nimport { metricsHandlerFactory } from \"./metrics/metricsHandler\";\nimport { operationalMetricReporterFactory } from \"./metrics/operationalMetricsReporter\";\nimport { lensSourcesFactory } from \"./extensions/LensSources\";\nimport { uriHandlersFactory } from \"./extensions/UriHandlers\";\nimport { assert } from \"./common/assertions\";\nimport { isSafeString } from \"./common/typeguards\";\nimport { lensContextFactory } from \"./session/LensContext\";\nimport { metricsEventTargetFactory } from \"./metrics/metricsEventTarget\";\nimport { globallyScopedMetricsReporters } from \"./metrics/reporters/reporters\";\nimport { setLogger } from \"./logger\";\nimport { namedError } from \"./common/errors\";\nimport { assertPlatformSupported } from \"./assertPlatformSupported\";\n\nconst configurationError = namedError(\"ConfigurationError\");\n\n/**\n * Error thrown when invalid configuration is supplied.\n */\nexport type ConfigurationError = ReturnType<typeof configurationError>;\n\n/**\n * A Container of public services available to be customized by client app.\n */\nexport type PublicContainer = Container<PublicServices>;\n\n/**\n * Bootstrap CameraKit by providing configuration values, optionally modifying CameraKit's dependency injection\n * container, and asynchronously loading the WebAssembly module responsible for CameraKit's core rendering.\n *\n * There are two ways in which CameraKit can be configured / modified to suit various applications:\n *   1. By providing configuration values to this function.\n *   2. By modifying CameraKit's dependency injection container to e.g. overwrite the implementation of some\n *      component used by CameraKit – say, the remoteMediaAssetLoader.\n *\n * The second approach requires some knowledge of CameraKit's dependency injection system (don't worry, it's very\n * simple) – still, it should be saved for applications with very specific, more advanced requirements.\n *\n * Here's an example of bootstrapping CameraKit – first, the most common use:\n * ```ts\n * const cameraKit = await bootstrapCameraKit(config)\n * ```\n * And here's an example which modifies the dependency injection container:\n * ```ts\n * const cameraKit = await bootstrapCameraKit(config, container => {\n *   return container.provides(lensRepositoryFactory.token, myCustomLensRepositoryFactory)\n * })\n * ```\n *\n * @param configuration Configure CameraKit with e.g. credentials, global resource endpoints, etc.\n * @param provide Optional function that can make modifications to CameraKit's root DI container.\n * @returns A {@link CameraKit} instance – can be used to create a {@link CameraKitSession},\n * which is the entry point for most of the CameraKit's API.\n *\n * Once called, the function returned here creates the main CameraKit object, which gives access to all the various\n * features of CameraKit.\n *\n * @throws\n *  - {@link ConfigurationError} when provided configuration object is invalid\n *  - {@link PlatformNotSupportedError} when current platform is not supported by CameraKit\n */\nexport async function bootstrapCameraKit(\n    configuration: CameraKitBootstrapConfiguration,\n    provide?: (c: PublicContainer) => PublicContainer\n): Promise<CameraKit> {\n    const startTimeMs = performance.now();\n\n    assert(isSafeString(configuration.apiToken), configurationError(new Error(\"Unsafe apiToken\")));\n    assertPlatformSupported();\n\n    if (configuration.logger) {\n        setLogger(configuration.logger);\n    }\n\n    const configurationFactory = createCameraKitConfigurationFactory(configuration);\n\n    const defaultPublicContainer = Container.provides(configurationFactory)\n        .provides(defaultFetchHandlerFactory)\n        .provides(remoteMediaAssetLoaderFactory)\n        .provides(lensSourcesFactory)\n        .provides(uriHandlersFactory);\n\n    const publicContainer = provide ? provide(defaultPublicContainer) : defaultPublicContainer;\n\n    // LensCore is a foundational component which must be created asynchronously. But it's annoying for every consumer\n    // of LensCore to have to wait on Promise<LensCore> (which means they become async themselves). So we'll create\n    // a DI container which provides Promise<LensCore>, wait for that promise once here, then create a new DI container\n    // that just contains LensCore.\n    const lensCore = await publicContainer.provides(lensCoreFactory).get(lensCoreFactory.token);\n\n    const container = publicContainer\n        .provides(Injectable(lensCoreFactory.token, () => lensCore))\n        .provides(metricsEventTargetFactory)\n        .provides(cameraKitServiceFetchHandlerFactory)\n        .provides(cofHandlerFactory)\n        .provides(lensContextFactory)\n        .provides(lensRepositoryFactory)\n        .provides(metricsHandlerFactory)\n        .provides(operationalMetricReporterFactory)\n        .provides(deviceDependentAssetLoaderFactory)\n        .provides(staticAssetLoaderFactory)\n        .provides(cameraKitFactory)\n        // We'll run a PartialContainer containing reporters for globally-scoped metrics. Running this container\n        // allows each metric reporter to initialize itself (e.g. by adding event listeners to detect when certain\n        // actions occur). This PartialContainer also includes the service which listens to locally-reported metrics\n        // and sends them to our backend.\n        .run(globallyScopedMetricsReporters);\n\n    const cameraKit = container.get(cameraKitFactory.token);\n\n    const bootstrapTimeMs = performance.now() - startTimeMs;\n\n    const reporter = container.get(operationalMetricReporterFactory.token);\n    reporter.timer(\"bootstrap_time\", bootstrapTimeMs);\n\n    return cameraKit;\n}\n\n/**\n * Extensions offer a way to provide custom implementations of certain parts of the CameraKit SDK.\n *\n * This enables more advanced use-cases, in which the default behavior of the SDK is substantially altered. For example,\n * replacing the default implementation that loads remote lens assets with a custom implementation that returns\n * different assets based on some business logic within the application.\n *\n * An extension is implemented as a [PartialContainer] – a collection of factory functions, each with its own\n * dependencies, which each provide some \"Service.\" A Service can be of any type, and the CameraKit SDK defines its\n * own Services, some of which can be overridden by providing a custom implementation of the type via an extension.\n *\n * Here's an example of how extensions might be used:\n * ```ts\n * import { bootstrapCameraKit, createExtension, remoteMediaAssetLoaderFactory } from '@snap/camera-kit'\n *\n * const myCustomRemoteAssetLoader = Injectable(\n *   remoteMediaAssetLoaderFactory.token,\n *   [remoteMediaAssetLoaderFactory.token] as const,\n *   (defaultLoader: AssetLoader): AssetLoader => {\n *     return async (asset, context) => {\n *       if (context.activeLens?.id === MY_SPECIAL_LENS) {\n *         return (await fetch('my/asset.glb')).arrayBuffer()\n *       }\n *       return defaultLoader(asset, context)\n *     }\n *   },\n * )\n *\n * const myExtension = createExtension().provides(myCustomeRemoteAssetLoader)\n * const cameraKit = bootstrapCameraKit(config, container => container.provides(myExtension))\n * ```\n *\n * This also enables greater modularity – the person/team creating the extension can do so in their own package, which\n * could be shared by many applications that all require the same functionality.\n *\n * @returns A [PartialContainer] which can be used to create a collection of Services, and can later be provided to\n * CameraKit's DI container during [bootstrapCameraKit].\n */\nexport function createExtension(): PartialContainer {\n    return new PartialContainer({});\n}\n","import { cameraKitUserAgent } from \"../common/cameraKitUserAgent\";\nimport { fullLocale } from \"../common/locale\";\nimport { ExtensionRequestContext } from \"../generated-proto/pb_schema/camera_kit/v3/export\";\n\nfunction getExtensionRequestContext(): ArrayBuffer {\n    return ExtensionRequestContext.encode({\n        userAgent: cameraKitUserAgent.userAgent,\n        locale: fullLocale,\n    }).finish();\n}\n\n/**\n * Extension request context.\n */\nexport const extensionRequestContext = getExtensionRequestContext();\n","import environment from \"./environment.json\";\nimport { cameraKitUserAgent } from \"./common/cameraKitUserAgent\";\nconsole.info(`SDK: ${environment.PACKAGE_VERSION} (${cameraKitUserAgent.lensCoreVersion})`);\n\nexport { CameraKitConfiguration, CameraKitBootstrapConfiguration, configurationToken } from \"./configuration\";\nexport { getRequiredBootstrapURLs } from \"./lens-core-module/loader/lensCoreFactory\";\nexport { estimateLensPerformance, EstimatedLensPerformance } from \"./benchmark/estimateLensPerformanceCluster\";\nexport * from \"./bootstrapCameraKit\";\nexport { extensionRequestContext } from \"./extensions/extensionRequestContext\";\nexport { LensSource, LensSources, lensSourcesFactory } from \"./extensions/LensSources\";\nexport {\n    Uri,\n    UriRequest,\n    UriResponse,\n    UriCancelRequest,\n    UriHandler,\n    UriHandlers,\n    uriHandlersFactory,\n} from \"./extensions/UriHandlers\";\nexport { CameraKit } from \"./CameraKit\";\nexport { cameraKitUserAgent, CameraKitUserAgent } from \"./common/cameraKitUserAgent\";\nexport { createArrayBufferParsingHandler } from \"./handlers/arrayBufferParsingHandler\";\nexport { defaultFetchHandlerFactory } from \"./handlers/defaultFetchHandler\";\nexport { ChainableHandler, Handler, HandlerChainBuilder, RequestMetadata } from \"./handlers/HandlerChainBuilder\";\nexport { createHeadersModifyingFetchHandler } from \"./handlers/headersModifyingFetchHandler\";\nexport { createNoCorsRetryingFetchHandler } from \"./handlers/noCorsRetryingFetchHandler\";\nexport { createRetryingHandler } from \"./handlers/retryingHandler\";\nexport { createTimeoutHandler } from \"./handlers/timeoutHandler\";\nexport * from \"./lens\";\nexport * from \"./lens-core-module/loader\";\nexport * from \"./media-sources/CameraKitSource\";\nexport * from \"./media-sources/MediaStreamSource\";\nexport * from \"./media-sources/FunctionSource\";\nexport * from \"./media-sources/VideoSource\";\nexport * from \"./media-sources/ImageSource\";\nexport * from \"./session/CameraKitSession\";\nexport { Injectable } from \"./dependency-injection/Injectable\";\nexport * from \"./transforms\";\nexport { PlatformNotSupportedError } from \"./assertPlatformSupported\";\n","// import * as Sentry from \"@sentry/browser\";\n// import { BrowserTracing } from \"@sentry/tracing\";\n\nimport { bootstrapCameraKit } from \"@snap/camera-kit\";\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// Sentry.init({\n//   dsn: \"https://6273fc3d2fa942a7979ccf70ec7d8973@o1410946.ingest.sentry.io/6748691\",\n//   integrations: [new BrowserTracing()],\n\n//   // Set tracesSampleRate to 1.0 to capture 100%\n//   // of transactions for performance monitoring.\n//   // We recommend adjusting this value in production\n//   tracesSampleRate: 1.0,\n// });\n\n// const root = ReactDOM.createRoot(\n//   document.getElementById('root') as HTMLElement\n// );\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nbootstrapCameraKit({\n  apiToken: \"asd\",\n})\n"],"names":["module","exports","e","t","r","n","o","i","l","call","m","c","d","Object","defineProperty","configurable","enumerable","get","__esModule","default","prototype","hasOwnProperty","p","s","value","splitValues","this","headersMap","Headers","getHeaderKeys","forEach","getHeaderValues","append","splitHeaderValue","Map","appendFromString","getOwnPropertyNames","Array","isArray","split","length","indexOf","substring","trim","delete","normalizeName","splice","push","normalizeValue","set","has","concat","toHeaders","Error","BrowserHeaders","iterateHeaders","Symbol","iterator","next","done","iterateHeadersKeys","keys","String","test","TypeError","toLowerCase","getAll","ChunkParser","ChunkType","encodeASCII","decodeASCII","fromCharCode","apply","slice","a","getUint8","u","getUint32","byteLength","Uint8Array","charCodeAt","MESSAGE","TRAILERS","buffer","position","parse","h","f","g","b","DataView","byteOffset","y","v","chunkType","trailers","Metadata","data","httpStatusToCode","Code","OK","Canceled","Unknown","InvalidArgument","DeadlineExceeded","NotFound","AlreadyExists","PermissionDenied","ResourceExhausted","FailedPrecondition","Aborted","OutOfRange","Unimplemented","Internal","Unavailable","DataLoss","Unauthenticated","client","started","sentFirstMessage","completed","closed","finishedSending","onHeadersCallbacks","onMessageCallbacks","onEndCallbacks","parser","methodDefinition","props","createTransport","host","service","serviceName","methodName","debug","url","onHeaders","onTransportHeaders","bind","onChunk","onTransportChunk","onEnd","onTransportEnd","transport","makeDefaultTransport","responseHeaders","JSON","stringify","rawOnHeaders","decodeGRPCStatus","rawOnError","message","responseType","deserializeBinary","rawOnMessage","responseTrailers","rawOnEnd","decodeURIComponent","setTimeout","toObject","onMessage","start","send","requestStream","frameRequest","sendMessage","finishSend","close","cancel","parseInt","arguments","console","log","grpc","setDefaultTransport","setDefaultTransportFactory","CrossBrowserHttpTransport","FetchReadableStreamTransport","XhrTransport","WebsocketTransport","invoke","unary","metadata","request","withCredentials","__assign","assign","detectFetchSupport","cancelled","controller","self","AbortController","options","init","pump","reader","catch","read","then","fetch","headers","method","body","signal","status","getReader","abort","Response","credentials","__extends","setPrototypeOf","__proto__","constructor","create","stringToArrayBuffer","MozChunkedArrayBufferXHR","XHR","detectMozXHRSupport","detectXHROverrideMimeTypeSupport","onProgressEvent","xhr","response","substr","index","onLoadEvent","onStateChange","readyState","XMLHttpRequest","HEADERS_RECEIVED","getAllResponseHeaders","open","configureXhr","setRequestHeader","join","Boolean","addEventListener","error","overrideMimeType","codePointAt","xhrSupportsResponseType","FINISH_SEND","Int8Array","CONNECTING","WebSocket","binaryType","onopen","onclose","onerror","onmessage","responseStream","statusMessage","serializeBinary","ArrayBuffer","setUint32","fn","ctx","params","offset","pending","Promise","resolve","reject","err","base64","string","charAt","Math","ceil","b64","s64","encode","end","parts","chunk","j","invalidEncoding","decode","undefined","EventEmitter","_listeners","on","evt","off","listeners","emit","args","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","replace","alloc","size","SIZE","MAX","slab","utf8","len","write","c1","c2","Long","wasm","WebAssembly","Instance","Module","low","high","unsigned","isLong","obj","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","result","min","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","toString","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","max","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","bytes","fromBytesLE","fromBytesBE","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","require","rpc","roots","LongBits","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","skip","skipType","wireType","BufferReader_","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","callback","asPromise","finish","endedByRPC","zero","zzEncode","zeroHash","from","isString","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","src","ifNotSet","newError","name","CustomError","properties","captureStackTrace","stack","pool","isNode","global","process","versions","node","window","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","encoding","allocUnsafe","Op","noop","State","writer","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","for","q","w","x","z","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","D","E","context","refs","updater","F","G","isReactComponent","setState","forceUpdate","H","isPureReactComponent","I","J","K","current","L","key","ref","__self","__source","M","k","children","defaultProps","$$typeof","type","_owner","O","P","Q","escape","R","N","A","S","T","_status","_result","U","V","transition","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Reflect","root","Function","exporter","makeExporter","target","previous","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","map","functionPrototype","getPrototypeOf","usePolyfill","_Map","entries","CreateMapPolyfill","_Set","Set","CreateSetPolyfill","WeakMap","CreateWeakMapPolyfill","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","DecorateProperty","ToPropertyKey","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","targetMetadata","decorated","descriptor","Create","MetadataKey","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","GetIterator","IteratorStep","nextValue","IteratorValue","IteratorClose","Type","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","toString_1","IsCallable","valueOf","toString_2","argument","ToString","func","iterResult","proto","prototypeProto","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","_find","clear","getKey","getValue","getEntry","insert","_","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","random","GenRandomBytes","crypto","getRandomValues","msCrypto","byte","__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","globalThis","_arrayLikeToArray","arr","arr2","_unsupportedIterableToArray","minLen","_s","_e","_arr","_n","_d","_createForOfIteratorHelper","allowArrayLike","it","normalCompletion","didErr","step","_e2","locale","navigator","language","fullLocale","languages","lang","qvalue","toFixed","normalizeBrands","brands","knownBrands","normalizedBrands","filter","brand","version","parsePlaftformName","userAgent","knownPlatforms","normalizedUserAgent","match","platform","includes","cameraKitUserAgent","userAgentData","mobile","normalizeUserAgentData","versionMatch","parseUserAgentData","platformVersion","parsePlatformVersion","deviceModel","userAgentWithModel","userAgentWithModel2","parseDeviceModel","browser","appId","location","hostname","ancestorOrigins","origin","top","_b","URL","shift","parseAppId","sdkLongVersion","environment","sdkShortVersion","flavor","lensCoreWasmVersions","osType","osVersion","lensCoreVersion","getCameraKitUserAgent","copyDefinedProperties","fromEntries","Injectable","token","dependenciesOrFn","maybeFn","dependencies","defaultConfiguration","shouldUseWorker","SNAP_CAMKIT_DEBUG_KEY","hasConfigurationOverrides","sessionStorage","getItem","setItem","configurationToken","createCameraKitConfigurationFactory","configuration","overrides","wasmEndpointOverride","logger","warn","getConfigurationOverrides","_typeof","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","state","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","object","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","simd","validate","loadScript","scriptUri","scriptElement","document","createElement","once","event","appendChild","isSafeString","encodeURIComponent","isNumber","isArrayOfType","elementTypeGuard","every","id","isUndefined","isRecord","isFunction","predicateRecordValues","predicate","isEmptyOrSafeUrl","urlString","protocol","instance","Constructor","_defineProperties","protoProps","staticProps","HandlerChainBuilder","inner","outer","req","innerCompleted","maybeAbort","aborted","removeEventListener","innerHandler","Proxy","thisArg","abortListeners","innerResponse","listener","outerResponse","logMethods","noopLogger","consoleLogger","loggerMap","setLogger","getLogger","prefix","scopedLogger","logMethod","logRetry","responseOrError","sleep","millis","randomInRange","defaultOptions","backoffMultiple","baseSleep","maxSleep","retryPredicate","ok","createRetryingHandler","definedOptions","jitterSleep","priorSleep","__awaiter","nextSleep","makeRequestAttempt","createError","destination","Request","timeout","createTimeoutHandler","meta","race","defaultFetchHandlerFactory","enable","startsWith","noCorsRequests","requestKey","noCorsRequest","mode","createNoCorsRetryingFetchHandler","wasmAssets","findMatch","regex","strings","find","getRequiredBootstrapURLs","endpointOverride","endpoint","buildNumber","asset","pathname","search","lensCoreFactory","handler","wasmEndpoint","assetURLs","lensCoreJS","lensCoreWASM","blob","glueScript","mainScriptUrlOrBlob","createObjectURL","initialModule","moduleInit","createLensesModule","instantiateWasm","importObject","receiveInstance","instantiateStreaming","compiledModule","lensCore","getCoreVersion","namedError","wrapError","outerError","innerErrorLike","innerError","ensureError","innerErrorMessage","cause","predicateMetadataKey","primitiveMap","number","boolean","ordinalSuffixMap","guard","parameterIndex","existingPredicates","types","predicates","isValueOfType","methodPath","getTypeName","indexSuffix","cameraKitServiceFetchHandlerFactory","defaultFetchHandler","modifyHeaders","apiToken","modifiedHeaders","LensSources","fallbackSources","source","groupId","lensId","isGroupOwner","getLensGroup","getLens","envelope","retrieveLenses","lensSourcesFactory","empty","assertUnreachable","assert","condition","isLensProto","vendorData","content","iconUrlBolt","lnsSha256","lnsUrlBolt","preview","imageUrl","isLensContent","toPublicLens","cameraFacingPreference","iconUrl","BASE_PATH","getRequestId","retrieveCameraKitLens","httpClient","lens","retrieveCameraKitLensGroup","lenses","createBaseAny","typeUrl","Any","tag","atob","btoa","Lens_CameraFacing","LensAssetManifestItem_Type","LensAssetManifestItem_RequestTiming","lens_CameraFacingFromJSON","CAMERA_FACING_UNSET","CAMERA_FACING_FRONT","CAMERA_FACING_BACK","UNRECOGNIZED","lensAssetManifestItem_TypeFromJSON","DEVICE_DEPENDENT_ASSET_UNSET","ASSET","lensAssetManifestItem_TypeToNumber","lensAssetManifestItem_RequestTimingFromJSON","PRELOAD_UNSET","ON_DEMAND","REQUIRED","lensAssetManifestItem_RequestTimingToNumber","createBaseLens","isThirdParty","featureMetadata","Lens","entry3","Lens_VendorDataEntry","Content","fromJSON","toJSON","fromPartial","lnsUrl","Preview","assetManifest","LensAssetManifestItem","defaultHintId","hintTranslations","Content_HintTranslationsEntry","entry7","reduce","acc","_c","_f","_g","_h","createBaseLensAssetManifestItem","requestTiming","assetUrl","assetChecksum","lensAssetManifestItem_TypeToJSON","lensAssetManifestItem_RequestTimingToJSON","ExportLensesByIdRequest_Context_Extension_Name","ExportLensesByIdResponse_ExcludedLens_Code","ExtensionRequestContext","Envelope","decodeEnvelopes","envelopes","decodeEnvelope","LensRepository","lensSources","lensCache","groupIds","all","responses","errors","__decorate","__param","lensRepositoryFactory","fetchHandler","_defineProperty","isMemoized","memoize","memo","memoized","PartialContainer","injectables","CONTAINER","Container","factories","scopedServices","fnOrContainer","runnableContainer","provides","getTokens","providesContainer","providesService","container","getFactories","getTimeMs","performance","now","_setPrototypeOf","_getPrototypeOf","_isNativeReflectConstruct","construct","sham","_possibleConstructorReturn","ReferenceError","_construct","Parent","Class","_wrapNativeSuper","_cache","Wrapper","BenchmarkName","TypedCustomEvent","subClass","superClass","Derived","hasNativeReflectConstruct","Super","NewTarget","detail","eventInitDict","CustomEvent","TypedEventTarget","dispatchEvent","requestId","safeParseInt","maybeInt","requestStateEventTarget","dispatchRequestStarted","timeMs","dispatchRequestCompleted","dispatchRequestErrored","errored","lensContextFactory","activeLens","sessionStateEventTargetFactory","_m0","baseTimestamp","seconds","nanos","Timestamp","longToNumber","long","MAX_SAFE_INTEGER","Ruid_Type","baseBenchmarkValue","BenchmarkValue","intValue","longValue","boolValue","floatValue","baseBenchmarkRequest","benchmarkNames","BenchmarkRequest","end2","expirationTimestamp","fromTimestamp","baseBenchmarkResult","BenchmarkResult","Date","baseRuid","stringValue","loggingIdValue","Ruid","ConfigTargetingTriggerEventType","ConfigTargetingAppState","ConfigTargetingInstrumentation","Connectivity_NetworkType","baseBoolValue","BoolValue","baseConfigTargetingRequest","configResultsEtag","namespaces","ghostId","countryCode","screenWidth","screenHeight","maxVideoWidthPx","maxVideoHeightPx","deltaSync","triggerEventType","appState","deviceId","userId","clientIp","isUnAuthorized","appLocale","instrumentation","lastSuccessfulSync","isLogout","packageInstaller","syncTriggerBlizzardSessionId","syncExecutionBlizzardSessionId","cofSyncTriggerDelayFromStartupMs","cofSyncExecutionDelayFromStartupMs","syncTriggerTime","snapkitAppId","lenscoreVersion","configNames","includeTestUserTreatments","disableExposureLogging","lensClusterOrig4","ConfigTargetingRequest","connectivity","Connectivity","benchmarkResults","decoderEncoderAvailability","DecoderEncoderAvailablity","ruid","baseConnectivity","networkType","carrier","isMetered","isRoaming","baseDecoderEncoderAvailablity","isSnapVp9DecoderAvailable","isSnapAv1DecoderAvailable","baseAny","ConfigResult_ServePlatform","ClientTargetingExpression_Operator","ClientTargetingExpression_PredicateOperator","ClientTargetingExpression_Property","ClientTargetingExpression_PropertyMetadata_SignalToHash","baseMapRecord","MapRecord","baseMapRecords","MapRecords","records","baseValue","Value","doubleValue","anyValue","mapValue","intPairValue","baseConfigResult","configId","ttlSeconds","priority","namespace","studyName","experimentId","servePlatforms","sequenceId","ruidType","segmentOrdinal","generatedFromAbAllowlists","ConfigResult","configRuleUuidBytes","targetingExpression","ClientTargetingExpression","baseClientTargetingExpression","operator","property","predicateOperator","propertyMetadata","ClientTargetingExpression_PropertyMetadata","baseClientTargetingExpression_PropertyMetadata","itemId","signalToHash","abNamespaceForHashing","abSeedForHashing","Namespace","baseConfigTargetingResponseDebugData","abResultChecksumInput","ConfigTargetingResponseDebugData","baseConfigTargetingResponse","fullResults","abResultChecksum","iso3166Alpha2CountryCodeFromRequestIp","ConfigTargetingResponse","configResults","benchmarkRequest","debugData","targetingPropertyValueProviders","registerPropertyValueProvider","targetingProperty","provider","modules","installedModules","util_1","_this","pairs","normalizedKey","existing","arrayValue","normalized_1","keyArray","normalizedValue","headers_1","BrowserHeaders_1","iterateHeaders_1","headersAsNative","asMap","commaSpaceValue","commaValue","GrpcWebImpl","methodDesc","_request","requestType","maybeCombinedMetadata","code","CONTEXT_KEY","DEFAULT_SETTINGS","getContext","getContextValidated","initConfigsClient","settings","existingContext","setContext","WEB_SCREEN_HEIGHT","innerHeight","WEB_SCREEN_WIDTH","innerWidth","CircumstancesServiceTargetingQueryDesc","AbStep","CofStep","FieldDescriptorProto_Type","FieldDescriptorProto_Label","FileOptions_OptimizeMode","FieldOptions_CType","FieldOptions_JSType","MethodOptions_IdempotencyLevel","SnapProStatus","GetConfigsValueByPropertiesRequest_SourceOfOrigin","StudyMetadata_ServePlatform","StudyMetadata_Status","StudyMetadata_SegmentType","StudyMetadata_TargetingExpression_Operator","StudyMetadata_TargetingExpression_PredicateOperator","StudyMetadata_TargetingExpression_Property","IdType","LoggingType","CustomExposureLogger","ConfigContext","createArrayBufferParsingHandler","arrayBuffer","isValidKey","wrapRequest","onsuccess","wrapCursorRequest","cursor","continue","IndexedDBPersistence","databaseName","databaseVersion","objectStore","db","openDatabase","indexedDB","simpleTransaction","store","results","transaction","openCursor","deleteRequests","keyOrValue","maybeValue","put","storedKey","dbPromise","onupgradeneeded","createObjectStore","autoIncrement","DOMException","operation","tx","oncomplete","onabort","doCofRequest","cofRequest","cofMetadata","COF_REQUEST_TYPE","cofHandlerFactory","dimensions","sizeByte","TextEncoder","keyResolver","maxAge","retrieve","timestamp","staleIfErrorCachingHandler","createAssetIdToUrlMap","configs","hasStringValue","config","checksum","isAssetConfig","EncryptionData_EncryptionScheme","SnappableMessage_ReplyType","deviceDependentAssetLoaderFactory","cofHandler","assetHandler","cofConfigPromise","lensPerformance","cluster","LENS_CORE","memoizedCreateAssetIdToUrlMap","assetId","cofConfig","assetConfig","remoteMediaAssetLoaderFactory","staticAssetLoaderFactory","lensRepository","lensContent","getCachedLens","manifest","assetRequestTimingsToPreload","LensAssetsProvider","assetLoaders","lensContext","stateTarget","setRemoteAssetsProvider","assetDescriptor","provideRemoteAsset","assets","assetType","convertToLensCoreAssetType","AssetType","Static","DeviceDependent","assetTypeName","assetLoader","assetResponse","assetBuffer","assetLoaderName","onFailure","wrappedError","getAsset","provideRemoteAssetsResponse","lensAssetsProviderFactory","deviceDependentAssetLoader","remoteMediaAssetLoader","RemoteMediaByUrl","encryptionData_EncryptionSchemeFromJSON","NOT_APPLICABLE","SPOOKEY","REGISTRY","FIDELIUS","encryptionData_EncryptionSchemeToNumber","createBaseEncryptionData","ivStore","isKeyServerEncrypted","isKeyE2eEncrypted","encryptionScheme","EncryptionData","EncryptionData_IvStoreEntry","entry2","bytesFromBase64","base64FromBytes","encryptionData_EncryptionSchemeToJSON","createBaseEncryptionData_IvStoreEntry","createBasePlayerData","serializedStore","PlayerData","PlayerData_StoreEntry","entry1","SessionData","playerData","SessionData_PlayerDataEntry","Snappable","sessionId","playerId","sessionData","createdTime","expireTime","encryptionData","sessionDepth","bin","Geopoint","latitude","longitude","Geocircle","radius","center","Lures","locations","activeLure","closestLure","UserData_Zodiac","userData_ZodiacToNumber","Invalid","Aquarius","Aries","Cancer","Capricorn","Gemini","Leo","Libra","Pisces","Sagittarius","Scorpio","Taurus","Virgo","BitmojiUserInfo","avatarId","selfieId","FriendUserInfo","friendshipStart","toTimestamp","lastInteraction","streak","createBaseUserData","username","birthdate","countrycode","score","bitmojiInfo","friendInfo","zodiac","UserData","date","getTime","createBasePersistentStore","PersistentStore","createBaseLaunchParams","LaunchParams","LaunchData_EntryPoint","LaunchData_ApiDescriptor","launchData_EntryPointToNumber","LIVE_CAMERA","STORY_REPLY","CHAT_REPLY","RESTART","PREVIEW_CANCEL","MAP","launchData_ApiDescriptorToNumber","NONE","EXPERIMENTAL","createBaseLaunchData","snappable","lures","entryPoint","userData","persistentStore","launchParams","apiDescriptors","LaunchData","isNotValid","isValidNumber","isLaunchParamsValid","createLaunchData","onHiddenHandlers","onVisibleHandlers","previousVisibilityState","visibilityState","visibilityTransition","initialized","maybeInitializeVisibilityListeners","handlers","isDuringVisibilityTransition","onPageHidden","Transform2D","matrix","defaultDeviceInfo","cameraType","fpsLimit","POSITIVE_INFINITY","createNotAttachedError","CameraKitSource","sourceInfo","subscriber","deviceInfo","reportError","onSuccess","useMediaElement","autoplayNewMedia","autoplayPreviewCanvas","media","pauseExistingMedia","replayTrackingData","requestWebcam","startOnFrontCamera","useManualFrameProcessing","fps","setFPSLimit","onAttach","onDetach","width","height","setRenderSize","transform","setInputTransform","createMediaStreamSource","stream","getVideoTracks","getSettings","setTransform","trackingData","createVideoSource","video","videoWidth","videoHeight","defaultFrameProcessingMetricsState","avgFps","averageProcessingTime","procFrameCount","procFrameMean","procFrameD2","FrameProcessingMetrics","setOnFrameProcessedCallback","onFrameProcessed","processingTimeMs","computeRunningStats","lensFrameProcessingTimeMsAvg","lensFrameProcessingTimeMsStd","sqrt","delta2","priorFrameCompletedTime","frameDurationSec","isOptionalRenderTarget","CameraKitSession","events","fetchLens","lensAssetsProvider","outputs","getOutputCanvases","output","live","CanvasType","capture","Capture","playing","frameProcessingMetrics","removeOnHidden","removeOnVisible","removePageVisibilityHandlers","frames","metrics","binaryLaunchData","removeLens","dispatch","eventType","cachedLens","updateLensContext","preloadManifestData","finally","lensDataBuffer","lensInput","lensChecksum","onTurnOn","onTurnOff","onResourcesLoaded","onFirstFrameProcessed","launchData","addLens","clearAllLenses","renderTargetToCanvasType","playCanvas","onReady","priorPlayingState","pauseCanvas","safelyDetachSource","cameraKitSource","MediaStream","HTMLVideoElement","attach","play","teardown","All","detach","partialContext","isPreview","cameraKitSessionFactory","eventTarget","SEPARATOR","extractSchemeAndRoute","uri","separatorIndex","isUri","isUriHandler","handleRequest","cancelRequest","isUriResponse","description","contentType","isArrayBuffer","isTypedArray","uriHandlersFactory","registerUriHandlers","uriHandlers","scheme","route","registerUriListener","provideUriResponse","identifier","metricsEventTargetFactory","rnds8","rng","uuid","REGEX","byteToHex","AppType","Collection","rnds","createMappingHandler","maxMapConcurrency","flushOnPageHidden","mapConcurrency","processRequest","mapped","mappableRequest","mappedRequest","createBatchingHandler","batchTimeout","batchReduce","isBatchComplete","maxBatchAge","doFlushOnPageHidden","currentBatch","clearOnHidden","reducingHandler","batchAndSend","batch","clearTimeout","sendBatch","ServerEvent","eventName","serverTs","country","city","region","eventId","instanceId","appVersion","appBuild","serverUploadTs","eventTime","serverReceiptTime","maxSequenceIdOnInstance","userGuid","collection","serviceId","appType","eventData","_j","_k","_l","_m","_o","_p","_q","_r","_t","_u","_v","_w","_x","ServerEventData","cameraKitException","cameraKitLensSpin","cameraKitAssetDownload","cameraKitLensContentValidationFailed","cameraKitLensDownload","cameraKitAssetValidationFailed","cameraKitSession","cameraKitWebLensSwipe","cameraKitWebBenchmarkComplete","CameraKitException","CameraKitLensSpin","CameraKitAssetDownload","CameraKitLensContentValidationFailed","CameraKitLensDownload","CameraKitAssetValidationFailed","CameraKitWebLensSwipe","CameraKitWebBenchmarkComplete","cameraKitEventBase","viewTimeSec","CameraKitEventBase","performanceCluster","webglRendererInfo","recordingTimeSec","applyDelaySec","isLensFirstWithinDay","isLensFirstWithinMonth","automaticDownload","downloadTimeSec","reason","DailySessionBucket","dailySessionBucket","isFirstWithinMonth","day","month","year","CameraKitConnectivityType","CameraKitFlavor","CameraKitVariant","KitPluginType","KitType","benchmarkName","benchmarkValue","kitEventBase","deviceCluster","cameraKitVersion","cameraKitVariant","cameraKitFlavor","deviceConnectivity","appVendorUuid","rankingRequestId","KitEventBase","oauthClientId","kitUserAgent","ipAddress","osMinorVersion","kitVariant","kitVariantVersion","kitClientTimestampMillis","clientSequenceId","maxClientSequenceIdOnInstance","targetArchitecture","runningWithDebuggerAttached","runningInTests","runningInSimulator","isAppPrerelease","kitAppId","kitSessionId","kitPluginType","isFromReactNativePlugin","delay","duration","metricsHandlerFactory","mostRecentSendTime","mappingHandler","millisUntilNextSend","createRateLimitingHandler","listenAndReport","metricsEventTarget","metricsHandler","eventHandlers","v4","batchEvents","serverEvents","keepalive","previousBundle","businessEvent","bundle","createEventData","blizzard","sendServerEvent","businessEventsReporterFactory","assetDownload","assetValidationFailed","benchmarkComplete","lensDownload","lensView","lensWait","lensContentValidationFailed","session","OperationalMetric","toISOString","metric","$case","count","latencyMillis","histogram","OperationalMetricsBundle","SetOperationalMetricsRequest","OperationalMetricsReporter","serializedDimensions","operationalMetricReporterFactory","reportableBenchmarks","reportBenchmarks","reporter","baseBenchmark","benchmarks","benchmark","reportException","scan","seedState","eventTypes","accumulator","sink","hasListener","relevantRequestTypes","isLensOrAssetRequest","reportLensAndAssetDownload","inProgress","startTimeMs","completedRequest","getContentType","reportHttpMetrics","downloadTimeMs","downloadSizeKb","getSizeKb","getStatus","operationalDimensions","connection","timer","reportLensOrAssetValidationFailed","nextEvent","reportLensView","operationalMetricsReporter","abortController","maybeDispatchLensView","measureLensView","lensLoadedTime","lensTurnedOnTime","lensTurnedOffTime","lensInitiatedTime","applyDelay","lensLoadedTimeMs","hasSuspended","onSessionSuspended","onSessionResumed","isSameLens","maybeSameLens","reportLensWait","waitingDurationMs","waitingStartTimeMs","waiting","recordEvent","globallyScopedMetricsReporters","sessionScopedMetricsReporters","reportUserSession","userSessionKey","toLocaleDateString","timeZone","currentMonth","getMonth","currentDay","getDate","currentYear","getFullYear","userSessionInfo","mostRecentSessionStartDate","dailySessionBucketMap","ONE_SESSION","TWO_SESSION","THREE_SESSION","FOUR_SESSION","FIVE_SESSION","SIX_SESSION","SEVEN_SESSION","EIGHT_SESSION","NINE_SESSION","NO_SESSION_BUCKET","TEN_OR_MORE_SESSION","remove","CameraKit","createSession","liveRenderTarget","renderWhileTabHidden","exceptionHandler","initialize","canvas","setRenderLoopMode","RenderLoopMode","SetTimeout","RequestAnimationFrame","sessionContainer","run","cameraKitFactory","repository","platformNotSupported","assertPlatformSupported","configurationError","provide","configurationFactory","defaultPublicContainer","publicContainer","cameraKit","bootstrapTimeMs","bootstrapCameraKit"],"sourceRoot":""}